# script auto-generated by phenix.molprobity


from __future__ import absolute_import, division, print_function
from six.moves import cPickle as pickle
from six.moves import range
try :
  import gobject
except ImportError :
  gobject = None
import sys

class coot_extension_gui(object):
  def __init__(self, title):
    import gtk
    self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
    scrolled_win = gtk.ScrolledWindow()
    self.outside_vbox = gtk.VBox(False, 2)
    self.inside_vbox = gtk.VBox(False, 0)
    self.window.set_title(title)
    self.inside_vbox.set_border_width(0)
    self.window.add(self.outside_vbox)
    self.outside_vbox.pack_start(scrolled_win, True, True, 0)
    scrolled_win.add_with_viewport(self.inside_vbox)
    scrolled_win.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)

  def finish_window(self):
    import gtk
    self.outside_vbox.set_border_width(2)
    ok_button = gtk.Button("  Close  ")
    self.outside_vbox.pack_end(ok_button, False, False, 0)
    ok_button.connect("clicked", lambda b: self.destroy_window())
    self.window.connect("delete_event", lambda a, b: self.destroy_window())
    self.window.show_all()

  def destroy_window(self, *args):
    self.window.destroy()
    self.window = None

  def confirm_data(self, data):
    for data_key in self.data_keys :
      outlier_list = data.get(data_key)
      if outlier_list is not None and len(outlier_list) > 0 :
        return True
    return False

  def create_property_lists(self, data):
    import gtk
    for data_key in self.data_keys :
      outlier_list = data[data_key]
      if outlier_list is None or len(outlier_list) == 0 :
        continue
      else :
        frame = gtk.Frame(self.data_titles[data_key])
        vbox = gtk.VBox(False, 2)
        frame.set_border_width(6)
        frame.add(vbox)
        self.add_top_widgets(data_key, vbox)
        self.inside_vbox.pack_start(frame, False, False, 5)
        list_obj = residue_properties_list(
          columns=self.data_names[data_key],
          column_types=self.data_types[data_key],
          rows=outlier_list,
          box=vbox)

# Molprobity result viewer
class coot_molprobity_todo_list_gui(coot_extension_gui):
  data_keys = [ "rama", "rota", "cbeta", "probe" ]
  data_titles = { "rama"  : "Ramachandran outliers",
                  "rota"  : "Rotamer outliers",
                  "cbeta" : "C-beta outliers",
                  "probe" : "Severe clashes" }
  data_names = { "rama"  : ["Chain", "Residue", "Name", "Score"],
                 "rota"  : ["Chain", "Residue", "Name", "Score"],
                 "cbeta" : ["Chain", "Residue", "Name", "Conf.", "Deviation"],
                 "probe" : ["Atom 1", "Atom 2", "Overlap"] }
  if (gobject is not None):
    data_types = { "rama" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "rota" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cbeta" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "probe" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT] }
  else :
    data_types = dict([ (s, []) for s in ["rama","rota","cbeta","probe"] ])

  def __init__(self, data_file=None, data=None):
    assert ([data, data_file].count(None) == 1)
    if (data is None):
      data = load_pkl(data_file)
    if not self.confirm_data(data):
      return
    coot_extension_gui.__init__(self, "MolProbity to-do list")
    self.dots_btn = None
    self.dots2_btn = None
    self._overlaps_only = True
    self.window.set_default_size(420, 600)
    self.create_property_lists(data)
    self.finish_window()

  def add_top_widgets(self, data_key, box):
    import gtk
    if data_key == "probe" :
      hbox = gtk.HBox(False, 2)
      self.dots_btn = gtk.CheckButton("Show Probe dots")
      hbox.pack_start(self.dots_btn, False, False, 5)
      self.dots_btn.connect("toggled", self.toggle_probe_dots)
      self.dots2_btn = gtk.CheckButton("Overlaps only")
      hbox.pack_start(self.dots2_btn, False, False, 5)
      self.dots2_btn.connect("toggled", self.toggle_all_probe_dots)
      self.dots2_btn.set_active(True)
      self.toggle_probe_dots()
      box.pack_start(hbox, False, False, 0)

  def toggle_probe_dots(self, *args):
    if self.dots_btn is not None :
      show_dots = self.dots_btn.get_active()
      overlaps_only = self.dots2_btn.get_active()
      if show_dots :
        self.dots2_btn.set_sensitive(True)
      else :
        self.dots2_btn.set_sensitive(False)
      show_probe_dots(show_dots, overlaps_only)

  def toggle_all_probe_dots(self, *args):
    if self.dots2_btn is not None :
      self._overlaps_only = self.dots2_btn.get_active()
      self.toggle_probe_dots()

class rsc_todo_list_gui(coot_extension_gui):
  data_keys = ["by_res", "by_atom"]
  data_titles = ["Real-space correlation by residue",
                 "Real-space correlation by atom"]
  data_names = {}
  data_types = {}

class residue_properties_list(object):
  def __init__(self, columns, column_types, rows, box,
      default_size=(380,200)):
    assert len(columns) == (len(column_types) - 1)
    if (len(rows) > 0) and (len(rows[0]) != len(column_types)):
      raise RuntimeError("Wrong number of rows:\n%s" % str(rows[0]))
    import gtk
    self.liststore = gtk.ListStore(*column_types)
    self.listmodel = gtk.TreeModelSort(self.liststore)
    self.listctrl = gtk.TreeView(self.listmodel)
    self.listctrl.column = [None]*len(columns)
    self.listctrl.cell = [None]*len(columns)
    for i, column_label in enumerate(columns):
      cell = gtk.CellRendererText()
      column = gtk.TreeViewColumn(column_label)
      self.listctrl.append_column(column)
      column.set_sort_column_id(i)
      column.pack_start(cell, True)
      column.set_attributes(cell, text=i)
    self.listctrl.get_selection().set_mode(gtk.SELECTION_SINGLE)
    for row in rows :
      self.listmodel.get_model().append(row)
    self.listctrl.connect("cursor-changed", self.OnChange)
    sw = gtk.ScrolledWindow()
    w, h = default_size
    if len(rows) > 10 :
      sw.set_size_request(w, h)
    else :
      sw.set_size_request(w, 30 + (20 * len(rows)))
    sw.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
    box.pack_start(sw, False, False, 5)
    inside_vbox = gtk.VBox(False, 0)
    sw.add(self.listctrl)

  def OnChange(self, treeview):
    import coot # import dependency
    selection = self.listctrl.get_selection()
    (model, tree_iter) = selection.get_selected()
    if tree_iter is not None :
      row = model[tree_iter]
      xyz = row[-1]
      if isinstance(xyz, tuple) and len(xyz) == 3 :
        set_rotation_centre(*xyz)
        set_zoom(30)
        graphics_draw()

def show_probe_dots(show_dots, overlaps_only):
  import coot # import dependency
  n_objects = number_of_generic_objects()
  sys.stdout.flush()
  if show_dots :
    for object_number in range(n_objects):
      obj_name = generic_object_name(object_number)
      if overlaps_only and not obj_name in ["small overlap", "bad overlap"] :
        sys.stdout.flush()
        set_display_generic_object(object_number, 0)
      else :
        set_display_generic_object(object_number, 1)
  else :
    sys.stdout.flush()
    for object_number in range(n_objects):
      set_display_generic_object(object_number, 0)

def load_pkl(file_name):
  pkl = open(file_name, "rb")
  data = pickle.load(pkl)
  pkl.close()
  return data

data = {}
data['rama'] = [('A', '  37 ', 'LEU', 0.044210794131155966, (45.79, -3.104000000000001, 11.536999999999999)), ('B', '  37 ', 'LEU', 0.04447514063112085, (45.612, -12.289000000000001, 0.682)), ('C', '  37 ', 'LEU', 0.044161782713445875, (45.552, -4.757, -11.438999999999998)), ('D', '  37 ', 'LEU', 0.043848251186136986, (45.66399999999999, 9.106, -8.036999999999999)), ('E', '  37 ', 'LEU', 0.0441109290440396, (45.81299999999999, 10.140000000000002, 6.166999999999998)), ('A', '  37 ', 'LEU', 0.024126272492401783, (44.43099999999998, -9.121, 7.746999999999999)), ('B', '  37 ', 'LEU', 0.024073170828355053, (44.329, -10.298, -6.356)), ('C', '  37 ', 'LEU', 0.024180671808115256, (44.308, 2.6830000000000003, -11.875999999999998)), ('D', '  37 ', 'LEU', 0.02394848840680354, (44.423, 11.976, -1.16)), ('E', '  37 ', 'LEU', 0.02400237032221194, (44.478, 4.664, 10.986))]
data['omega'] = []
data['rota'] = [('A', '  11 ', 'THR', 0.008159601566148922, (5.932, -8.578000000000003, 4.16)), ('A', '  21 ', 'LEU', 0.013312928775321113, (23.036, -4.666000000000001, 5.851999999999999)), ('A', '  23 ', 'PHE', 0.013838783949467583, (26.577, -5.438, 9.917999999999997)), ('A', '  24 ', 'VAL', 0.02205372729804367, (27.721, -6.013000000000001, 6.347999999999999)), ('A', '  28 ', 'LEU', 0.1246761122568418, (33.664, -4.824, 4.828)), ('A', '  30 ', 'THR', 0.0258387386566028, (36.864, -5.552, 9.037999999999998)), ('A', '  34 ', 'LEU', 0.027523788856845265, (42.608, -6.936999999999999, 8.88)), ('A', '  37 ', 'LEU', 0.15389204888819072, (45.79, -3.104000000000001, 11.536999999999999)), ('B', '  11 ', 'THR', 0.008159601566148922, (5.849, -6.392000000000001, -6.872)), ('B', '  21 ', 'LEU', 0.01353109728359541, (22.937, -7.036, -2.601)), ('B', '  23 ', 'PHE', 0.013709288981005938, (26.417, -11.192000000000004, -2.0719999999999996)), ('B', '  24 ', 'VAL', 0.02205372729804367, (27.609999999999992, -7.993000000000003, -3.7199999999999993)), ('B', '  28 ', 'LEU', 0.12433105254165326, (33.578, -6.266000000000002, -3.052)), ('B', '  30 ', 'THR', 0.0258387386566028, (36.714, -10.541, -2.433)), ('B', '  34 ', 'LEU', 0.027602842611678547, (42.455, -10.902000000000001, -3.789999999999999)), ('B', '  37 ', 'LEU', 0.15221280201541443, (45.612, -12.289000000000001, 0.682)), ('C', '  11 ', 'THR', 0.008159601566148922, (5.912, 4.773, -8.153)), ('C', '  21 ', 'LEU', 0.013388269943471039, (22.941, 0.282, -7.453)), ('C', '  23 ', 'PHE', 0.013894907143626995, (26.398, -1.545, -11.245)), ('C', '  24 ', 'VAL', 0.02205372729804367, (27.625, 0.9899999999999999, -8.705)), ('C', '  28 ', 'LEU', 0.12349093404382656, (33.591, 0.805, -6.854)), ('C', '  30 ', 'THR', 0.0258387386566028, (36.702, -1.136, -10.732)), ('C', '  34 ', 'LEU', 0.027610481975224865, (42.459, -0.033, -11.490999999999996)), ('C', '  37 ', 'LEU', 0.1530305481885802, (45.552, -4.757, -11.438999999999998)), ('D', '  11 ', 'THR', 0.008159601566148922, (6.027999999999998, 9.409, 2.062)), ('D', '  21 ', 'LEU', 0.013423639835069822, (23.032, 7.148000000000001, -1.995)), ('D', '  23 ', 'PHE', 0.013822587976788401, (26.52199999999999, 10.142000000000003, -4.914)), ('D', '  24 ', 'VAL', 0.02205372729804367, (27.732, 8.506, -1.7149999999999999)), ('D', '  28 ', 'LEU', 0.12406302968665375, (33.67599999999999, 6.621, -1.317)), ('D', '  30 ', 'THR', 0.0258387386566028, (36.821, 9.666000000000004, -4.372)), ('D', '  34 ', 'LEU', 0.02754302503853114, (42.591, 10.665000000000001, -3.564)), ('D', '  37 ', 'LEU', 0.15334693483968284, (45.66399999999999, 9.106, -8.036999999999999)), ('E', '  11 ', 'THR', 0.008159601566148922, (6.059, 1.1510000000000002, 9.689)), ('E', '  21 ', 'LEU', 0.01337827231649053, (23.098, 4.092, 6.235999999999998)), ('E', '  23 ', 'PHE', 0.013757447453807919, (26.644, 7.744, 8.174999999999999)), ('E', '  24 ', 'VAL', 0.021880302899415924, (27.805, 4.18, 7.599)), ('E', '  28 ', 'LEU', 0.12481248774631082, (33.72999999999999, 3.141999999999999, 5.908)), ('E', '  30 ', 'THR', 0.0258387386566028, (36.934, 6.944000000000001, 7.855)), ('E', '  34 ', 'LEU', 0.02757270819454623, (42.7, 6.404000000000001, 9.036)), ('E', '  37 ', 'LEU', 0.15380195289980625, (45.81299999999999, 10.140000000000002, 6.166999999999998)), ('A', '  11 ', 'THR', 0.015562180145670455, (6.488, -7.966000000000001, 2.05)), ('A', '  18 ', 'LEU', 0.10155417586532253, (17.19, -5.544, 4.467)), ('A', '  19 ', 'LEU', 0.04809431914263563, (18.25, -2.9, 7.007999999999998)), ('A', '  21 ', 'LEU', 0.027519106957081856, (22.646, -3.870999999999999, 4.468999999999999)), ('A', '  23 ', 'PHE', 0.023109473717159486, (26.136999999999993, -4.6419999999999995, 8.645)), ('A', '  29 ', 'VAL', 0.1521817582366327, (35.795, -2.057, 7.472)), ('A', '  30 ', 'THR', 0.01164874743382894, (36.897, -4.851, 9.799)), ('A', '  31 ', 'LEU', 0.04952498956587681, (38.896, -6.28, 6.922)), ('A', '  33 ', 'ILE', 0.12657429244014767, (41.269, -1.9920000000000002, 9.083999999999998)), ('A', '  34 ', 'LEU', 0.10007174082325895, (42.716999999999985, -5.426, 9.842999999999998)), ('A', '  35 ', 'THR', 0.008525788156933377, (45.613, -4.264000000000002, 7.668)), ('A', '  38 ', 'ARG', 0.22800002202850475, (44.423, 2.077, 12.837)), ('B', '  11 ', 'THR', 0.015822938173613278, (6.437, -4.139, -6.901999999999999)), ('B', '  18 ', 'LEU', 0.10118961396492984, (17.112, -5.856, -3.8489999999999993)), ('B', '  19 ', 'LEU', 0.048049630552813145, (18.146, -7.483, -0.555)), ('B', '  21 ', 'LEU', 0.027159962657179904, (22.574999999999992, -5.428, -2.2509999999999994)), ('B', '  23 ', 'PHE', 0.02286622197268986, (26.001, -9.69, -1.7069999999999996)), ('B', '  29 ', 'VAL', 0.15247545786899944, (35.686, -7.925, 0.405)), ('B', '  30 ', 'THR', 0.011583010158874987, (36.745, -11.011000000000001, -1.5419999999999998)), ('B', '  31 ', 'LEU', 0.04947926614076515, (38.778, -8.739000000000003, -3.782)), ('B', '  33 ', 'ILE', 0.1276424753130967, (41.136, -9.521, 0.964)), ('B', '  34 ', 'LEU', 0.10013619082535476, (42.56, -11.317000000000002, -2.0719999999999996)), ('B', '  35 ', 'THR', 0.00859374224673027, (45.491, -8.935, -1.63)), ('B', '  38 ', 'ARG', 0.22597422262531355, (44.252, -11.896999999999997, 5.986999999999998)), ('C', '  11 ', 'THR', 0.015104999652016421, (6.497999999999998, 5.451000000000001, -6.068)), ('C', '  18 ', 'LEU', 0.10140724730409592, (17.136, 1.8980000000000004, -6.747)), ('C', '  19 ', 'LEU', 0.048183206115320114, (18.127, -1.75, -7.265)), ('C', '  21 ', 'LEU', 0.02721437815581304, (22.583, 0.451, -5.837999999999998)), ('C', '  23 ', 'PHE', 0.02310553032240839, (25.99, -1.4310000000000003, -9.719)), ('C', '  29 ', 'VAL', 0.15190713263321998, (35.65699999999998, -2.993, -7.379999999999999)), ('C', '  30 ', 'THR', 0.011699110738095061, (36.725, -2.118, -10.918)), ('C', '  31 ', 'LEU', 0.049959083083275235, (38.789, 0.6969999999999998, -9.459)), ('C', '  33 ', 'ILE', 0.12681569551683738, (41.096, -4.08, -8.719999999999999)), ('C', '  34 ', 'LEU', 0.10031733262284444, (42.545999999999985, -1.773, -11.373)), ('C', '  35 ', 'THR', 0.008626198578263276, (45.48, -1.4819999999999995, -8.97)), ('C', '  38 ', 'ARG', 0.2308121164092313, (44.151, -9.629, -9.408)), ('D', '  11 ', 'THR', 0.0154266644316784, (6.615, 7.636000000000002, 3.4039999999999995)), ('D', '  18 ', 'LEU', 0.10120687104744762, (17.233, 7.047, -0.224)), ('D', '  19 ', 'LEU', 0.04840611813922153, (18.206, 6.404000000000001, -3.8589999999999995)), ('D', '  21 ', 'LEU', 0.02765309524597556, (22.658, 5.6690000000000005, -1.339)), ('D', '  23 ', 'PHE', 0.023230109038666402, (26.097, 8.734000000000004, -4.3389999999999995)), ('D', '  29 ', 'VAL', 0.15228913455023727, (35.723, 5.901000000000001, -5.141)), ('D', '  30 ', 'THR', 0.01168769541404698, (36.841, 9.524000000000003, -5.399)), ('D', '  31 ', 'LEU', 0.04993871563346345, (38.908, 8.969, -2.28)), ('D', '  33 ', 'ILE', 0.12594697643674854, (41.169, 6.77, -6.609)), ('D', '  34 ', 'LEU', 0.10053065146461661, (42.667, 9.982000000000003, -5.231999999999999)), ('D', '  35 ', 'THR', 0.008513478253965034, (45.575, 7.746000000000001, -4.228)), ('D', '  38 ', 'ARG', 0.2324325165693726, (44.189, 5.681000000000001, -12.113)), ('E', '  11 ', 'THR', 0.01560117159647925, (6.606, -0.64, 8.378)), ('E', '  18 ', 'LEU', 0.10137178106050002, (17.271, 2.463, 6.683)), ('E', '  19 ', 'LEU', 0.04953281337255576, (18.296, 5.703999999999999, 4.939)), ('E', '  21 ', 'LEU', 0.029243624503659228, (22.7, 3.008000000000001, 5.021)), ('E', '  23 ', 'PHE', 0.023384751005531803, (26.205999999999992, 6.76, 6.998999999999998)), ('E', '  29 ', 'VAL', 0.15226781816083967, (35.823, 6.488, 4.048)), ('E', '  30 ', 'THR', 0.011716002037173743, (36.96499999999999, 7.840000000000001, 7.408999999999999)), ('E', '  31 ', 'LEU', 0.05005445222745041, (38.984, 4.671, 7.85)), ('E', '  33 ', 'ILE', 0.1294476702662274, (41.296, 8.066999999999998, 4.411999999999999)), ('E', '  34 ', 'LEU', 0.10027251629810813, (42.791, 7.732, 7.893999999999999)), ('E', '  35 ', 'THR', 0.008544232193661195, (45.672, 6.038, 6.077)), ('E', '  38 ', 'ARG', 0.2306058192869454, (44.38899999999999, 12.912, 1.666)), ('A', '   8 ', 'GLU', 0.11298907636844054, (1.296, -11.692000000000004, -6.685)), ('A', '   9 ', 'THR', 0.1597605232238441, (1.9719999999999995, -12.319, -2.9569999999999994)), ('A', '  11 ', 'THR', 0.27096281359625124, (4.691, -7.954000000000002, -3.3819999999999997)), ('A', '  12 ', 'LEU', 0.05629793769094597, (5.514, -8.166, 0.32399999999999995)), ('A', '  19 ', 'LEU', 0.0, (17.729, -7.374, 1.73)), ('A', '  23 ', 'PHE', 0.013501196145362788, (25.541999999999994, -11.241000000000001, 0.07899999999999999)), ('A', '  24 ', 'VAL', 0.06728196801362228, (26.911, -8.216, -1.7759999999999998)), ('A', '  25 ', 'VAL', 0.003150532575091347, (28.509999999999994, -6.583, 1.28)), ('A', '  28 ', 'LEU', 0.2748041713947982, (32.735, -6.702, -1.8949999999999996)), ('A', '  29 ', 'VAL', 0.026309227489700136, (34.882, -7.335, 1.162)), ('A', '  30 ', 'THR', 0.0265189096695321, (36.014, -10.613000000000001, -0.38199999999999995)), ('A', '  31 ', 'LEU', 0.019427823981006856, (37.547, -8.773, -3.326)), ('A', '  33 ', 'ILE', 0.015978565669522594, (40.44, -8.95, 1.127)), ('A', '  37 ', 'LEU', 0.03281295048803543, (45.415, -10.244, 3.1869999999999994)), ('B', '   8 ', 'GLU', 0.11278269886870054, (1.308, 3.0059999999999993, -13.221)), ('B', '   9 ', 'THR', 0.15841262054214494, (1.945, -0.7400000000000001, -12.666)), ('B', '  11 ', 'THR', 0.274298846090104, (4.686, 0.984, -8.647999999999998)), ('B', '  12 ', 'LEU', 0.05620797946430748, (5.474, -2.613, -7.704999999999999)), ('B', '  19 ', 'LEU', 0.0, (17.676, -3.833, -6.531)), ('B', '  23 ', 'PHE', 0.013561894571702607, (25.491, -3.538, -10.725)), ('B', '  24 ', 'VAL', 0.06653035329780209, (26.889, -0.853, -8.425)), ('B', '  25 ', 'VAL', 0.003150532575091347, (28.465, -3.271, -5.929)), ('B', '  28 ', 'LEU', 0.2738245732391521, (32.719, -0.333, -7.027999999999999)), ('B', '  29 ', 'VAL', 0.026375598805530535, (34.835, -3.458, -6.687)), ('B', '  30 ', 'THR', 0.02665012285319948, (35.968999999999994, -3.014, -10.282999999999998)), ('B', '  31 ', 'LEU', 0.01939535370329292, (37.536, 0.34, -9.443)), ('B', '  33 ', 'ILE', 0.015854727564443213, (40.386, -3.981, -8.24)), ('B', '  37 ', 'LEU', 0.03274368700838019, (45.336, -6.392000000000003, -8.838)), ('C', '   8 ', 'GLU', 0.11329813492473224, (1.415, 13.697, -1.237)), ('C', '   9 ', 'THR', 0.15970086100238423, (2.035, 12.003, -4.627)), ('C', '  11 ', 'THR', 0.26979679631896025, (4.754, 8.697, -1.7449999999999999)), ('C', '  12 ', 'LEU', 0.05622245841791576, (5.522, 6.678, -4.873)), ('C', '  19 ', 'LEU', 0.0, (17.712, 5.089, -5.682)), ('C', '  23 ', 'PHE', 0.013368407953840651, (25.557, 9.106, -6.709999999999998)), ('C', '  24 ', 'VAL', 0.06674229691970343, (26.948, 7.741, -3.446)), ('C', '  25 ', 'VAL', 0.003150532575091347, (28.498, 4.607, -4.973999999999999)), ('C', '  28 ', 'LEU', 0.2744839177825025, (32.77, 6.528, -2.524)), ('C', '  29 ', 'VAL', 0.02627810995852575, (34.873, 5.219, -5.392)), ('C', '  30 ', 'THR', 0.02657441056400252, (36.03299999999999, 8.767, -6.086)), ('C', '  31 ', 'LEU', 0.019371224147550423, (37.606, 8.995, -2.638)), ('C', '  33 ', 'ILE', 0.015937612600290158, (40.432, 6.490000000000002, -6.377)), ('C', '  37 ', 'LEU', 0.03279329804537355, (45.378, 6.273, -8.859)), ('D', '   8 ', 'GLU', 0.11349944922545253, (1.475, 5.598, 12.64)), ('D', '   9 ', 'THR', 0.15828069462009822, (2.112, 8.292, 9.979)), ('D', '  11 ', 'THR', 0.2732001967064813, (4.802, 4.508, 7.726)), ('D', '  12 ', 'LEU', 0.05628277894727892, (5.583, 6.853, 4.837)), ('D', '  19 ', 'LEU', 0.0, (17.773, 7.045000000000002, 3.063)), ('D', '  23 ', 'PHE', 0.013397955928192422, (25.635, 9.213, 6.558)), ('D', '  24 ', 'VAL', 0.06720627521426345, (27.003, 5.677, 6.268)), ('D', '  25 ', 'VAL', 0.003150532575091347, (28.551999999999992, 6.147000000000002, 2.813)), ('D', '  28 ', 'LEU', 0.27604702466604886, (32.815, 4.384000000000001, 5.394999999999999)), ('D', '  29 ', 'VAL', 0.026344158072520735, (34.932, 6.6910000000000025, 3.259)), ('D', '  30 ', 'THR', 0.02659064686700498, (36.106999999999985, 8.441000000000003, 6.417)), ('D', '  31 ', 'LEU', 0.01940404375638315, (37.659, 5.223, 7.699999999999998)), ('D', '  33 ', 'ILE', 0.015833723846938475, (40.501, 7.981999999999999, 4.158)), ('D', '  37 ', 'LEU', 0.03280774389804404, (45.462, 10.241000000000001, 3.176999999999999)), ('E', '   8 ', 'GLU', 0.11300810328993595, (1.4319999999999995, -10.113, 9.29)), ('E', '   9 ', 'THR', 0.15979477137537434, (2.100000000000001, -6.758, 11.037999999999998)), ('E', '  11 ', 'THR', 0.2821075164335974, (4.778, -5.793000000000002, 6.733)), ('E', '  12 ', 'LEU', 0.05610253756751955, (5.587, -2.328, 8.078)), ('E', '  19 ', 'LEU', 0.0, (17.788, -0.6650000000000001, 7.663999999999998)), ('E', '  23 ', 'PHE', 0.013995848333343195, (25.642, -3.382, 10.767)), ('E', '  24 ', 'VAL', 0.06731597658390985, (26.993999999999993, -4.1960000000000015, 7.3069999999999995)), ('E', '  25 ', 'VAL', 0.003150532575091347, (28.564, -0.7750000000000001, 6.687)), ('E', '  28 ', 'LEU', 0.27354232913322446, (32.802, -3.8030000000000013, 5.7829999999999995)), ('E', '  29 ', 'VAL', 0.026364653348015674, (34.944, -1.0780000000000005, 7.315)), ('E', '  30 ', 'THR', 0.0266177910180542, (36.114, -3.556, 9.944)), ('E', '  31 ', 'LEU', 0.019394196661847673, (37.63899999999999, -5.774000000000002, 7.2669999999999995)), ('E', '  33 ', 'ILE', 0.01577591161940512, (40.516, -1.5760000000000005, 8.796)), ('E', '  37 ', 'LEU', 0.03278251683880628, (45.495, 0.015, 10.625)), ('A', '   9 ', 'THR', 0.0027198671887163073, (2.697999999999999, 1.284, 9.381999999999998)), ('A', '  12 ', 'LEU', 0.054826971628230296, (7.853, -0.512, 8.298)), ('A', '  18 ', 'LEU', 0.231626220308516, (16.756, -4.477, 4.591999999999999)), ('A', '  23 ', 'PHE', 0.0544315540338757, (25.886, -6.506, 9.489)), ('A', '  24 ', 'VAL', 0.02205372729804367, (26.846, -6.687000000000002, 5.815999999999999)), ('A', '  27 ', 'LEU', 0.033842400908272494, (31.415, -7.456, 7.176999999999998)), ('A', '  34 ', 'LEU', 0.01933854600337692, (42.30999999999999, -7.621000000000002, 6.781999999999999)), ('B', '   9 ', 'THR', 0.0027198671887163073, (2.596, -8.229000000000003, 4.221)), ('B', '  12 ', 'LEU', 0.05507035508487108, (7.755, -7.818, 2.176)), ('B', '  18 ', 'LEU', 0.2307619595911453, (16.686, -5.625, -2.738)), ('B', '  23 ', 'PHE', 0.05617228527871228, (25.742, -11.033, -3.176999999999999)), ('B', '  24 ', 'VAL', 0.02205372729804367, (26.748, -7.605, -4.476)), ('B', '  27 ', 'LEU', 0.033846635141203264, (31.294999999999995, -9.199999999999996, -4.795)), ('B', '  34 ', 'LEU', 0.019255166593007144, (42.196, -9.028, -5.082)), ('C', '   9 ', 'THR', 0.0027198671887163073, (2.516, -6.314, -6.365)), ('C', '  12 ', 'LEU', 0.05456084300250924, (7.695, -4.295, -6.629)), ('C', '  18 ', 'LEU', 0.23354208864934906, (16.684, 0.9659999999999999, -6.107)), ('C', '  23 ', 'PHE', 0.05451548076540378, (25.713, -0.401, -11.401)), ('C', '  24 ', 'VAL', 0.02205372729804367, (26.749, 1.892, -8.554)), ('C', '  27 ', 'LEU', 0.03393323953683029, (31.289999999999992, 1.65, -10.18)), ('C', '  34 ', 'LEU', 0.019118432860042944, (42.192999999999984, 1.863, -10.131999999999998)), ('D', '   9 ', 'THR', 0.0027198671887163073, (2.545, 4.4140000000000015, -7.850999999999998)), ('D', '  12 ', 'LEU', 0.054204947722730656, (7.74, 5.214000000000001, -6.024999999999999)), ('D', '  18 ', 'LEU', 0.2336084848235235, (16.756, 6.2090000000000005, -0.8799999999999999)), ('D', '  23 ', 'PHE', 0.05461359090028723, (25.836, 10.712, -3.830999999999999)), ('D', '  24 ', 'VAL', 0.02205372729804367, (26.856, 8.69, -0.7789999999999999)), ('D', '  27 ', 'LEU', 0.03383805389110628, (31.414, 10.102, -1.5189999999999997)), ('D', '  34 ', 'LEU', 0.019384800733597447, (42.315, 9.973, -1.3309999999999997)), ('E', '   9 ', 'THR', 0.0027198671887163073, (2.662, 9.085, 1.8759999999999994)), ('E', '  12 ', 'LEU', 0.05511221555729701, (7.842, 7.535000000000003, 3.1929999999999996)), ('E', '  18 ', 'LEU', 0.23368614352660597, (16.804, 2.846, 5.724)), ('E', '  23 ', 'PHE', 0.04781210935369248, (25.936, 6.940000000000001, 9.074999999999998)), ('E', '  24 ', 'VAL', 0.02205372729804367, (26.918999999999993, 3.400000000000001, 8.093)), ('E', '  27 ', 'LEU', 0.033836722037281386, (31.491, 4.485000000000001, 9.197)), ('E', '  34 ', 'LEU', 0.01947270450185073, (42.388, 4.129000000000001, 9.109)), ('A', '   9 ', 'THR', 0.13565667734949813, (2.361, -7.864, 8.832999999999998)), ('A', '  18 ', 'LEU', 0.005194270290280584, (16.676, -3.537000000000001, 5.944)), ('A', '  23 ', 'PHE', 0.027843058505962935, (26.221, -3.116, 9.939)), ('A', '  24 ', 'VAL', 0.017341189795715722, (26.685, -4.102000000000001, 6.296)), ('A', '  27 ', 'LEU', 0.026656907763698112, (31.438, -5.823, 7.953)), ('A', '  35 ', 'THR', 0.02432779371204395, (45.027, -6.937, 6.207999999999999)), ('B', '   9 ', 'THR', 0.1341360309296463, (2.226, -10.638, -4.646)), ('B', '  18 ', 'LEU', 0.005387568546934523, (16.585, -6.685, -1.462)), ('B', '  23 ', 'PHE', 0.027209268674534975, (26.093999999999994, -10.445, 0.18799999999999994)), ('B', '  24 ', 'VAL', 0.01802906503851561, (26.588, -7.3020000000000005, -1.892)), ('B', '  27 ', 'LEU', 0.02700176979492918, (31.316999999999997, -9.468, -3.0069999999999997)), ('B', '  35 ', 'THR', 0.024638434664634702, (44.917, -8.313, -4.619)), ('C', '   9 ', 'THR', 0.1346017414393681, (2.229, 1.345, -11.551999999999998)), ('C', '  18 ', 'LEU', 0.0053328079398913325, (16.561, -0.607, -6.769999999999999)), ('C', '  23 ', 'PHE', 0.027993061757899517, (26.045999999999992, -3.434, -9.817999999999998)), ('C', '  24 ', 'VAL', 0.019851700855211474, (26.564999999999994, -0.488, -7.470999999999998)), ('C', '  27 ', 'LEU', 0.02683850331039246, (31.302, -0.145, -9.866)), ('C', '  35 ', 'THR', 0.02454124209781404, (44.92, 1.6100000000000003, -9.233)), ('D', '   9 ', 'THR', 0.13481402528880887, (2.338, 11.554, -2.016)), ('D', '  18 ', 'LEU', 0.0052585355391160365, (16.622, 6.286, -2.498)), ('D', '  23 ', 'PHE', 0.027875041616906182, (26.098, 8.234, -6.1899999999999995)), ('D', '  24 ', 'VAL', 0.01707921167228623, (26.632, 6.908, -2.666)), ('D', '  27 ', 'LEU', 0.02667284970837929, (31.385, 9.251, -3.113)), ('D', '  35 ', 'THR', 0.02451872877499904, (45.014, 9.079, -1.335)), ('E', '   9 ', 'THR', 0.13420763402758298, (2.482, 5.848000000000002, 10.639999999999999)), ('E', '  18 ', 'LEU', 0.005454920426601902, (16.712, 4.474000000000001, 5.377)), ('E', '  23 ', 'PHE', 0.027723247217470676, (26.251, 8.448000000000002, 6.026)), ('E', '  24 ', 'VAL', 0.015010045288525394, (26.73, 4.68, 5.847)), ('E', '  27 ', 'LEU', 0.026727330021257545, (31.513, 5.754, 7.903)), ('E', '  35 ', 'THR', 0.026196516088141834, (45.12, 3.795, 8.188)), ('A', '   9 ', 'THR', 0.206557721436567, (2.571, -9.389, 8.157)), ('A', '  12 ', 'LEU', 0.032323367113704086, (5.938, -4.788, 5.552)), ('A', '  13 ', 'ILE', 0.005688848614227026, (8.469999999999999, -5.131, 8.37)), ('A', '  19 ', 'LEU', 0.10769919584907538, (18.544, -1.9980000000000002, 6.901999999999999)), ('A', '  23 ', 'PHE', 0.22483588957856443, (25.759, -5.489, 9.926999999999998)), ('A', '  24 ', 'VAL', 0.012602130300365388, (27.568, -6.401, 6.712999999999999)), ('A', '  27 ', 'LEU', 0.04805347896364025, (31.792999999999992, -6.733, 9.028)), ('A', '  29 ', 'VAL', 0.05549515209044536, (35.385, -3.1830000000000003, 6.42)), ('A', '  33 ', 'ILE', 0.016082371395105908, (40.927, -3.058, 7.857)), ('A', '  34 ', 'LEU', 0.04648741629266071, (43.553999999999995, -5.7810000000000015, 7.9319999999999995)), ('B', '   9 ', 'THR', 0.2053972511756857, (2.426, -10.451000000000002, -6.367999999999999)), ('B', '  12 ', 'LEU', 0.032390909470558976, (5.844, -6.581000000000002, -2.813)), ('B', '  13 ', 'ILE', 0.005688848614227027, (8.339, -9.397, -2.257)), ('B', '  19 ', 'LEU', 0.10636820787286294, (18.442, -7.148000000000001, 0.257)), ('B', '  23 ', 'PHE', 0.22461922288910088, (25.605999999999995, -11.203000000000001, -2.1159999999999997)), ('B', '  24 ', 'VAL', 0.012602130300365388, (27.448999999999995, -8.457999999999998, -3.9869999999999997)), ('B', '  27 ', 'LEU', 0.04799758611323191, (31.645, -10.814, -3.5789999999999997)), ('B', '  29 ', 'VAL', 0.055573549894910146, (35.284, -7.273, -1.024)), ('B', '  33 ', 'ILE', 0.01604301269818657, (40.808, -8.67, -0.457)), ('B', '  34 ', 'LEU', 0.0463839103112664, (43.422, -9.626, -3.02)), ('C', '   9 ', 'THR', 0.20542876306807586, (2.464, 3.1130000000000004, -11.86)), ('C', '  12 ', 'LEU', 0.03241076539412647, (5.853, 0.861, -7.0889999999999995)), ('C', '  13 ', 'ILE', 0.005688848614227027, (8.327, -0.5630000000000001, -9.603)), ('C', '  19 ', 'LEU', 0.1078759914558457, (18.406, -2.416, -6.694999999999999)), ('C', '  23 ', 'PHE', 0.22265587244029214, (25.582, -1.4960000000000002, -11.282999999999998)), ('C', '  24 ', 'VAL', 0.012602130300365388, (27.463, 1.098, -9.242)), ('C', '  27 ', 'LEU', 0.04812465850075444, (31.641, -0.069, -11.361)), ('C', '  29 ', 'VAL', 0.053669416960575096, (35.26, -1.4739999999999998, -7.21)), ('C', '  33 ', 'ILE', 0.016064209061851773, (40.772, -2.5160000000000005, -8.368)), ('C', '  34 ', 'LEU', 0.04696243631135541, (43.416, -0.4050000000000001, -10.062)), ('D', '   9 ', 'THR', 0.20388743769691134, (2.63, 12.453, -0.603)), ('D', '  12 ', 'LEU', 0.032285463643579315, (5.95, 7.179000000000001, -1.285)), ('D', '  13 ', 'ILE', 0.005688848614227028, (8.446, 9.1, -3.416)), ('D', '  19 ', 'LEU', 0.10755423547207221, (18.481999999999992, 5.64, -4.304)), ('D', '  23 ', 'PHE', 0.22583420916612532, (25.713999999999995, 10.198000000000004, -4.854)), ('D', '  24 ', 'VAL', 0.012602130300365388, (27.586, 9.031, -1.7609999999999997)), ('D', '  27 ', 'LEU', 0.047960386568955495, (31.781999999999993, 10.636, -3.5309999999999997)), ('D', '  29 ', 'VAL', 0.05492185198837757, (35.346, 6.209999999999998, -3.596)), ('D', '  33 ', 'ILE', 0.016145520557409723, (40.86399999999998, 6.92, -4.954999999999999)), ('D', '  34 ', 'LEU', 0.046759285097764294, (43.539, 9.149, -3.4719999999999995)), ('E', '   9 ', 'THR', 0.20140155527706388, (2.709999999999999, 4.737, 11.733999999999998)), ('E', '  12 ', 'LEU', 0.03196400420437657, (6.005, 3.7, 6.505999999999999)), ('E', '  13 ', 'ILE', 0.005688848614227027, (8.547, 6.282, 7.668)), ('E', '  19 ', 'LEU', 0.10709653496860166, (18.571, 5.901, 4.092)), ('E', '  23 ', 'PHE', 0.22628037131402984, (25.838, 7.729, 8.245999999999999)), ('E', '  24 ', 'VAL', 0.012602130300365388, (27.66, 4.398, 8.092)), ('E', '  27 ', 'LEU', 0.047795977006134915, (31.889999999999993, 6.514000000000002, 9.063)), ('E', '  29 ', 'VAL', 0.05471934376752126, (35.43, 5.149, 4.831)), ('E', '  33 ', 'ILE', 0.016363020378919943, (40.97, 6.578, 5.078)), ('E', '  34 ', 'LEU', 0.04639231140286673, (43.637, 5.818, 7.654)), ('A', '  13 ', 'ILE', 0.24965051447285594, (8.565, -6.321000000000001, 7.21)), ('A', '  18 ', 'LEU', 0.027898872569790793, (16.873, -5.378, 4.652)), ('A', '  20 ', 'PHE', 0.07980999925623358, (20.268, -4.911, 8.541)), ('A', '  23 ', 'PHE', 0.021153907174150992, (25.909, -4.589, 9.432)), ('A', '  24 ', 'VAL', 0.00945159699767828, (27.491999999999994, -5.802000000000001, 6.178)), ('A', '  25 ', 'VAL', 0.010709899801606625, (29.014, -2.386, 5.61)), ('A', '  26 ', 'PHE', 0.21575907831850602, (30.708, -1.7760000000000007, 8.959)), ('A', '  29 ', 'VAL', 0.02800836256600917, (35.269, -2.1000000000000005, 6.402999999999999)), ('A', '  30 ', 'THR', 0.02282030104236548, (36.436, -3.747000000000001, 9.595999999999998)), ('A', '  34 ', 'LEU', 0.24756582912681427, (42.22499999999999, -4.245, 10.136999999999999)), ('A', '  37 ', 'LEU', 0.0012573887181636188, (45.704, 0.4479999999999999, 10.849)), ('B', '  13 ', 'ILE', 0.2524263529282124, (8.458999999999996, -8.657, -3.646)), ('B', '  18 ', 'LEU', 0.028172344199766726, (16.797, -6.013000000000003, -3.567)), ('B', '  20 ', 'PHE', 0.08015813365384691, (20.16, -9.602, -1.9249999999999996)), ('B', '  23 ', 'PHE', 0.021616149071984805, (25.793, -10.403, -1.3599999999999999)), ('B', '  24 ', 'VAL', 0.00945159699767828, (27.399, -7.702000000000002, -3.527)), ('B', '  25 ', 'VAL', 0.011199845845613092, (28.943999999999996, -6.118, -0.45999999999999996)), ('B', '  26 ', 'PHE', 0.21580710838314518, (30.614, -9.128, 1.154)), ('B', '  29 ', 'VAL', 0.027838350234424696, (35.195, -6.843, 0.041)), ('B', '  30 ', 'THR', 0.022771671021442154, (36.325, -10.401, -0.538)), ('B', '  34 ', 'LEU', 0.2457835461506421, (42.106999999999985, -11.130000000000003, -0.86)), ('B', '  37 ', 'LEU', 0.0012531129266012226, (45.605, -10.384, 3.813)), ('C', '  13 ', 'ILE', 0.2530494121504855, (8.434999999999997, 0.9910000000000003, -9.192)), ('C', '  18 ', 'LEU', 0.027776105208194273, (16.793, 1.6319999999999995, -6.694)), ('C', '  20 ', 'PHE', 0.0801704728527565, (20.110999999999994, -1.077, -9.616)), ('C', '  23 ', 'PHE', 0.02102323646573026, (25.731, -1.929, -10.231)), ('C', '  24 ', 'VAL', 0.00945159699767828, (27.38, 0.9460000000000002, -8.34)), ('C', '  25 ', 'VAL', 0.011363633724307202, (28.908, -1.4989999999999999, -5.8919999999999995)), ('C', '  26 ', 'PHE', 0.21549199881156314, (30.536, -3.9840000000000004, -8.265)), ('C', '  29 ', 'VAL', 0.027777745983117233, (35.146, -2.274, -6.458)), ('C', '  30 ', 'THR', 0.02272317600403017, (36.253, -2.8370000000000006, -10.026)), ('C', '  34 ', 'LEU', 0.2467102760281244, (42.03199999999998, -2.824, -10.847)), ('C', '  37 ', 'LEU', 0.001271434381652114, (45.49, -7.078000000000002, -8.710999999999999)), ('D', '  13 ', 'ILE', 0.251336329416093, (8.560999999999996, 9.313, -1.7619999999999996)), ('D', '  18 ', 'LEU', 0.02824210567569512, (16.889, 7.011000000000001, -0.4119999999999999)), ('D', '  20 ', 'PHE', 0.08015039332363663, (20.222, 8.899000000000003, -3.902)), ('D', '  23 ', 'PHE', 0.020410494273220208, (25.846, 9.137000000000004, -4.9239999999999995)), ('D', '  24 ', 'VAL', 0.00945159699767828, (27.491, 8.203, -1.611)), ('D', '  25 ', 'VAL', 0.011005976041593708, (28.968, 5.096, -3.1859999999999995)), ('D', '  26 ', 'PHE', 0.21605678047598467, (30.606, 6.559000000000002, -6.289)), ('D', '  29 ', 'VAL', 0.027930777881995765, (35.205, 5.301, -4.122)), ('D', '  30 ', 'THR', 0.02278455337408209, (36.353999999999985, 8.504, -5.763)), ('D', '  34 ', 'LEU', 0.24899020318318857, (42.144, 9.199, -6.024999999999999)), ('D', '  37 ', 'LEU', 0.0012318095316925946, (45.539, 5.802, -9.424999999999999)), ('E', '  13 ', 'ILE', 0.25526532376890576, (8.631, 4.779000000000002, 8.378)), ('E', '  18 ', 'LEU', 0.02823192942266583, (16.928, 2.668, 6.5969999999999995)), ('E', '  20 ', 'PHE', 0.07969307626721679, (20.313999999999993, 6.514, 7.330999999999999)), ('E', '  23 ', 'PHE', 0.020292180393765617, (25.958, 7.483999999999999, 7.236)), ('E', '  24 ', 'VAL', 0.00945159699767828, (27.55, 4.018, 7.361)), ('E', '  25 ', 'VAL', 0.010964675123743056, (29.033999999999992, 4.544, 3.919999999999999)), ('E', '  26 ', 'PHE', 0.21605278063499753, (30.721999999999994, 7.922, 4.363)), ('E', '  29 ', 'VAL', 0.027774360096779034, (35.28299999999999, 5.408000000000001, 3.826)), ('E', '  30 ', 'THR', 0.022754231014155992, (36.47199999999999, 7.933, 6.373)), ('E', '  34 ', 'LEU', 0.2492836083553654, (42.272, 8.307, 6.952)), ('E', '  37 ', 'LEU', 0.0012109176370913215, (45.694, 10.457, 2.676)), ('A', '   9 ', 'THR', 0.22486523997258542, (3.145, -9.807, -6.06)), ('A', '  17 ', 'VAL', 0.2943295701717879, (14.716, -9.305, -2.9569999999999994)), ('A', '  18 ', 'LEU', 0.0038733157541110588, (15.873, -5.723, -2.4889999999999994)), ('A', '  20 ', 'PHE', 0.11915917982190528, (19.633999999999993, -9.066, -1.147)), ('A', '  23 ', 'PHE', 0.06558540696909329, (24.96399999999999, -9.8, 0.809)), ('A', '  26 ', 'PHE', 0.25152156937068604, (29.934999999999995, -8.057, 3.335999999999999)), ('A', '  27 ', 'LEU', 0.04981634768815734, (31.355, -9.852, 0.317)), ('A', '  33 ', 'ILE', 0.24187378203780474, (40.388, -8.001000000000003, 4.281999999999999)), ('B', '   9 ', 'THR', 0.22372938840879308, (3.133, 2.9150000000000005, -11.184)), ('B', '  17 ', 'VAL', 0.29286292711396034, (14.685999999999996, 0.029, -9.777)), ('B', '  18 ', 'LEU', 0.003928855941434198, (15.858, 0.685, -6.228)), ('B', '  20 ', 'PHE', 0.12066488126191341, (19.594, -1.6550000000000002, -8.999)), ('B', '  23 ', 'PHE', 0.0664079306408598, (24.909999999999993, -3.786, -9.112)), ('B', '  26 ', 'PHE', 0.2510691548919513, (29.869999999999994, -5.688, -6.685)), ('B', '  27 ', 'LEU', 0.04977049252131424, (31.302, -3.383, -9.33)), ('B', '  33 ', 'ILE', 0.24127596416108274, (40.317999999999984, -6.652, -6.367999999999999)), ('C', '   9 ', 'THR', 0.2275577613937744, (3.24, 11.753000000000002, -0.628)), ('C', '  17 ', 'VAL', 0.2934635137294444, (14.763, 9.419, -2.982)), ('C', '  18 ', 'LEU', 0.003898577966316942, (15.909999999999997, 6.2330000000000005, -1.273)), ('C', '  20 ', 'PHE', 0.12052023482680302, (19.654, 8.114000000000004, -4.364)), ('C', '  23 ', 'PHE', 0.06598540785772201, (24.956, 7.516000000000002, -6.446)), ('C', '  26 ', 'PHE', 0.25115198725103005, (29.885, 4.575000000000001, -7.526999999999999)), ('C', '  27 ', 'LEU', 0.04991277313843149, (31.351, 7.787, -6.153)), ('C', '  33 ', 'ILE', 0.24045760616203596, (40.323, 3.879, -8.385)), ('D', '   9 ', 'THR', 0.2255003398386186, (3.3000000000000007, 4.444, 10.983999999999998)), ('D', '  17 ', 'VAL', 0.2926176517509701, (14.833, 5.86, 8.024)), ('D', '  18 ', 'LEU', 0.003879168774155411, (15.955, 3.2400000000000007, 5.52)), ('D', '  20 ', 'PHE', 0.11938837559933388, (19.731, 6.73, 6.351)), ('D', '  23 ', 'PHE', 0.0658499754425448, (25.045, 8.471999999999998, 5.129)), ('D', '  26 ', 'PHE', 0.2509252055818533, (29.974, 8.549, 1.995)), ('D', '  27 ', 'LEU', 0.05000603135590322, (31.442, 8.222, 5.472)), ('D', '  33 ', 'ILE', 0.24135150522908647, (40.416, 9.056, 1.055)), ('E', '   9 ', 'THR', 0.22668335206645174, (3.2349999999999994, -8.851, 7.615)), ('E', '  17 ', 'VAL', 0.29416086606715997, (14.795999999999996, -5.701, 8.033)), ('E', '  18 ', 'LEU', 0.0038279797488982616, (15.928, -4.137, 4.766)), ('E', '  20 ', 'PHE', 0.11364939754007443, (19.715, -3.89, 8.345)), ('E', '  23 ', 'PHE', 0.06533415194906994, (25.038, -2.2350000000000008, 9.61)), ('E', '  26 ', 'PHE', 0.25109663322611536, (29.994, 0.729, 8.713)), ('E', '  27 ', 'LEU', 0.04987614480762177, (31.433, -2.693, 9.472)), ('E', '  33 ', 'ILE', 0.24593926475850908, (40.445, 1.688, 8.890999999999998)), ('A', '   8 ', 'GLU', 0.1575067401693195, (2.128, -7.209, -10.281)), ('A', '  12 ', 'LEU', 0.07032586516126481, (5.595, -7.683000000000002, -3.438)), ('A', '  15 ', 'ASN', 0.11404114649878147, (11.553, -5.984000000000001, -1.2189999999999999)), ('A', '  19 ', 'LEU', 0.1883752647182786, (17.796999999999993, -7.5200000000000005, 0.7119999999999999)), ('A', '  20 ', 'PHE', 0.2928407717658876, (20.257, -9.524, -1.413)), ('A', '  21 ', 'LEU', 0.09910910858778679, (22.092, -6.225, -1.972)), ('A', '  23 ', 'PHE', 0.009635583228178132, (25.37099999999999, -9.695, 0.974)), ('A', '  26 ', 'PHE', 0.16652361090037446, (29.846, -7.678999999999999, 3.42)), ('A', '  27 ', 'LEU', 0.23989604405963033, (31.427, -9.508, 0.487)), ('A', '  28 ', 'LEU', 0.16476032737358326, (33.7, -6.622000000000001, -0.451)), ('A', '  30 ', 'THR', 0.030766965389351322, (35.92, -10.383, 2.973)), ('A', '  31 ', 'LEU', 0.02783509587296213, (38.019, -9.358, -0.019)), ('A', '  35 ', 'THR', 0.2496310095801373, (44.62, -8.141, 2.382)), ('A', '  38 ', 'ARG', 0.053995634846718855, (42.405999999999985, -7.767999999999998, 10.676999999999998)), ('B', '   8 ', 'GLU', 0.15863335362613354, (2.146, 7.744, -9.992)), ('B', '  12 ', 'LEU', 0.06976691295689827, (5.5699999999999985, 1.073, -8.302)), ('B', '  15 ', 'ASN', 0.11198766061552524, (11.526, -0.539, -6.024)), ('B', '  19 ', 'LEU', 0.19024741000004478, (17.748, -2.906000000000001, -6.905)), ('B', '  20 ', 'PHE', 0.29330120114606467, (20.205, -1.542, -9.490999999999998)), ('B', '  21 ', 'LEU', 0.10366640334775583, (22.069, 0.012, -6.547999999999999)), ('B', '  23 ', 'PHE', 0.009703507829678746, (25.303, -3.9010000000000002, -8.931)), ('B', '  26 ', 'PHE', 0.1682146802399013, (29.78, -5.623, -6.27)), ('B', '  27 ', 'LEU', 0.2410419812965941, (31.362, -3.428, -8.941)), ('B', '  28 ', 'LEU', 0.16567744202465642, (33.664, -1.6460000000000001, -6.514)), ('B', '  30 ', 'THR', 0.030610220213184706, (35.834, -6.099000000000002, -9.012)), ('B', '  31 ', 'LEU', 0.02788428803580203, (37.957, -2.9530000000000003, -8.998)), ('B', '  35 ', 'THR', 0.2545038411358743, (44.556, -4.9, -7.123999999999999)), ('B', '  38 ', 'ARG', 0.05449222701606134, (42.298, -12.634, -4.135)), ('C', '   8 ', 'GLU', 0.1583118302874102, (2.287, 12.194, 4.313)), ('C', '  12 ', 'LEU', 0.06984620209929641, (5.65, 8.492, -1.526)), ('C', '  15 ', 'ASN', 0.11643404097694177, (11.570999999999996, 5.758, -2.3799999999999994)), ('C', '  19 ', 'LEU', 0.18928971887473214, (17.785, 5.792000000000001, -4.923)), ('C', '  20 ', 'PHE', 0.29095308689246074, (20.278, 8.645000000000003, -4.428)), ('C', '  21 ', 'LEU', 0.104890025434653, (22.121, 6.302000000000001, -2.05)), ('C', '  23 ', 'PHE', 0.009707649304299213, (25.354, 7.327000000000002, -6.5169999999999995)), ('C', '  26 ', 'PHE', 0.1676967077157442, (29.791, 4.212000000000001, -7.352)), ('C', '  27 ', 'LEU', 0.2432391508767605, (31.415, 7.410000000000002, -6.091)), ('C', '  28 ', 'LEU', 0.1649861856598023, (33.704, 5.6209999999999996, -3.656)), ('C', '  30 ', 'THR', 0.03064292215010761, (35.87, 6.604, -8.669)), ('C', '  31 ', 'LEU', 0.027803186606402998, (38.01399999999999, 7.532000000000001, -5.679)), ('C', '  35 ', 'THR', 0.258583890320305, (44.579, 5.071000000000001, -6.976)), ('C', '  38 ', 'ARG', 0.05471854411416483, (42.239, -0.124, -13.409)), ('D', '   8 ', 'GLU', 0.15746815745524168, (2.302, -0.14699999999999996, 12.884999999999998)), ('D', '  12 ', 'LEU', 0.07134421314327026, (5.699, 4.246, 7.573)), ('D', '  15 ', 'ASN', 0.11485394133028094, (11.62, 4.171, 4.7)), ('D', '  19 ', 'LEU', 0.1903445598007563, (17.855, 6.549, 3.951)), ('D', '  20 ', 'PHE', 0.2904592130560834, (20.351999999999993, 6.929, 6.816)), ('D', '  21 ', 'LEU', 0.09941181453255316, (22.167999999999996, 3.927, 5.313)), ('D', '  23 ', 'PHE', 0.009698904776759398, (25.441, 8.467999999999996, 4.916)), ('D', '  26 ', 'PHE', 0.16707113348631697, (29.874999999999993, 8.268, 1.6919999999999997)), ('D', '  27 ', 'LEU', 0.24179247162015044, (31.498999999999995, 8.031, 5.1209999999999996)), ('D', '  28 ', 'LEU', 0.16692754472566101, (33.761999999999986, 5.144, 4.162)), ('D', '  30 ', 'THR', 0.030566028826445383, (35.973, 10.198, 3.5609999999999995)), ('D', '  31 ', 'LEU', 0.02790257145640114, (38.096, 7.615000000000001, 5.358)), ('D', '  35 ', 'THR', 0.25055934651459855, (44.662, 8.038, 2.613)), ('D', '  38 ', 'ARG', 0.05220370319942281, (42.357, 12.594000000000001, -4.3)), ('E', '   8 ', 'GLU', 0.157634012506614, (2.213, -12.093, 3.8289999999999993)), ('E', '  12 ', 'LEU', 0.0749758798509181, (5.662, -5.708000000000002, 6.340999999999999)), ('E', '  15 ', 'ASN', 0.11078062308421133, (11.609, -3.052, 5.377)), ('E', '  19 ', 'LEU', 0.19208116831288252, (17.855, -1.6540000000000004, 7.408999999999999)), ('E', '  20 ', 'PHE', 0.2836576649741164, (20.326, -4.278, 8.666)), ('E', '  21 ', 'LEU', 0.09855192291773063, (22.15, -3.806999999999999, 5.347)), ('E', '  23 ', 'PHE', 0.009689121951661207, (25.436, -2.038, 9.538)), ('E', '  26 ', 'PHE', 0.16949309809241653, (29.898, 0.922, 8.344)), ('E', '  27 ', 'LEU', 0.24011846109036292, (31.492, -2.4220000000000006, 9.192999999999998)), ('E', '  28 ', 'LEU', 0.1654047065990225, (33.756, -2.433, 6.153)), ('E', '  30 ', 'THR', 0.030625446563323108, (35.982, -0.30100000000000005, 10.765999999999998)), ('E', '  31 ', 'LEU', 0.027818636124516488, (38.084, -2.834, 8.878)), ('E', '  35 ', 'THR', 0.24396693625941532, (44.674, -0.154, 8.425)), ('E', '  38 ', 'ARG', 0.05258603798108942, (42.438999999999986, 7.858000000000001, 10.589)), ('A', '  12 ', 'LEU', 0.02391273750474054, (6.409, -9.387, 1.0489999999999997)), ('A', '  13 ', 'ILE', 0.012822572958184918, (9.064, -11.224000000000002, -0.9449999999999998)), ('A', '  18 ', 'LEU', 0.07264060264399108, (15.229999999999999, -5.771000000000001, -2.138)), ('A', '  21 ', 'LEU', 0.10830558481458871, (22.094, -7.375, -2.356)), ('A', '  24 ', 'VAL', 0.07774098667507948, (27.241, -8.411000000000001, -2.982)), ('A', '  28 ', 'LEU', 0.26351147116875456, (33.06, -6.686000000000001, -2.5269999999999997)), ('A', '  29 ', 'VAL', 0.00945159699767828, (35.196, -7.234000000000002, 0.564)), ('A', '  30 ', 'THR', 0.02751334867566769, (36.43999999999998, -10.440000000000001, -1.043)), ('A', '  31 ', 'LEU', 0.02407869077867596, (37.946, -8.562999999999999, -3.95)), ('A', '  33 ', 'ILE', 0.13407736881746304, (40.653, -8.959, 0.6589999999999999)), ('B', '  12 ', 'LEU', 0.0240193947993502, (6.374, -3.735, -8.608)), ('B', '  13 ', 'ILE', 0.01259550707249085, (9.038, -2.419, -10.966999999999999)), ('B', '  18 ', 'LEU', 0.07380574355755425, (15.223, 0.332, -6.135)), ('B', '  21 ', 'LEU', 0.10820288208522226, (22.086999999999993, 0.0010000000000000002, -7.735)), ('B', '  24 ', 'VAL', 0.07691406531844834, (27.237, 0.245, -8.912)), ('B', '  28 ', 'LEU', 0.2637112465491562, (33.056, 0.294, -7.132)), ('B', '  29 ', 'VAL', 0.00945159699767828, (35.169, -2.832, -6.709)), ('B', '  30 ', 'THR', 0.027605246533612467, (36.417, -2.291000000000001, -10.252)), ('B', '  31 ', 'LEU', 0.02406173938748136, (37.948, 1.039, -9.352)), ('B', '  33 ', 'ILE', 0.13584119429807773, (40.621, -3.491, -8.323)), ('C', '  12 ', 'LEU', 0.023899475170803947, (6.404, 7.1110000000000015, -6.206999999999998)), ('C', '  13 ', 'ILE', 0.012718355395204717, (9.078, 9.759, -5.717)), ('C', '  18 ', 'LEU', 0.07298678308186196, (15.258999999999997, 6.041, -1.5819999999999999)), ('C', '  21 ', 'LEU', 0.10944625023017733, (22.127, 7.426000000000002, -2.422)), ('C', '  24 ', 'VAL', 0.07548435560676504, (27.28, 8.601, -2.58)), ('C', '  28 ', 'LEU', 0.2632616764783716, (33.095, 6.91, -1.9779999999999998)), ('C', '  29 ', 'VAL', 0.00945159699767828, (35.198, 5.505, -4.809999999999999)), ('C', '  30 ', 'THR', 0.027604730409159638, (36.455, 9.032000000000004, -5.430999999999999)), ('C', '  31 ', 'LEU', 0.024225760856682085, (37.995, 9.237, -1.992)), ('C', '  33 ', 'ILE', 0.13216009353326058, (40.651, 6.807000000000001, -5.962)), ('D', '  12 ', 'LEU', 0.024006317372139152, (6.492, 8.315999999999999, 4.952)), ('D', '  13 ', 'ILE', 0.012696745659457442, (9.188, 8.627, 7.604)), ('D', '  18 ', 'LEU', 0.07254916778984011, (15.309, 3.494000000000001, 5.276)), ('D', '  21 ', 'LEU', 0.10780281198994907, (22.191, 4.65, 6.287999999999999)), ('D', '  24 ', 'VAL', 0.07530936080124434, (27.356, 5.109, 7.321999999999999)), ('D', '  28 ', 'LEU', 0.26380697423252764, (33.149, 3.965, 5.851)), ('D', '  29 ', 'VAL', 0.00945159699767828, (35.258, 6.217000000000002, 3.638)), ('D', '  30 ', 'THR', 0.027593613720115668, (36.554, 7.867, 6.799)), ('D', '  31 ', 'LEU', 0.02432745796066271, (38.072, 4.637, 8.027999999999999)), ('D', '  33 ', 'ILE', 0.13124211729669957, (40.732, 7.656, 4.486)), ('E', '  12 ', 'LEU', 0.02394043083039711, (6.495, -1.906, 9.435)), ('E', '  13 ', 'ILE', 0.012754801068631355, (9.166, -4.360000000000001, 10.547999999999998)), ('E', '  18 ', 'LEU', 0.07192803927380448, (15.29, -3.822, 4.927)), ('E', '  21 ', 'LEU', 0.10487455359221201, (22.16, -4.489000000000001, 6.320999999999999)), ('E', '  24 ', 'VAL', 0.07616577219775424, (27.316, -5.388, 7.074999999999998)), ('E', '  28 ', 'LEU', 0.2634931616659523, (33.116, -4.41, 5.517)), ('E', '  29 ', 'VAL', 0.00945159699767828, (35.259, -1.6300000000000001, 6.965)), ('E', '  30 ', 'THR', 0.027674749754178028, (36.534, -4.138999999999999, 9.511999999999999)), ('E', '  31 ', 'LEU', 0.02421392541786259, (38.021, -6.326000000000001, 6.821999999999999)), ('E', '  33 ', 'ILE', 0.13542958913655587, (40.732, -2.053, 8.584))]
data['cbeta'] = []
data['probe'] = [(' A  24  VAL HG13', ' B  25  VAL HG11', -0.498, (28.218, -5.362, 3.238)), (' D  24  VAL HG13', ' E  25  VAL HG11', -0.495, (28.725, 6.649, 0.514)), (' A  25  VAL HG11', ' E  24  VAL HG13', -0.495, (28.45, 1.474, 5.91)), (' B  24  VAL HG13', ' C  25  VAL HG11', -0.493, (28.294, -5.005, -4.591)), (' E  11  THR  O  ', ' E  14  VAL HG13', -0.487, (8.621, 0.843, 8.165)), (' A  11  THR  O  ', ' A  14  VAL HG13', -0.482, (8.251, -7.685, 3.49)), (' C  24  VAL HG13', ' D  25  VAL HG11', -0.481, (28.489, 2.101, -6.172)), (' B  33  ILE  HA ', ' B  36  ALA  HB3', -0.474, (42.743, -8.819, 0.432)), (' B  11  THR  O  ', ' B  14  VAL HG13', -0.472, (8.595, -5.485, -6.4)), (' D  11  THR  O  ', ' D  14  VAL HG13', -0.469, (8.59, 7.946, 1.728)), (' E  33  ILE  HA ', ' E  36  ALA  HB3', -0.469, (43.074, 7.067, 3.894)), (' C  33  ILE  HA ', ' C  36  ALA  HB3', -0.469, (42.559, -3.443, -8.038)), (' C  11  THR  O  ', ' C  14  VAL HG13', -0.469, (8.346, 4.092, -7.095)), (' A  33  ILE  HA ', ' A  36  ALA  HB3', -0.463, (43.054, -1.883, 7.79)), (' D  33  ILE  HA ', ' D  36  ALA  HB3', -0.461, (43.111, 6.251, -5.881)), (' D  11  THR  O  ', ' D  14  VAL HG22', -0.445, (8.388, 7.17, 1.317)), (' C  11  THR  O  ', ' C  14  VAL HG22', -0.442, (8.71, 3.317, -6.077)), (' A  11  THR  O  ', ' A  14  VAL HG22', -0.44, (8.607, -6.022, 3.397)), (' B  11  THR  O  ', ' B  14  VAL HG22', -0.434, (8.31, -4.929, -5.104)), (' E  11  THR  O  ', ' E  14  VAL HG22', -0.433, (8.28, 1.146, 7.132)), (' C  14  VAL HG23', ' C  15  ASN  N  ', -0.417, (11.027, 1.573, -5.479)), (' B  14  VAL HG23', ' B  15  ASN  N  ', -0.417, (10.82, -4.515, -3.306)), (' D  14  VAL HG23', ' D  15  ASN  N  ', -0.414, (11.194, 5.781, -0.1)), (' A  14  VAL HG23', ' A  15  ASN  N  ', -0.406, (11.146, -4.555, 3.737)), (' E  14  VAL HG23', ' E  15  ASN  N  ', -0.405, (11.11, 2.093, 5.483))]
handle_read_draw_probe_dots_unformatted("molprobity_probe.txt", 0, 0)
show_probe_dots(True, True)
gui = coot_molprobity_todo_list_gui(data=data)
