
from __future__ import division
import cPickle
try :
  import gobject
except ImportError :
  gobject = None
import sys

dict_residue_prop_objects = {}
class coot_extension_gui (object) :
  def __init__ (self, title) :
    import gtk
    self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
    scrolled_win = gtk.ScrolledWindow()
    self.outside_vbox = gtk.VBox(False, 2)
    self.inside_vbox = gtk.VBox(False, 0)
    self.window.set_title(title)
    self.inside_vbox.set_border_width(0)
    self.window.add(self.outside_vbox)
    self.outside_vbox.pack_start(scrolled_win, True, True, 0)
    scrolled_win.add_with_viewport(self.inside_vbox)
    scrolled_win.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)

  def finish_window (self) :
    import gtk
    self.outside_vbox.set_border_width(2)
    ok_button = gtk.Button("  Close  ")
    self.outside_vbox.pack_end(ok_button, False, False, 0)
    ok_button.connect("clicked", lambda b: self.destroy_window())
    self.window.connect("delete_event", lambda a, b: self.destroy_window())
    self.window.show_all()

  def destroy_window (self, *args) :
    self.window.destroy()
    self.window = None

  def confirm_data (self, data) :
    for data_key in self.data_keys :
      outlier_list = data.get(data_key)
      if outlier_list is not None and len(outlier_list) > 0 :
        return True
    return False

  def create_property_lists (self, data) :
    import gtk
    for data_key in self.data_keys :
      outlier_list = data[data_key]
      if outlier_list is None or len(outlier_list) == 0 :
        continue
      else :
        frame = gtk.Frame(self.data_titles[data_key])
        vbox = gtk.VBox(False, 2)
        frame.set_border_width(6)
        frame.add(vbox)
        self.add_top_widgets(data_key, vbox)
        self.inside_vbox.pack_start(frame, False, False, 5)
        list_obj = residue_properties_list(
          columns=self.data_names[data_key],
          column_types=self.data_types[data_key],
          rows=outlier_list,
          box=vbox)
        ##save property list frame object
        dict_residue_prop_objects[data_key] = list_obj
# Molprobity result viewer
class coot_molprobity_todo_list_gui (coot_extension_gui) :
  data_keys = [ "clusters","rama", "rota", "cbeta", "probe", "smoc", "cablam",
               "jpred"]
  data_titles = { "clusters"  : "Outlier residue clusters",
                  "rama"  : "Ramachandran outliers",
                  "rota"  : "Rotamer outliers",
                  "cbeta" : "C-beta outliers",
                  "probe" : "Severe clashes",
                  "smoc"  : "Local density fit (SMOC)",
                  "cablam": "Ca geometry (CaBLAM)",
                  "jpred":"SS prediction"}
  data_names = { "clusters"  : ["Chain","Residue","Cluster","Outlier types"],
                 "rama"  : ["Chain", "Residue", "Name", "Score"],
                 "rota"  : ["Chain", "Residue", "Name", "Score"],
                 "cbeta" : ["Chain", "Residue", "Name", "Conf.", "Deviation"],
                 "probe" : ["Atom 1", "Atom 2", "Overlap"],
                 "smoc" : ["Chain", "Residue", "Name", "Score"],
                 "cablam" : ["Chain", "Residue","Name","recommendation","DSSP"],
                 "jpred" : ["Chain", "Residue","Name","predicted SS","current SS"]}
  if (gobject is not None) :
    data_types = {  "clusters" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_INT, gobject.TYPE_STRING,
                             gobject.TYPE_PYOBJECT],
                    "rama" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "rota" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cbeta" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "probe" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "smoc" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cablam" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_STRING,
                             gobject.TYPE_STRING,gobject.TYPE_PYOBJECT],
                   "jpred" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_STRING,
                             gobject.TYPE_STRING,gobject.TYPE_PYOBJECT]}
  else :
    data_types = dict([ (s, []) for s in ["clusters","rama","rota","cbeta","probe","smoc",
                                          "cablam","jpred"] ])

  def __init__ (self, data_file=None, data=None) :
    assert ([data, data_file].count(None) == 1)
    if (data is None) :
      data = load_pkl(data_file)
    if not self.confirm_data(data) :
      return
    coot_extension_gui.__init__(self, "MolProbity to-do list")
    self.dots_btn = None
    self.dots2_btn = None
    self._overlaps_only = True
    self.window.set_default_size(420, 600)
    self.create_property_lists(data)
    self.finish_window()

  def add_top_widgets (self, data_key, box) :
    import gtk
    if data_key == "probe" :
      hbox = gtk.HBox(False, 2)
      self.dots_btn = gtk.CheckButton("Show Probe dots")
      hbox.pack_start(self.dots_btn, False, False, 5)
      self.dots_btn.connect("toggled", self.toggle_probe_dots)
      self.dots2_btn = gtk.CheckButton("Overlaps only")
      hbox.pack_start(self.dots2_btn, False, False, 5)
      self.dots2_btn.connect("toggled", self.toggle_all_probe_dots)
      self.dots2_btn.set_active(True)
      self.toggle_probe_dots()
      box.pack_start(hbox, False, False, 0)

  def toggle_probe_dots (self, *args) :
    if self.dots_btn is not None :
      show_dots = self.dots_btn.get_active()
      overlaps_only = self.dots2_btn.get_active()
      if show_dots :
        self.dots2_btn.set_sensitive(True)
      else :
        self.dots2_btn.set_sensitive(False)
      show_probe_dots(show_dots, overlaps_only)

  def toggle_all_probe_dots (self, *args) :
    if self.dots2_btn is not None :
      self._overlaps_only = self.dots2_btn.get_active()
      self.toggle_probe_dots()

class rsc_todo_list_gui (coot_extension_gui) :
  data_keys = ["by_res", "by_atom"]
  data_titles = ["Real-space correlation by residue",
                 "Real-space correlation by atom"]
  data_names = {}
  data_types = {}

class residue_properties_list (object) :
  def __init__ (self, columns, column_types, rows, box,
      default_size=(380,200)) :
    assert len(columns) == (len(column_types) - 1)
    if (len(rows) > 0) and (len(rows[0]) != len(column_types)) :
      raise RuntimeError("Wrong number of rows:\n%s" % str(rows[0]))
    import gtk
    ##adding a column type for checkbox (bool) before atom coordinate
    if gobject is not None:
        column_types = column_types[:-1]+[bool]+[column_types[-1]]
    
    self.liststore = gtk.ListStore(*column_types)
    self.listmodel = gtk.TreeModelSort(self.liststore)
    self.listctrl = gtk.TreeView(self.listmodel)
    self.listctrl.column = [None]*len(columns)
    self.listctrl.cell = [None]*len(columns)
    for i, column_label in enumerate(columns) :
      cell = gtk.CellRendererText()
      column = gtk.TreeViewColumn(column_label)
      self.listctrl.append_column(column)
      column.set_sort_column_id(i)
      column.pack_start(cell, True)
      column.set_attributes(cell, text=i)
    ##add a cell for checkbox
    cell1 = gtk.CellRendererToggle()
    cell1.connect ("toggled", self.on_selected_toggled)
    column = gtk.TreeViewColumn('Dealt with',cell1,active=i+1)
    self.listctrl.append_column(column)
    #column.set_sort_column_id(i+1)
    #column.pack_start(cell1, True)
    
    self.listctrl.get_selection().set_mode(gtk.SELECTION_SINGLE)
    for row in rows :
      row = row[:-1] + (False,)+(row[-1],)
      self.listmodel.get_model().append(row)
    self.listctrl.connect("cursor-changed", self.OnChange)
    sw = gtk.ScrolledWindow()
    w, h = default_size
    if len(rows) > 10 :
      sw.set_size_request(w, h)
    else :
      sw.set_size_request(w, 30 + (20 * len(rows)))
    sw.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
    box.pack_start(sw, False, False, 5)
    inside_vbox = gtk.VBox(False, 0)
    sw.add(self.listctrl)

  def OnChange (self, treeview) :
    import coot # import dependency
    selection = self.listctrl.get_selection()
    (model, tree_iter) = selection.get_selected()
    if tree_iter is not None :
      row = model[tree_iter]
      xyz = row[-1]
      if isinstance(xyz, tuple) and len(xyz) == 3 :
        set_rotation_centre(*xyz)
        set_zoom(30)
        graphics_draw()
  ##check box toggle
  def on_selected_toggled(self,renderer,path):
    if path is not None:
      model = self.listmodel.get_model()
      it = model.get_iter(path)
      #set toggle
      model[it][-2] = not model[it][-2]
      #set checkboxes for same residues in other lists
      try:
        chain = model[it][0]
        residue = model[it][1]
        for data_key in dict_residue_prop_objects:
          prop_obj = dict_residue_prop_objects[data_key]
          for row in prop_obj.listmodel.get_model():
            if data_key == 'probe':
              atom1_split = row[0].split()
              atom2_split = row[1].split()
              if atom1_split[0] == chain and atom1_split[1] == residue:
                row[-2] = model[it][-2]
              elif atom2_split[0] == chain and atom2_split[1] == residue:
                row[-2] = model[it][-2]
            elif row[0] == chain and row[1] == residue:
              row[-2] = model[it][-2]
      except IndexError: pass

  def check_chain_residue(self,chain,residue):
      pass
  
def show_probe_dots (show_dots, overlaps_only) :
  import coot # import dependency
  n_objects = number_of_generic_objects()
  sys.stdout.flush()
  if show_dots :
    for object_number in range(n_objects) :
      obj_name = generic_object_name(object_number)
      if overlaps_only and not obj_name in ["small overlap", "bad overlap"] :
        sys.stdout.flush()
        set_display_generic_object(object_number, 0)
      else :
        set_display_generic_object(object_number, 1)
  else :
    sys.stdout.flush()
    for object_number in range(n_objects) :
      set_display_generic_object(object_number, 0)

def load_pkl (file_name) :
  pkl = open(file_name, "rb")
  data = cPickle.load(pkl)
  pkl.close()
  return data
data = {}
data['rama'] = []
data['cbeta'] = []
data['jpred'] = [('C', '4', 'S', '-', 'H', (99.0, 67.1, 120.6)), ('C', '5', 'D', '-', 'H', (98.4, 66.9, 124.3)), ('B', '79', 'K', '-', 'H', (74.8, 112.9, 121.3)), ('B', '113', 'G', '-', 'H', (100.2, 131.7, 103.3))]
data['probe'] = [(' A 531  THR  OG1', ' A 654  ARG  NH2', -0.873, (82.028, 115.65, 98.256)), (' A 207  LEU HD12', ' A 240  LEU HD13', -0.84, (110.604, 99.712, 73.596)), (' B  83  VAL HG22', ' B  87  MET  HE2', -0.839, (82.055, 114.956, 117.416)), (' A 556  THR  OG1', ' A 624  ARG  NH2', -0.819, (98.28, 95.635, 108.013)), (' A 623  ASP  OD2', ' A 624  ARG  NH1', -0.79, (97.415, 95.416, 104.49)), (' A 427  GLY  O  ', ' A 430  LYS  NZ ', -0.788, (89.554, 58.687, 116.434)), (' A 676  LYS  NZ ', ' A 679  GLY  O  ', -0.783, (96.975, 102.012, 101.502)), (' A 795  SER  OG ', ' A 798  LYS  NZ ', -0.783, (103.059, 80.932, 96.412)), (' A 840  ALA  O  ', ' A 858  ARG  NH1', -0.773, (86.334, 78.17, 117.933)), (' A 810  HIS  O  ', ' A 816  HIS  ND1', -0.75, (89.636, 72.118, 98.208)), (' A 323  PRO  O  ', ' B 118  ASN  ND2', -0.736, (106.059, 116.202, 102.841)), (' A 283  PHE  O  ', ' A 287  PHE  N  ', -0.731, (109.249, 114.256, 78.126)), (' B 171  GLU  OE2', ' B 176  ASN  ND2', -0.726, (124.992, 98.103, 132.559)), (' A 457  ARG  NH2', ' A 458  TYR  OH ', -0.725, (110.206, 93.319, 105.082)), (' A 503  GLY  O  ', ' A 507  ASN  N  ', -0.719, (87.279, 108.084, 115.866)), (' A 822  GLN  NE2', ' A 916  TRP  O  ', -0.715, (70.589, 68.463, 96.663)), (' A 759  SER  HG ', " E   9    A HO2'", -0.713, (88.738, 89.979, 99.145)), (' A 785  VAL  O  ', ' A 789  GLN  N  ', -0.709, (104.019, 92.529, 87.537)), (' A 312  ASN  ND2', ' A 463  MET  SD ', -0.707, (100.827, 104.453, 83.311)), (' A 623  ASP  OD1', ' A 680  THR  OG1', -0.704, (94.469, 95.866, 101.463)), (' A 636  LEU HD21', ' A 655  LEU HD22', -0.703, (89.905, 109.149, 88.498)), (' A 588  VAL HG11', ' A 756  MET  HE2', -0.686, (80.921, 82.145, 92.07)), (' A 326  PHE  O  ', ' B 118  ASN  ND2', -0.676, (104.898, 117.117, 102.201)), (' A 483  TYR  O  ', ' A 641  LYS  NZ ', -0.675, (76.103, 99.576, 84.285)), (' A  31  VAL  N  ', ' A  50  LYS  O  ', -0.674, (120.574, 83.569, 66.903)), (' A 700  VAL  O  ', ' A 704  VAL HG23', -0.661, (94.821, 90.496, 78.664)), (' A 211  ASP  OD2', ' A 213  ASN  ND2', -0.658, (125.998, 99.51, 73.276)), (' A 611  ASN  ND2', ' A 769  THR  OG1', -0.653, (91.105, 72.493, 72.913)), (' A 473  VAL  HA ', ' A 476  VAL HG12', -0.642, (87.051, 98.221, 82.124)), (' A 403  ASN  ND2', ' B 129  MET  SD ', -0.642, (107.463, 113.396, 123.557)), (' A 598  TRP  HA ', ' A 601  MET  HE3', -0.641, (77.953, 77.465, 93.606)), (' A 472  VAL HG22', ' A 700  VAL HG11', -0.64, (91.882, 93.741, 79.433)), (' B 101  ASP  O  ', ' B 105  ASN  ND2', -0.638, (107.277, 134.838, 115.042)), (' A 501  SER  N  ', ' F   1    G  OP1', -0.638, (84.158, 100.936, 115.101)), (' A 348  PHE  CZ ', ' A 660  ALA  HB2', -0.637, (93.996, 113.682, 98.619)), (' A 632  ILE HG23', ' A 655  LEU HD11', -0.636, (91.73, 107.839, 91.22)), (' A 579  ILE  CG2', ' A 587  VAL HG21', -0.635, (78.747, 90.808, 90.598)), (' A 241  LEU HD12', ' A 244  ILE HD11', -0.632, (111.309, 99.455, 80.959)), (' A 469  LEU HD11', ' A 633  MET  HG2', -0.632, (93.319, 100.804, 86.278)), (' B 167  VAL HG21', ' B 172  ILE HD11', -0.631, (119.641, 105.059, 128.281)), (' A 332  LYS  O  ', ' A 333  ILE HD13', -0.629, (94.178, 131.237, 106.826)), (' A 500  LYS  NZ ', ' F   2    U  OP2', -0.625, (82.283, 96.956, 111.406)), (' A 515  TYR  HB3', ' A 566  MET  HE1', -0.625, (78.541, 110.509, 110.468)), (' A 136  GLU  N  ', ' A 136  GLU  OE1', -0.621, (109.175, 81.321, 87.088)), (' C  27  LYS  O  ', ' C  31  GLN  NE2', -0.619, (113.716, 87.077, 126.656)), (' B 161  ASP  O  ', ' B 181  ALA  HB3', -0.618, (114.249, 99.271, 127.323)), (' A 704  VAL  O  ', ' A 708  LEU  N  ', -0.606, (99.323, 88.392, 74.724)), (' A 295  HIS  N  ', ' A 310  CYS  SG ', -0.606, (97.821, 115.999, 81.59)), (' A 459  ASN  OD1', ' A 460  LEU  N  ', -0.602, (104.706, 100.5, 96.589)), (' A 297  ASN  OD1', ' A 353  VAL HG12', -0.602, (98.611, 121.492, 90.352)), (' A 578  SER  O  ', ' A 582  THR  OG1', -0.602, (73.134, 92.526, 89.533)), (' B 162  ALA  HB2', ' B 183  PRO  HB2', -0.6, (113.104, 100.129, 123.293)), (' A 692  SER  O  ', ' A 696  ILE HD12', -0.598, (88.116, 92.014, 89.459)), (' A  46  ALA  HB2', ' A 709  SER  HA ', -0.597, (105.652, 87.525, 72.515)), (' B 159  VAL HG22', ' B 186  VAL HG13', -0.594, (118.249, 110.088, 125.19)), (' A 704  VAL HG13', ' A 727  LEU HD21', -0.588, (96.893, 92.136, 74.191)), (' C  10  SER  HB3', ' C  39  ILE HD13', -0.586, (104.054, 73.397, 124.273)), (' A 631  ARG  NH1', ' A 635  SER  OG ', -0.584, (89.077, 102.964, 94.556)), (' C  36  HIS  CE1', ' C  40  LEU HD11', -0.579, (101.325, 77.668, 120.322)), (' A 723  LEU HD13', ' A 744  GLU  HG2', -0.578, (87.464, 89.035, 68.966)), (' A 778  SER  OG ', ' A 780  LYS  NZ ', -0.576, (100.336, 80.049, 80.82)), (' A 146  LEU HD22', ' A 174  VAL HG12', -0.575, (119.548, 93.436, 89.68)), (' A 908  THR HG23', ' A 910  ASP  H  ', -0.574, (67.875, 66.03, 111.86)), (' A 389  LEU HD23', ' B 130  VAL HG22', -0.572, (115.849, 110.681, 116.148)), (' B 134  ASP  OD1', ' B 137  THR  OG1', -0.57, (120.903, 101.556, 118.116)), (' A 207  LEU HD21', ' A 237  TYR  CE1', -0.564, (113.351, 102.801, 73.936)), (' A 856  ILE HD13', ' A 891  LEU HD23', -0.564, (74.844, 74.01, 122.759)), (' A 234  VAL  O  ', ' A 237  TYR  N  ', -0.562, (107.1, 103.459, 72.419)), (' B 161  ASP  HA ', ' B 184  LEU HD23', -0.56, (116.495, 102.471, 126.243)), (' A 134  PHE  O  ', ' A 784  SER  OG ', -0.559, (107.021, 85.076, 84.804)), (' A 705  ASN  ND2', ' A 708  LEU HD12', -0.558, (101.297, 91.89, 76.407)), (' D  84  THR  O  ', ' D  88  GLN  NE2', -0.557, (94.292, 79.497, 137.096)), (' A 169  PRO  O  ', ' A 172  LEU HD13', -0.552, (114.053, 96.025, 98.769)), (' A 483  TYR  HE1', ' A 582  THR HG21', -0.549, (74.236, 91.63, 87.235)), (' A 120  THR  OG1', ' A 211  ASP  OD1', -0.549, (124.064, 96.895, 73.511)), (' A 687  THR  O  ', ' A 691  ASN  ND2', -0.548, (88.764, 94.745, 97.724)), (' A 241  LEU  CD1', ' A 244  ILE HD11', -0.54, (111.84, 99.729, 80.374)), (' A 388  LEU  HB2', ' A 400  ALA  HB2', -0.538, (106.112, 112.05, 118.508)), (' A 608  ASP  OD2', ' A 751  LYS  NZ ', -0.537, (79.59, 76.457, 73.573)), (' C  12  VAL  O  ', ' C  15  SER  OG ', -0.537, (97.653, 78.907, 130.066)), (' A 876  GLU  O  ', ' A 880  VAL HG23', -0.536, (85.563, 62.976, 110.491)), (' C  36  HIS  HE1', ' C  40  LEU HD11', -0.534, (100.63, 78.01, 120.87)), (' A 477  ASP  OD1', ' A 478  LYS  N  ', -0.53, (82.357, 96.92, 79.002)), (' A 516  TYR  CD1', ' A 566  MET  HE2', -0.528, (77.412, 107.597, 108.35)), (' A 628  ASN  ND2', ' A 677  PRO  O  ', -0.527, (101.179, 104.359, 97.193)), (' A 152  CYS  HB2', ' A 174  VAL HG13', -0.526, (121.44, 92.791, 91.63)), (' A 278  GLU  N  ', ' A 278  GLU  OE1', -0.525, (108.944, 123.031, 87.862)), (' C  19  GLN  NE2', ' D  84  THR  OG1', -0.525, (94.032, 82.263, 133.573)), (' C   5  ASP  OD1', ' C   6  VAL  N  ', -0.525, (100.445, 66.753, 124.372)), (' A 410  VAL HG11', ' A 443  ALA  HA ', -0.523, (98.668, 86.542, 120.489)), (' A 531  THR  O  ', ' A 657  ASN  ND2', -0.52, (85.544, 115.316, 96.943)), (' A 160  LYS  NZ ', ' A 167  GLU  OE2', -0.519, (113.64, 84.344, 104.209)), (' A 629  MET  HA ', ' A 632  ILE HD12', -0.518, (96.768, 105.079, 90.325)), (' A 241  LEU  O  ', ' A 245  LEU HD21', -0.517, (110.173, 102.978, 81.106)), (' A 786  LEU  O  ', ' A 791  ASN  N  ', -0.517, (104.788, 92.305, 91.948)), (' A 388  LEU HD22', ' A 400  ALA  HB2', -0.516, (105.684, 110.55, 118.649)), (' A 630  LEU HD22', ' A 694  PHE  HE1', -0.516, (96.426, 95.989, 90.495)), (' A 796  GLU  N  ', ' A 796  GLU  OE1', -0.513, (103.688, 78.288, 91.941)), (' A 387  LEU HD12', ' A 388  LEU  H  ', -0.51, (108.541, 114.373, 115.717)), (' C  22  VAL HG13', ' C  28  LEU HD23', -0.506, (108.903, 88.1, 132.025)), (' A 750  ARG  O  ', ' A 754  SER  OG ', -0.504, (82.814, 81.316, 79.176)), (' A 454  ASP  OD1', ' A 455  TYR  N  ', -0.502, (106.775, 95.549, 108.098)), (' A 185  ALA  HB1', ' A 210  GLN  NE2', -0.502, (117.288, 104.355, 75.35)), (' A 249  ARG  O  ', ' A 252  THR HG23', -0.502, (115.866, 106.493, 90.941)), (' A 210  GLN  NE2', ' A 214  GLY  O  ', -0.5, (118.536, 104.477, 73.597)), (' A 428  PHE  CE2', ' A 883  LEU HD22', -0.499, (84.766, 63.631, 117.282)), (' D 101  ASP  OD1', ' D 102  ALA  N  ', -0.497, (111.633, 62.981, 132.217)), (' A 625  ALA  HB1', ' A 790  ASN  O  ', -0.496, (102.911, 94.32, 95.208)), (' B 142  CYS  SG ', ' B 186  VAL HG11', -0.496, (119.229, 110.43, 122.478)), (' B 104  ASN  ND2', ' B 107  ILE HD11', -0.495, (102.029, 136.413, 109.792)), (' A 477  ASP  O  ', ' A 481  ASP  N  ', -0.495, (79.294, 97.683, 81.488)), (' A 211  ASP  OD1', ' A 212  LEU  N  ', -0.495, (122.491, 98.275, 74.58)), (' A 560  VAL HG12', ' A 561  SER  H  ', -0.494, (88.858, 107.703, 107.73)), (' A 837  ILE HG23', ' A 862  LEU  HB3', -0.493, (83.039, 73.923, 113.615)), (' A 740  ASP  OD1', ' A 741  PHE  N  ', -0.493, (85.403, 96.113, 68.214)), (' A 689  TYR  OH ', " F   3    G  O2'", -0.493, (79.392, 93.378, 98.906)), (' A 576  LEU  O  ', ' A 580  ALA  N  ', -0.491, (75.681, 93.814, 93.688)), (' C  19  GLN  NE2', ' D  87  MET  SD ', -0.491, (94.84, 81.654, 132.408)), (' C  13  LEU HD23', ' C  55  LEU HD23', -0.49, (105.198, 75.558, 128.394)), (' A 590  GLY  N  ', " F   4    G  O2'", -0.488, (77.08, 87.665, 98.477)), (' A 233  VAL HG12', ' A 235  ASP  H  ', -0.488, (104.464, 106.104, 70.0)), (' A 848  VAL HG22', ' A 855  MET  HB3', -0.487, (79.784, 78.87, 123.116)), (' A 241  LEU HD12', ' A 244  ILE  CD1', -0.483, (111.733, 99.309, 81.457)), (' A 908  THR HG23', ' A 910  ASP  N  ', -0.483, (67.845, 66.09, 111.355)), (' A 720  VAL  CG2', ' A 775  LEU HD21', -0.482, (93.161, 81.826, 69.63)), (' A 190  VAL HG21', ' A 285  ARG  O  ', -0.481, (112.505, 114.12, 76.985)), (' A 304  ASP  OD1', ' A 305  ARG  N  ', -0.479, (88.001, 108.991, 82.011)), (' A 305  ARG  HE ', ' A 735  ARG HH12', -0.478, (89.629, 107.043, 76.467)), (' A 749  LEU HD23', ' A 750  ARG  N  ', -0.477, (84.114, 85.38, 78.282)), (' A 814  SER  O  ', ' A 815  GLN  NE2', -0.477, (85.37, 75.744, 103.474)), (' A 494  ILE  O  ', ' A 494  ILE HG22', -0.477, (71.693, 98.067, 102.961)), (' A 348  PHE  HZ ', ' A 660  ALA  HB2', -0.476, (93.629, 113.884, 98.706)), (' B  95  LEU  HA ', ' B  98  LEU HD12', -0.476, (96.16, 126.742, 119.727)), (' A 332  LYS  HA ', ' A 341  VAL HG22', -0.475, (96.935, 129.519, 109.73)), (' A 783  LYS  NZ ', ' A 796  GLU  OE1', -0.475, (105.58, 78.931, 90.308)), (' A 257  VAL HG22', ' A 266  ILE HG12', -0.474, (120.743, 120.96, 94.448)), (' A 146  LEU HD22', ' A 174  VAL  CG1', -0.473, (120.279, 93.231, 90.371)), (' C  52  MET  O  ', ' C  56  LEU HD13', -0.473, (108.985, 73.261, 129.933)), (' A 498  LEU  H  ', ' A 498  LEU HD23', -0.472, (74.55, 99.004, 112.417)), (' A 119  LEU  H  ', ' A 119  LEU HD23', -0.469, (128.309, 96.005, 69.124)), (' A 470  LEU  O  ', ' A 473  VAL HG12', -0.469, (90.392, 101.289, 79.543)), (' A 704  VAL  O  ', ' A 707  LEU  N  ', -0.469, (98.751, 87.709, 75.347)), (' A 820  VAL HG21', ' A 829  LEU HD12', -0.467, (77.488, 65.293, 98.089)), (' A 514  LEU  O  ', ' A 518  SER  N  ', -0.466, (73.638, 110.859, 113.825)), (' A 234  VAL  O  ', ' A 236  SER  N  ', -0.465, (106.139, 104.062, 71.636)), (' A 387  LEU HD21', ' B 128  LEU HD13', -0.459, (112.915, 116.506, 116.295)), (' A 270  LEU  C  ', ' A 271  LEU HD12', -0.457, (109.781, 125.554, 104.048)), (' A 450  ILE  H  ', ' A 450  ILE HD12', -0.457, (105.061, 98.06, 116.125)), (' A 684  ASP  OD1', ' A 685  ALA  N  ', -0.456, (85.77, 101.517, 101.921)), (' A 241  LEU  HG ', ' A 245  LEU HD21', -0.456, (111.153, 102.984, 81.206)), (' A 375  ALA  O  ', ' A 381  HIS  NE2', -0.454, (91.334, 116.801, 114.601)), (' A 720  VAL HG21', ' A 775  LEU HD21', -0.454, (93.167, 81.401, 69.691)), (' A 875  GLN  O  ', ' A 878  ALA  HB3', -0.451, (83.154, 58.787, 109.034)), (' A 825  ASP  OD1', ' A 826  TYR  N  ', -0.45, (73.85, 62.773, 88.436)), (' A 468  GLN  N  ', ' A 468  GLN  OE1', -0.449, (98.045, 99.731, 77.827)), (' A 315  VAL HG23', ' A 316  LEU  N  ', -0.449, (105.096, 108.41, 87.879)), (' A 630  LEU HD22', ' A 694  PHE  CE1', -0.449, (96.192, 95.667, 90.88)), (' A 620  PRO  HG2', ' A 792  VAL HG11', -0.448, (102.392, 87.398, 96.835)), (' A 781  ASN  O  ', ' A 785  VAL HG23', -0.447, (102.266, 87.637, 84.661)), (' A 120  THR  OG1', ' A 122  TYR  O  ', -0.447, (123.025, 94.915, 74.299)), (' A 414  ASN  ND2', ' A 846  ASP  OD1', -0.446, (88.83, 82.989, 126.86)), (' A 293  THR HG21', ' A 302  LEU HD23', -0.446, (94.504, 115.183, 77.986)), (' A 469  LEU  O  ', ' A 469  LEU HD23', -0.446, (92.143, 100.761, 82.383)), (' C   7  LYS  HE3', ' C  42  ALA  HB3', -0.445, (104.478, 69.616, 117.97)), (' B 176  ASN  OD1', ' B 179  ASN  ND2', -0.444, (124.301, 94.82, 132.097)), (' A 609  VAL HG21', ' A 765  CYS  HB3', -0.444, (85.025, 76.948, 82.109)), (' A  33  ARG  HB2', ' A  35  PHE  CE2', -0.443, (116.311, 88.969, 68.306)), (' A 307  ILE HG21', ' A 655  LEU  CD2', -0.443, (91.25, 110.581, 88.903)), (' A 283  PHE  O  ', ' A 286  TYR  N  ', -0.441, (110.185, 114.798, 79.056)), (' A 472  VAL HG22', ' A 700  VAL  CG1', -0.441, (92.592, 93.369, 80.107)), (' A 516  TYR  CE1', ' A 566  MET  HE2', -0.44, (78.008, 107.751, 108.539)), (' A 768  SER  O  ', ' A 772  SER  N  ', -0.438, (96.12, 75.359, 76.72)), (' A 564  SER  HG ', ' A 661  GLN  CD ', -0.438, (86.993, 109.551, 102.286)), (' A 878  ALA  O  ', ' A 881  PHE  N  ', -0.438, (81.076, 63.375, 111.189)), (' A 579  ILE HG22', ' A 587  VAL HG21', -0.438, (78.239, 91.036, 91.558)), (' A 753  PHE  CE1', ' A 777  ALA  HB3', -0.436, (92.499, 81.846, 82.294)), (' A 270  LEU  O  ', ' A 271  LEU HD12', -0.436, (109.464, 125.223, 104.723)), (' A 307  ILE HG21', ' A 655  LEU HD23', -0.435, (91.237, 111.011, 89.0)), (' A 572  HIS  CE1', ' A 638  LEU HD23', -0.435, (83.574, 103.166, 93.683)), (' C  23  GLU  N  ', ' C  23  GLU  OE1', -0.434, (104.189, 90.473, 130.744)), (' A 348  PHE  CE1', ' A 660  ALA  HB2', -0.433, (94.339, 113.268, 99.179)), (' A 280  LEU  O  ', ' A 280  LEU HD13', -0.432, (107.855, 120.467, 80.858)), (' A 704  VAL HG13', ' A 727  LEU  CD2', -0.431, (96.64, 92.127, 74.19)), (' A 560  VAL HG12', ' A 561  SER  N  ', -0.431, (88.728, 107.461, 108.233)), (' A 609  VAL HG21', ' A 765  CYS  SG ', -0.431, (84.936, 76.228, 81.809)), (' A 135  ASP  O  ', ' A 138  ASN  N  ', -0.43, (112.677, 80.923, 84.815)), (' A 698  GLN HE21', ' A 786  LEU HD11', -0.428, (98.339, 90.148, 89.226)), (' A 297  ASN  CG ', ' A 353  VAL HG12', -0.427, (98.722, 121.65, 89.767)), (' B 159  VAL HG13', ' B 186  VAL HG22', -0.427, (117.82, 107.911, 125.296)), (' A 540  THR  N  ', ' A 665  GLU  OE1', -0.427, (94.644, 108.22, 108.618)), (' A 128  VAL HG13', ' A 244  ILE HD13', -0.425, (110.495, 96.578, 80.855)), (' A 480  PHE  O  ', ' A 641  LYS  NZ ', -0.425, (76.902, 99.184, 84.365)), (' A 488  ILE HD11', ' A 493  VAL HG22', -0.424, (73.279, 104.755, 99.171)), (' B 167  VAL  CG2', ' B 172  ILE HD11', -0.422, (120.164, 105.16, 128.896)), (' A 332  LYS  C  ', ' A 333  ILE HD13', -0.422, (94.447, 131.093, 107.861)), (' A 572  HIS  CD2', ' A 638  LEU HD23', -0.422, (83.413, 103.05, 94.529)), (' A 405  VAL HG21', ' B 131  VAL HG21', -0.422, (109.613, 106.263, 121.023)), (' A 233  VAL HG11', ' A 733  ARG HH21', -0.421, (102.691, 105.622, 67.603)), (' A 390  ASP  HB2', ' A 392  ARG  HE ', -0.421, (110.285, 103.534, 116.93)), (' A 606  TYR  CD2', ' A 805  LEU HD23', -0.418, (82.316, 71.752, 84.277)), (' A 628  ASN  HB3', ' A 663  LEU HD11', -0.417, (97.302, 104.524, 95.518)), (' A 207  LEU HD21', ' A 237  TYR  HE1', -0.417, (114.134, 102.666, 74.127)), (' A 527  LEU HD23', ' A 531  THR  CG2', -0.417, (82.569, 115.818, 101.983)), (' B 132  ILE HD11', ' B 184  LEU  HG ', -0.416, (118.491, 102.701, 123.567)), (' A 494  ILE HD12', ' A 577  LYS  HG3', -0.416, (72.061, 98.529, 97.741)), (' A 132  ARG  HA ', ' A 788  TYR  CD1', -0.416, (107.485, 91.076, 83.594)), (' A 819  LEU HD11', ' A 826  TYR  HB3', -0.413, (77.979, 62.95, 90.215)), (' A 853  THR  OG1', ' A 854  LEU  N  ', -0.413, (74.097, 81.963, 124.554)), (' A 376  ALA  HB2', ' A 506  PHE  HE2', -0.411, (87.089, 113.655, 112.371)), (' A 792  VAL HG12', ' A 793  PHE  N  ', -0.41, (104.722, 87.648, 95.518)), (' C   5  ASP  OD2', ' D  97  LYS  NZ ', -0.407, (98.639, 63.022, 126.132)), (" F   1    G  O2'", " F   2    U  O4'", -0.407, (84.207, 98.597, 107.324)), (' A 483  TYR  CD2', ' A 579  ILE HD11', -0.407, (77.839, 94.793, 87.761)), (' A 471  PHE  O  ', ' A 475  VAL HG23', -0.407, (89.396, 96.832, 77.609)), (' A 609  VAL HG11', ' A 766  PHE  N  ', -0.407, (87.45, 76.187, 81.333)), (' A 588  VAL HG22', ' A 757  ILE  O  ', -0.406, (82.564, 85.583, 93.165)), (' A 460  LEU HD23', ' A 461  PRO  O  ', -0.406, (106.838, 101.792, 92.323)), (' A 606  TYR  O  ', ' A 609  VAL HG23', -0.404, (82.625, 76.637, 80.485)), (' B 132  ILE  O  ', ' B 183  PRO  HA ', -0.403, (115.879, 101.192, 121.337)), (' A 303  ASP  HA ', ' A 648  LEU HD11', -0.402, (86.968, 114.145, 81.681)), (' A 748  TYR  OH ', ' A 775  LEU HD23', -0.402, (91.941, 82.336, 72.099)), (' A 602  LEU  HA ', ' A 605  VAL HG12', -0.402, (80.657, 76.388, 87.592)), (' A 874  ASN  HB3', ' A 877  TYR  CD2', -0.401, (87.395, 60.592, 105.07)), (' A 460  LEU HD23', ' A 461  PRO  N  ', -0.401, (106.816, 101.992, 93.366)), (' A 257  VAL HG22', ' A 266  ILE  CG1', -0.401, (120.394, 120.297, 94.366)), (' A 819  LEU HD12', ' A 827  VAL  O  ', -0.4, (78.576, 65.03, 92.262)), (' A 416  ASN  OD1', ' A 844  VAL HG23', -0.4, (86.444, 76.816, 122.523))]
data['cablam'] = [('A', '218', 'ASP', 'check CA trace,carbonyls, peptide', ' \n-----', (119.4, 101.2, 61.9)), ('A', '235', 'ASP', 'check CA trace,carbonyls, peptide', 'turn\n--THH', (104.1, 105.3, 72.2)), ('A', '241', 'LEU', ' alpha helix', 'helix\nHHHSG', (109.2, 100.8, 79.5)), ('A', '249', 'ARG', 'check CA trace,carbonyls, peptide', 'turn\nTTTGG', (113.6, 104.7, 90.8)), ('A', '270', 'LEU', 'check CA trace,carbonyls, peptide', 'bend\n--SS-', (111.3, 123.9, 103.3)), ('A', '272', 'LYS', 'check CA trace,carbonyls, peptide', ' \nSS---', (107.5, 125.5, 98.8)), ('A', '274', 'ASP', 'check CA trace,carbonyls, peptide', ' \n----H', (104.1, 123.8, 93.5)), ('A', '275', 'PHE', 'check CA trace,carbonyls, peptide', ' \n---HH', (106.9, 122.5, 91.3)), ('A', '293', 'THR', ' beta sheet', ' \nSS---', (98.2, 115.3, 76.3)), ('A', '317', 'PHE', ' alpha helix', 'helix-3\nTGGGS', (107.3, 113.0, 88.6)), ('A', '337', 'GLY', 'check CA trace,carbonyls, peptide', 'bend\nESSSE', (89.1, 136.6, 116.4)), ('A', '338', 'VAL', 'check CA trace,carbonyls, peptide', 'bend\nSSSEE', (91.8, 134.1, 117.4)), ('A', '344', 'THR', 'check CA trace,carbonyls, peptide', 'strand\nEEEEE', (93.5, 124.4, 103.1)), ('A', '364', 'SER', 'check CA trace,carbonyls, peptide', 'bend\nEESS-', (82.1, 133.6, 112.5)), ('A', '384', 'SER', 'check CA trace,carbonyls, peptide', 'turn\nHTTS-', (99.3, 121.2, 118.3)), ('A', '386', 'ASN', 'check CA trace,carbonyls, peptide', ' \nTS---', (105.2, 117.5, 120.4)), ('A', '412', 'PRO', 'check CA trace,carbonyls, peptide', ' \n-----', (96.2, 83.8, 124.1)), ('A', '550', 'ALA', 'check CA trace,carbonyls, peptide', 'bend\n-BSSS', (98.0, 78.4, 111.7)), ('A', '552', 'ASN', 'check CA trace,carbonyls, peptide', 'bend\nSSS--', (102.6, 83.3, 112.8)), ('A', '554', 'ALA', ' beta sheet', ' \nS----', (99.3, 89.3, 112.4)), ('A', '555', 'ARG', ' beta sheet', ' \n----E', (98.0, 90.8, 109.2)), ('A', '556', 'THR', ' beta sheet', ' \n---EE', (97.2, 94.3, 110.4)), ('A', '573', 'GLN', ' alpha helix', 'turn\nHHTTT', (76.2, 102.1, 96.6)), ('A', '574', 'LYS', ' alpha helix', 'turn\nHTTTT', (74.0, 101.5, 93.7)), ('A', '585', 'ALA', 'check CA trace,carbonyls, peptide', 'bend\nTTSSB', (76.5, 86.3, 86.8)), ('A', '586', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nTSSB-', (80.2, 86.1, 86.9)), ('A', '587', 'VAL', 'check CA trace,carbonyls, peptide', 'beta bridge\nSSB-T', (80.4, 87.3, 90.5)), ('A', '593', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\n--STT', (76.6, 77.8, 97.9)), ('A', '594', 'PHE', 'check CA trace,carbonyls, peptide', 'turn\n-STTT', (73.6, 76.6, 99.8)), ('A', '606', 'TYR', 'check CA trace,carbonyls, peptide', 'helix\nHHHSS', (81.2, 75.3, 82.7)), ('A', '608', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nHSS-S', (80.7, 74.9, 77.3)), ('A', '611', 'ASN', 'check CA trace,carbonyls, peptide', 'bend\n-SSEE', (88.7, 71.4, 76.7)), ('A', '620', 'PRO', 'check CA trace,carbonyls, peptide', 'bend\n--SSH', (100.1, 86.9, 98.7)), ('A', '643', 'THR', 'check CA trace,carbonyls, peptide', 'turn\nT-TTT', (76.7, 110.4, 84.3)), ('A', '729', 'GLU', ' alpha helix', 'helix\nHHHHH', (96.3, 98.1, 66.8)), ('A', '735', 'ARG', 'check CA trace,carbonyls, peptide', ' \nT----', (93.0, 105.1, 71.5)), ('A', '758', 'LEU', 'check CA trace,carbonyls, peptide', 'strand\nEEETT', (85.3, 86.5, 95.1)), ('A', '775', 'LEU', 'check CA trace,carbonyls, peptide', 'bend\nHTSS-', (95.8, 82.9, 74.6)), ('A', '776', 'VAL', 'check CA trace,carbonyls, peptide', 'bend\nTSS--', (94.3, 82.5, 78.1)), ('A', '803', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nEES-T', (92.1, 68.5, 85.3)), ('A', '812', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\nS-SSS', (87.2, 78.2, 97.3)), ('A', '824', 'ASP', 'check CA trace,carbonyls, peptide', 'turn\nETTEE', (68.8, 60.2, 90.7)), ('A', '845', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nS-SSS', (88.0, 83.9, 121.7)), ('A', '847', 'ILE', 'check CA trace,carbonyls, peptide', 'bend\nSSSTT', (82.7, 83.6, 123.8)), ('A', '917', 'GLU', 'check CA trace,carbonyls, peptide', 'bend\nTTS--', (68.0, 69.5, 98.0)), ('A', '45', 'PHE', 'check CA trace', 'strand\n-EEEE', (106.4, 91.5, 71.5)), ('A', '46', 'ALA', 'check CA trace', 'strand\nEEEEE', (108.2, 88.2, 72.2)), ('A', '216', 'TRP', 'check CA trace', ' \n-----', (120.7, 104.2, 68.3)), ('A', '217', 'TYR', 'check CA trace', ' \n-----', (121.2, 103.3, 64.6)), ('A', '258', 'ASP', 'check CA trace', 'helix-3\nBGGG-', (122.9, 119.6, 88.9)), ('A', '326', 'PHE', 'check CA trace', ' \nTT-EE', (104.3, 116.8, 99.6)), ('A', '607', 'SER', 'check CA trace', 'bend\nHHSS-', (78.4, 75.9, 80.2)), ('A', '677', 'PRO', 'check CA trace', ' \nE----', (102.8, 105.2, 100.4)), ('A', '678', 'GLY', 'check CA trace', ' \n-----', (99.8, 102.9, 99.7)), ('A', '777', 'ALA', 'check CA trace', ' \nSS--H', (95.2, 82.2, 81.7)), ('A', '811', 'GLU', 'check CA trace', ' \n-S-SS', (89.8, 75.5, 97.0)), ('B', '101', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\n--SHH', (104.8, 133.9, 117.6)), ('B', '116', 'PRO', 'check CA trace,carbonyls, peptide', 'strand\n-EEST', (103.3, 121.8, 103.7)), ('B', '121', 'PRO', ' alpha helix', 'helix\nTHHHH', (105.9, 120.9, 114.1)), ('B', '126', 'ALA', 'check CA trace,carbonyls, peptide', 'bend\nS-S-E', (111.2, 122.9, 121.3)), ('B', '135', 'TYR', 'check CA trace,carbonyls, peptide', 'bend\nSSSHH', (123.2, 100.5, 121.7)), ('B', '150', 'ALA', 'check CA trace,carbonyls, peptide', 'bend\nESSSS', (120.0, 117.4, 110.3)), ('B', '151', 'SER', 'check CA trace,carbonyls, peptide', 'bend\nSSSSE', (121.8, 120.8, 110.4)), ('B', '152', 'ALA', 'check CA trace,carbonyls, peptide', 'bend\nSSSEE', (120.3, 122.1, 113.6)), ('B', '161', 'ASP', 'check CA trace,carbonyls, peptide', ' \nEE-SS', (115.1, 102.4, 127.7)), ('B', '178', 'PRO', ' three-ten', 'helix-3\nTGGGS', (122.8, 93.1, 127.6)), ('B', '181', 'ALA', 'check CA trace', ' \nGS-S-', (115.8, 96.9, 127.1)), ('C', '42', 'ALA', 'check CA trace,carbonyls, peptide', ' \nTT-SS', (106.7, 70.0, 116.6)), ('C', '43', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\nT-SSH', (107.8, 67.2, 114.4))]
data['rota'] = [('A', ' 463 ', 'MET', 0.2759312329591178, (103.341, 103.134, 86.071)), ('A', ' 703 ', 'ASN', 0.17667778784778002, (94.77700000000002, 87.20900000000002, 78.86))]
data['clusters'] = [('A', '118', 1, 'smoc Outlier\n', (130.3350067138672, 98.28700256347656, 69.15899658203125)), ('A', '119', 1, 'side-chain clash\nDihedral angle:CA:C\n', (126.896, 97.09100000000001, 70.24300000000001)), ('A', '120', 1, 'side-chain clash\nbackbone clash\nDihedral angle:N:CA\n', (125.73400000000001, 95.035, 73.17399999999999)), ('A', '122', 1, 'backbone clash\n', (123.025, 94.915, 74.299)), ('A', '123', 1, 'smoc Outlier\n', (119.58399963378906, 95.0459976196289, 74.18000030517578)), ('A', '124', 1, 'smoc Outlier\n', (117.31099700927734, 97.08999633789062, 76.44499969482422)), ('A', '128', 1, 'side-chain clash\n', (110.495, 96.578, 80.855)), ('A', '129', 1, 'Bond angle:CA:CB:CG\n', (111.722, 91.208, 78.077)), ('A', '130', 1, 'smoc Outlier\n', (113.14700317382812, 89.08999633789062, 80.89600372314453)), ('A', '131', 1, 'Dihedral angle:CA:C\n', (111.795, 91.726, 83.289)), ('A', '132', 1, 'side-chain clash\nDihedral angle:N:CA\nDihedral angle:CA:C\n', (108.315, 91.07, 82.062)), ('A', '133', 1, 'Dihedral angle:N:CA\n', (107.845, 87.313, 81.646)), ('A', '134', 1, 'side-chain clash\n', (107.021, 85.076, 84.804)), ('A', '135', 1, 'backbone clash\n', (112.677, 80.923, 84.815)), ('A', '136', 1, 'side-chain clash\n', (109.175, 81.321, 87.088)), ('A', '138', 1, 'backbone clash\nsmoc Outlier', (112.677, 80.923, 84.815)), ('A', '139', 1, 'Dihedral angle:CA:C\n', (114.693, 84.16999999999999, 84.584)), ('A', '140', 1, 'Dihedral angle:N:CA\n', (117.9, 84.507, 82.643)), ('A', '146', 1, 'side-chain clash\n', (120.279, 93.231, 90.371)), ('A', '152', 1, 'side-chain clash\n', (121.44, 92.791, 91.63)), ('A', '165', 1, 'smoc Outlier\n', (109.85900115966797, 91.58599853515625, 97.20700073242188)), ('A', '169', 1, 'side-chain clash\n', (114.053, 96.025, 98.769)), ('A', '172', 1, 'side-chain clash\n', (114.053, 96.025, 98.769)), ('A', '174', 1, 'side-chain clash\n', (120.279, 93.231, 90.371)), ('A', '175', 1, 'smoc Outlier\n', (117.46299743652344, 97.09200286865234, 90.86299896240234)), ('A', '185', 1, 'side-chain clash\n', (117.288, 104.355, 75.35)), ('A', '204', 1, 'Dihedral angle:CA:C\n', (107.338, 104.35799999999999, 64.042)), ('A', '205', 1, 'Dihedral angle:N:CA\n', (109.809, 103.43100000000001, 66.757)), ('A', '206', 1, 'smoc Outlier\n', (111.13099670410156, 100.33999633789062, 68.552001953125)), ('A', '207', 1, 'side-chain clash\nsmoc Outlier', (114.134, 102.666, 74.127)), ('A', '210', 1, 'side-chain clash\nbackbone clash\n', (118.536, 104.477, 73.597)), ('A', '211', 1, 'side-chain clash\nbackbone clash\n', (122.491, 98.275, 74.58)), ('A', '212', 1, 'backbone clash\n', (122.491, 98.275, 74.58)), ('A', '213', 1, 'side-chain clash\n', (125.998, 99.51, 73.276)), ('A', '214', 1, 'backbone clash\n', (118.536, 104.477, 73.597)), ('A', '215', 1, 'Dihedral angle:CA:C\n', (121.985, 104.836, 71.721)), ('A', '216', 1, 'cablam CA Geom Outlier\nDihedral angle:N:CA', (120.7, 104.2, 68.3)), ('A', '217', 1, 'cablam CA Geom Outlier\n', (121.2, 103.3, 64.6)), ('A', '218', 1, 'cablam Outlier\n', (119.4, 101.2, 61.9)), ('A', '219', 1, 'smoc Outlier\n', (116.70099639892578, 103.38700103759766, 60.32500076293945)), ('A', '233', 1, 'side-chain clash\n', (102.691, 105.622, 67.603)), ('A', '234', 1, 'backbone clash\nside-chain clash\nDihedral angle:CA:C\n', (107.24400000000001, 106.824, 70.92)), ('A', '235', 1, 'cablam Outlier\nside-chain clash\nDihedral angle:N:CA', (104.1, 105.3, 72.2)), ('A', '237', 1, 'side-chain clash\nbackbone clash\n', (114.134, 102.666, 74.127)), ('A', '240', 1, 'side-chain clash\n', (110.604, 99.712, 73.596)), ('A', '241', 1, 'cablam Outlier\nside-chain clash\nBond angle:CA:CB:CG', (109.2, 100.8, 79.5)), ('A', '244', 1, 'side-chain clash\n', (110.495, 96.578, 80.855)), ('A', '245', 1, 'side-chain clash\n', (111.153, 102.984, 81.206)), ('A', '247', 1, 'Bond angle:CA:CB:CG\nsmoc Outlier', (111.15899999999999, 99.41900000000001, 89.56)), ('A', '248', 1, 'Dihedral angle:CA:C\nsmoc Outlier', (114.57799999999999, 101.111, 90.14)), ('A', '249', 1, 'cablam Outlier\nside-chain clash\nDihedral angle:N:CA', (113.6, 104.7, 90.8)), ('A', '251', 1, 'smoc Outlier\n', (114.97899627685547, 109.14399719238281, 87.80000305175781)), ('A', '252', 1, 'side-chain clash\n', (115.866, 106.493, 90.941)), ('A', '303', 1, 'side-chain clash\n', (86.968, 114.145, 81.681)), ('A', '304', 1, 'backbone clash\n', (88.001, 108.991, 82.011)), ('A', '305', 1, 'backbone clash\nside-chain clash\n', (89.629, 107.043, 76.467)), ('A', '307', 1, 'side-chain clash\n', (91.237, 111.011, 89.0)), ('A', '308', 1, 'smoc Outlier\n', (94.43000030517578, 108.09700012207031, 84.82499694824219)), ('A', '312', 1, 'side-chain clash\n', (100.827, 104.453, 83.311)), ('A', '315', 1, 'backbone clash\nsmoc Outlier', (105.096, 108.41, 87.879)), ('A', '316', 1, 'backbone clash\n', (105.096, 108.41, 87.879)), ('A', '317', 1, 'cablam Outlier\n', (107.3, 113.0, 88.6)), ('A', '319', 1, 'Dihedral angle:CA:C\n', (109.54400000000001, 109.85199999999999, 93.118)), ('A', '320', 1, 'Dihedral angle:N:CA\n', (112.349, 112.32199999999999, 92.978)), ('A', '33', 1, 'side-chain clash\n', (116.311, 88.969, 68.306)), ('A', '348', 1, 'side-chain clash\n', (94.339, 113.268, 99.179)), ('A', '35', 1, 'side-chain clash\nDihedral angle:CA:C\n', (111.729, 91.903, 69.804)), ('A', '36', 1, 'Dihedral angle:N:CA\nsmoc Outlier', (108.769, 94.222, 69.614)), ('A', '374', 1, 'smoc Outlier\n', (88.13800048828125, 120.81999969482422, 111.00499725341797)), ('A', '375', 1, 'side-chain clash\nsmoc Outlier', (91.334, 116.801, 114.601)), ('A', '376', 1, 'side-chain clash\n', (87.089, 113.655, 112.371)), ('A', '378', 1, 'smoc Outlier\n', (95.37000274658203, 116.70899963378906, 110.28600311279297)), ('A', '381', 1, 'side-chain clash\n', (91.334, 116.801, 114.601)), ('A', '448', 1, 'smoc Outlier\n', (103.9469985961914, 93.55999755859375, 116.41699981689453)), ('A', '45', 1, 'cablam CA Geom Outlier\n', (106.4, 91.5, 71.5)), ('A', '450', 1, 'side-chain clash\n', (105.061, 98.06, 116.125)), ('A', '451', 1, 'Dihedral angle:CA:C\n', (106.89, 95.077, 112.705)), ('A', '452', 1, 'Dihedral angle:N:CA\n', (104.02, 94.70100000000001, 110.256)), ('A', '454', 1, 'backbone clash\n', (106.775, 95.549, 108.098)), ('A', '455', 1, 'backbone clash\n', (106.775, 95.549, 108.098)), ('A', '457', 1, 'side-chain clash\n', (110.206, 93.319, 105.082)), ('A', '458', 1, 'side-chain clash\n', (110.206, 93.319, 105.082)), ('A', '459', 1, 'backbone clash\n', (104.706, 100.5, 96.589)), ('A', '46', 1, 'cablam CA Geom Outlier\nside-chain clash', (108.2, 88.2, 72.2)), ('A', '460', 1, 'backbone clash\n', (106.816, 101.992, 93.366)), ('A', '461', 1, 'backbone clash\n', (106.816, 101.992, 93.366)), ('A', '462', 1, 'Dihedral angle:CA:C\n', (103.74400000000001, 101.766, 89.532)), ('A', '463', 1, 'side-chain clash\nRotamer\nDihedral angle:N:CA\n', (103.34100000000001, 103.134, 86.071)), ('A', '465', 1, 'Dihedral angle:CA:C\n', (101.10199999999999, 100.693, 81.538)), ('A', '466', 1, 'Dihedral angle:N:CA\n', (98.59700000000001, 103.112, 80.529)), ('A', '468', 1, 'side-chain clash\nsmoc Outlier', (98.045, 99.731, 77.827)), ('A', '469', 1, 'side-chain clash\n', (92.143, 100.761, 82.383)), ('A', '470', 1, 'side-chain clash\n', (90.392, 101.289, 79.543)), ('A', '471', 1, 'side-chain clash\n', (89.396, 96.832, 77.609)), ('A', '472', 1, 'side-chain clash\nbackbone clash\nsmoc Outlier', (92.592, 93.369, 80.107)), ('A', '473', 1, 'side-chain clash\n', (90.392, 101.289, 79.543)), ('A', '475', 1, 'side-chain clash\nsmoc Outlier', (89.396, 96.832, 77.609)), ('A', '477', 1, 'backbone clash\n', (79.294, 97.683, 81.488)), ('A', '478', 1, 'backbone clash\nDihedral angle:CA:C\n', (80.45100000000001, 95.49300000000001, 79.83)), ('A', '479', 1, 'Dihedral angle:N:CA\n', (81.012, 93.429, 82.894)), ('A', '480', 1, 'side-chain clash\n', (76.902, 99.184, 84.365)), ('A', '481', 1, 'backbone clash\n', (79.294, 97.683, 81.488)), ('A', '483', 1, 'side-chain clash\n', (77.839, 94.793, 87.761)), ('A', '485', 1, 'smoc Outlier\n', (74.91799926757812, 102.85099792480469, 89.55400085449219)), ('A', '488', 1, 'side-chain clash\n', (73.279, 104.755, 99.171)), ('A', '493', 1, 'side-chain clash\n', (73.279, 104.755, 99.171)), ('A', '494', 1, 'side-chain clash\n', (72.061, 98.529, 97.741)), ('A', '496', 1, 'smoc Outlier\n', (73.90399932861328, 97.98200225830078, 107.7959976196289)), ('A', '498', 1, 'side-chain clash\n', (74.55, 99.004, 112.417)), ('A', '499', 1, 'Dihedral angle:CA:C\n', (77.46000000000001, 100.115, 115.648)), ('A', '500', 1, 'Dihedral angle:N:CA\n', (81.027, 100.65899999999999, 114.593)), ('A', '502', 1, 'smoc Outlier\n', (84.0739974975586, 106.48500061035156, 113.0790023803711)), ('A', '503', 1, 'backbone clash\nsmoc Outlier', (87.279, 108.084, 115.866)), ('A', '506', 1, 'side-chain clash\n', (87.089, 113.655, 112.371)), ('A', '507', 1, 'backbone clash\n', (87.279, 108.084, 115.866)), ('A', '514', 1, 'backbone clash\n', (73.638, 110.859, 113.825)), ('A', '515', 1, 'side-chain clash\n', (78.541, 110.509, 110.468)), ('A', '516', 1, 'side-chain clash\nsmoc Outlier', (78.008, 107.751, 108.539)), ('A', '518', 1, 'backbone clash\n', (73.638, 110.859, 113.825)), ('A', '527', 1, 'side-chain clash\n', (82.569, 115.818, 101.983)), ('A', '531', 1, 'side-chain clash\n', (82.569, 115.818, 101.983)), ('A', '533', 1, 'Dihedral angle:CD:NE:CZ:NH1\nDihedral angle:CA:C\n', (84.992, 120.611, 95.13)), ('A', '534', 1, 'Dihedral angle:N:CA\n', (87.74400000000001, 120.334, 97.718)), ('A', '540', 1, 'side-chain clash\n', (94.644, 108.22, 108.618)), ('A', '541', 1, 'smoc Outlier\n', (94.3479995727539, 103.79000091552734, 112.89199829101562)), ('A', '542', 1, 'smoc Outlier\n', (96.197998046875, 100.47699737548828, 112.45999908447266)), ('A', '550', 1, 'cablam Outlier\n', (98.0, 78.4, 111.7)), ('A', '552', 1, 'cablam Outlier\n', (102.6, 83.3, 112.8)), ('A', '553', 1, 'smoc Outlier\n', (101.97100067138672, 86.72599792480469, 111.25199890136719)), ('A', '554', 1, 'cablam Outlier\n', (99.3, 89.3, 112.4)), ('A', '555', 1, 'cablam Outlier\n', (98.0, 90.8, 109.2)), ('A', '556', 1, 'cablam Outlier\nside-chain clash', (97.2, 94.3, 110.4)), ('A', '560', 1, 'side-chain clash\nbackbone clash\n', (88.728, 107.461, 108.233)), ('A', '561', 1, 'side-chain clash\nbackbone clash\n', (88.728, 107.461, 108.233)), ('A', '563', 1, 'smoc Outlier\n', (83.58000183105469, 111.48200225830078, 107.09500122070312)), ('A', '564', 1, 'side-chain clash\n', (86.993, 109.551, 102.286)), ('A', '566', 1, 'side-chain clash\nsmoc Outlier', (78.008, 107.751, 108.539)), ('A', '573', 1, 'cablam Outlier\nDihedral angle:CA:C', (76.2, 102.1, 96.6)), ('A', '574', 1, 'cablam Outlier\nDihedral angle:N:CA', (74.0, 101.5, 93.7)), ('A', '577', 1, 'side-chain clash\n', (72.061, 98.529, 97.741)), ('A', '578', 1, 'side-chain clash\n', (73.134, 92.526, 89.533)), ('A', '579', 1, 'side-chain clash\n', (77.839, 94.793, 87.761)), ('A', '582', 1, 'side-chain clash\n', (74.236, 91.63, 87.235)), ('A', '583', 1, 'Dihedral angle:CD:NE:CZ:NH1\n', (72.78, 85.646, 90.21300000000001)), ('A', '585', 1, 'cablam Outlier\nDihedral angle:CA:C', (76.5, 86.3, 86.8)), ('A', '586', 1, 'cablam Outlier\nDihedral angle:N:CA', (80.2, 86.1, 86.9)), ('A', '587', 1, 'cablam Outlier\nside-chain clash', (80.4, 87.3, 90.5)), ('A', '588', 1, 'side-chain clash\nbackbone clash\n', (82.564, 85.583, 93.165)), ('A', '593', 1, 'cablam Outlier\nDihedral angle:CA:C\nsmoc Outlier', (76.6, 77.8, 97.9)), ('A', '594', 1, 'cablam Outlier\nDihedral angle:N:CA', (73.6, 76.6, 99.8)), ('A', '598', 1, 'side-chain clash\n', (77.953, 77.465, 93.606)), ('A', '601', 1, 'side-chain clash\n', (77.953, 77.465, 93.606)), ('A', '602', 1, 'side-chain clash\n', (80.657, 76.388, 87.592)), ('A', '605', 1, 'side-chain clash\n', (80.657, 76.388, 87.592)), ('A', '606', 1, 'cablam Outlier\nside-chain clash', (81.2, 75.3, 82.7)), ('A', '607', 1, 'cablam CA Geom Outlier\n', (78.4, 75.9, 80.2)), ('A', '608', 1, 'cablam Outlier\nside-chain clash\nDihedral angle:CA:C', (80.7, 74.9, 77.3)), ('A', '609', 1, 'side-chain clash\nbackbone clash\nDihedral angle:N:CA\n', (84.166, 75.637, 78.27199999999999)), ('A', '611', 1, 'cablam Outlier\nside-chain clash', (88.7, 71.4, 76.7)), ('A', '612', 1, 'Dihedral angle:CA:C\n', (87.462, 72.40700000000001, 80.093)), ('A', '613', 1, 'Dihedral angle:N:CA\n', (89.598, 72.21300000000001, 83.14999999999999)), ('A', '620', 1, 'cablam Outlier\nside-chain clash', (100.1, 86.9, 98.7)), ('A', '623', 1, 'side-chain clash\n', (94.469, 95.866, 101.463)), ('A', '624', 1, 'side-chain clash\n', (97.415, 95.416, 104.49)), ('A', '625', 1, 'backbone clash\n', (102.911, 94.32, 95.208)), ('A', '626', 1, 'smoc Outlier\n', (98.78399658203125, 97.31099700927734, 96.2959976196289)), ('A', '628', 1, 'backbone clash\nside-chain clash\n', (97.302, 104.524, 95.518)), ('A', '629', 1, 'side-chain clash\n', (96.768, 105.079, 90.325)), ('A', '630', 1, 'side-chain clash\n', (96.192, 95.667, 90.88)), ('A', '632', 1, 'side-chain clash\n', (96.768, 105.079, 90.325)), ('A', '633', 1, 'side-chain clash\n', (93.319, 100.804, 86.278)), ('A', '636', 1, 'side-chain clash\n', (89.905, 109.149, 88.498)), ('A', '641', 1, 'side-chain clash\n', (76.902, 99.184, 84.365)), ('A', '648', 1, 'side-chain clash\n', (86.968, 114.145, 81.681)), ('A', '651', 1, 'smoc Outlier\n', (84.76699829101562, 113.41400146484375, 89.24800109863281)), ('A', '653', 1, 'Dihedral angle:CA:C\n', (87.65199999999999, 115.968, 93.037)), ('A', '654', 1, 'side-chain clash\nDihedral angle:N:CA\n', (85.82, 112.874, 94.195)), ('A', '655', 1, 'side-chain clash\nsmoc Outlier', (91.237, 111.011, 89.0)), ('A', '657', 1, 'side-chain clash\n', (85.544, 115.316, 96.943)), ('A', '658', 1, 'smoc Outlier\n', (89.13800048828125, 109.51499938964844, 98.38700103759766)), ('A', '660', 1, 'side-chain clash\n', (94.339, 113.268, 99.179)), ('A', '661', 1, 'side-chain clash\n', (86.993, 109.551, 102.286)), ('A', '662', 1, 'smoc Outlier\n', (92.30899810791016, 106.30599975585938, 102.82099914550781)), ('A', '663', 1, 'side-chain clash\n', (97.302, 104.524, 95.518)), ('A', '665', 1, 'side-chain clash\n', (94.644, 108.22, 108.618)), ('A', '666', 1, 'smoc Outlier\n', (98.63600158691406, 109.87899780273438, 107.69200134277344)), ('A', '676', 1, 'backbone clash\n', (96.975, 102.012, 101.502)), ('A', '677', 1, 'cablam CA Geom Outlier\nbackbone clash', (102.8, 105.2, 100.4)), ('A', '678', 1, 'cablam CA Geom Outlier\n', (99.8, 102.9, 99.7)), ('A', '679', 1, 'backbone clash\n', (96.975, 102.012, 101.502)), ('A', '680', 1, 'side-chain clash\n', (94.469, 95.866, 101.463)), ('A', '687', 1, 'side-chain clash\n', (88.764, 94.745, 97.724)), ('A', '691', 1, 'side-chain clash\n', (88.764, 94.745, 97.724)), ('A', '692', 1, 'side-chain clash\n', (88.116, 92.014, 89.459)), ('A', '694', 1, 'side-chain clash\n', (96.192, 95.667, 90.88)), ('A', '696', 1, 'side-chain clash\n', (88.116, 92.014, 89.459)), ('A', '698', 1, 'side-chain clash\nsmoc Outlier', (98.339, 90.148, 89.226)), ('A', '700', 1, 'side-chain clash\nbackbone clash\n', (92.592, 93.369, 80.107)), ('A', '703', 1, 'Rotamer\n', (94.77700000000002, 87.20900000000002, 78.86)), ('A', '704', 1, 'side-chain clash\nbackbone clash\n', (96.64, 92.127, 74.19)), ('A', '705', 1, 'side-chain clash\nDihedral angle:CA:C\n', (100.44200000000001, 89.114, 77.833)), ('A', '706', 1, 'Dihedral angle:N:CA\n', (99.44000000000001, 85.596, 77.32799999999999)), ('A', '707', 1, 'backbone clash\n', (98.751, 87.709, 75.347)), ('A', '708', 1, 'backbone clash\nside-chain clash\n', (101.297, 91.89, 76.407)), ('A', '709', 1, 'side-chain clash\n', (105.652, 87.525, 72.515)), ('A', '720', 1, 'side-chain clash\n', (93.167, 81.401, 69.691)), ('A', '726', 1, 'Dihedral angle:CA:C\n', (93.323, 94.289, 66.592)), ('A', '727', 1, 'side-chain clash\nDihedral angle:N:CA\n', (94.409, 94.29100000000001, 70.195)), ('A', '729', 1, 'cablam Outlier\nDihedral angle:CA:C', (96.3, 98.1, 66.8)), ('A', '730', 1, 'Dihedral angle:N:CA\n', (93.787, 98.982, 69.46400000000001)), ('A', '732', 1, 'smoc Outlier\n', (99.93599700927734, 100.19100189208984, 70.4000015258789)), ('A', '733', 1, 'side-chain clash\n', (102.691, 105.622, 67.603)), ('A', '735', 1, 'cablam Outlier\nside-chain clash\nDihedral angle:CA:C', (93.0, 105.1, 71.5)), ('A', '736', 1, 'Dihedral angle:N:CA\n', (89.3, 105.10199999999999, 71.212)), ('A', '737', 1, 'smoc Outlier\n', (86.5479965209961, 103.62999725341797, 73.38200378417969)), ('A', '748', 1, 'side-chain clash\n', (91.941, 82.336, 72.099)), ('A', '749', 1, 'backbone clash\nsmoc Outlier', (84.114, 85.38, 78.282)), ('A', '750', 1, 'side-chain clash\nbackbone clash\n', (84.114, 85.38, 78.282)), ('A', '751', 1, 'side-chain clash\nDihedral angle:CA:C\n', (82.506, 81.166, 75.76400000000001)), ('A', '752', 1, 'Dihedral angle:N:CA\n', (85.99600000000001, 79.897, 76.256)), ('A', '753', 1, 'side-chain clash\n', (92.499, 81.846, 82.294)), ('A', '754', 1, 'side-chain clash\nDihedral angle:CA:C\n', (84.425, 81.398, 82.033)), ('A', '755', 1, 'Dihedral angle:N:CA\n', (84.81700000000001, 82.479, 85.49100000000001)), ('A', '756', 1, 'side-chain clash\nbackbone clash\nDihedral angle:CA:C\n', (83.565, 83.21900000000001, 88.95100000000001)), ('A', '757', 1, 'backbone clash\nDihedral angle:N:CA\nDihedral angle:CA:C\n', (85.045, 85.518, 91.495)), ('A', '758', 1, 'cablam Outlier\nDihedral angle:CA:C\nDihedral angle:N:CA', (85.3, 86.5, 95.1)), ('A', '759', 1, 'Dihedral angle:CA:C\nDihedral angle:N:CA\n', (87.883, 89.239, 95.74600000000001)), ('A', '760', 1, 'Dihedral angle:N:CA\n', (90.96400000000001, 87.13199999999999, 95.304)), ('A', '764', 1, 'Dihedral angle:CA:C\n', (88.35, 79.506, 86.20700000000001)), ('A', '765', 1, 'side-chain clash\nDihedral angle:N:CA\n', (86.826, 76.884, 83.95700000000001)), ('A', '766', 1, 'backbone clash\n', (87.45, 76.187, 81.333)), ('A', '768', 1, 'backbone clash\n', (96.12, 75.359, 76.72)), ('A', '769', 1, 'side-chain clash\n', (91.105, 72.493, 72.913)), ('A', '772', 1, 'backbone clash\n', (96.12, 75.359, 76.72)), ('A', '775', 1, 'cablam Outlier\nside-chain clash', (95.8, 82.9, 74.6)), ('A', '776', 1, 'cablam Outlier\nDihedral angle:CA:C', (94.3, 82.5, 78.1)), ('A', '777', 1, 'cablam CA Geom Outlier\nside-chain clash\nDihedral angle:N:CA\nDihedral angle:CA:C', (95.2, 82.2, 81.7)), ('A', '778', 1, 'side-chain clash\nDihedral angle:N:CA\n', (97.837, 80.005, 83.374)), ('A', '780', 1, 'side-chain clash\n', (100.336, 80.049, 80.82)), ('A', '781', 1, 'side-chain clash\n', (102.266, 87.637, 84.661)), ('A', '783', 1, 'side-chain clash\n', (105.58, 78.931, 90.308)), ('A', '784', 1, 'side-chain clash\n', (107.021, 85.076, 84.804)), ('A', '785', 1, 'backbone clash\nside-chain clash\n', (102.266, 87.637, 84.661)), ('A', '786', 1, 'backbone clash\nside-chain clash\n', (98.339, 90.148, 89.226)), ('A', '788', 1, 'side-chain clash\n', (107.485, 91.076, 83.594)), ('A', '789', 1, 'backbone clash\n', (104.019, 92.529, 87.537)), ('A', '790', 1, 'backbone clash\n', (102.911, 94.32, 95.208)), ('A', '791', 1, 'backbone clash\nsmoc Outlier', (104.788, 92.305, 91.948)), ('A', '792', 1, 'side-chain clash\nbackbone clash\n', (104.722, 87.648, 95.518)), ('A', '793', 1, 'backbone clash\n', (104.722, 87.648, 95.518)), ('A', '795', 1, 'side-chain clash\n', (103.059, 80.932, 96.412)), ('A', '796', 1, 'side-chain clash\n', (105.58, 78.931, 90.308)), ('A', '798', 1, 'side-chain clash\n', (103.059, 80.932, 96.412)), ('A', '803', 1, 'cablam Outlier\n', (92.1, 68.5, 85.3)), ('A', '805', 1, 'side-chain clash\n', (82.316, 71.752, 84.277)), ('A', '822', 1, 'backbone clash\nside-chain clash\nsmoc Outlier', (88.738, 89.979, 99.145)), ('A', '916', 1, 'backbone clash\nside-chain clash\n', (88.738, 89.979, 99.145)), ('A', '270', 2, 'cablam Outlier\nside-chain clash', (111.3, 123.9, 103.3)), ('A', '271', 2, 'side-chain clash\n', (109.464, 125.223, 104.723)), ('A', '272', 2, 'cablam Outlier\n', (107.5, 125.5, 98.8)), ('A', '273', 2, 'Dihedral angle:CA:C\n', (104.74400000000001, 123.326, 97.273)), ('A', '274', 2, 'cablam Outlier\nDihedral angle:N:CA', (104.1, 123.8, 93.5)), ('A', '275', 2, 'cablam Outlier\n', (106.9, 122.5, 91.3)), ('A', '278', 2, 'side-chain clash\n', (108.944, 123.031, 87.862)), ('A', '292', 2, 'Dihedral angle:CA:C\n', (98.831, 112.868, 73.542)), ('A', '293', 2, 'cablam Outlier\nside-chain clash\nDihedral angle:N:CA', (98.2, 115.3, 76.3)), ('A', '295', 2, 'side-chain clash\n', (97.821, 115.999, 81.59)), ('A', '296', 2, 'Dihedral angle:CA:C\n', (100.141, 117.29, 85.842)), ('A', '297', 2, 'side-chain clash\nDihedral angle:N:CA\nDihedral angle:CA:C\n', (97.62499999999999, 119.45400000000001, 87.691)), ('A', '298', 2, 'Dihedral angle:N:CA\n', (94.886, 117.06700000000001, 86.812)), ('A', '302', 2, 'side-chain clash\n', (94.504, 115.183, 77.986)), ('A', '310', 2, 'side-chain clash\n', (97.821, 115.999, 81.59)), ('A', '325', 2, 'smoc Outlier\n', (107.36199951171875, 118.9489974975586, 99.58699798583984)), ('A', '326', 2, 'cablam CA Geom Outlier\n', (104.3, 116.8, 99.6)), ('A', '353', 2, 'side-chain clash\n', (98.722, 121.65, 89.767)), ('A', '810', 2, 'side-chain clash\nbackbone clash\n', (106.059, 116.202, 102.841)), ('A', '816', 2, 'side-chain clash\nbackbone clash\n', (106.059, 116.202, 102.841)), ('A', '414', 3, 'side-chain clash\n', (88.83, 82.989, 126.86)), ('A', '415', 3, 'smoc Outlier\n', (90.36900329589844, 76.11699676513672, 125.94400024414062)), ('A', '416', 3, 'side-chain clash\n', (86.444, 76.816, 122.523)), ('A', '836', 3, 'Dihedral angle:CD:NE:CZ:NH1\n', (89.357, 74.369, 111.05499999999999)), ('A', '837', 3, 'side-chain clash\nsmoc Outlier', (83.039, 73.923, 113.615)), ('A', '840', 3, 'side-chain clash\n', (86.334, 78.17, 117.933)), ('A', '842', 3, 'smoc Outlier\n', (88.32099914550781, 73.59500122070312, 120.74500274658203)), ('A', '844', 3, 'side-chain clash\n', (86.444, 76.816, 122.523)), ('A', '845', 3, 'cablam Outlier\n', (88.0, 83.9, 121.7)), ('A', '846', 3, 'side-chain clash\n', (88.83, 82.989, 126.86)), ('A', '847', 3, 'cablam Outlier\n', (82.7, 83.6, 123.8)), ('A', '848', 3, 'side-chain clash\n', (79.784, 78.87, 123.116)), ('A', '853', 3, 'backbone clash\n', (74.097, 81.963, 124.554)), ('A', '854', 3, 'backbone clash\n', (74.097, 81.963, 124.554)), ('A', '855', 3, 'side-chain clash\n', (79.784, 78.87, 123.116)), ('A', '856', 3, 'side-chain clash\n', (74.844, 74.01, 122.759)), ('A', '858', 3, 'side-chain clash\nDihedral angle:CD:NE:CZ:NH1\n', (78.5, 78.43700000000001, 117.66199999999999)), ('A', '862', 3, 'side-chain clash\n', (83.039, 73.923, 113.615)), ('A', '891', 3, 'side-chain clash\n', (74.844, 74.01, 122.759)), ('A', '236', 4, 'backbone clash\nside-chain clash\n', (112.915, 116.506, 116.295)), ('A', '386', 4, 'cablam Outlier\n', (105.2, 117.5, 120.4)), ('A', '387', 4, 'side-chain clash\n', (108.541, 114.373, 115.717)), ('A', '388', 4, 'side-chain clash\n', (108.541, 114.373, 115.717)), ('A', '390', 4, 'side-chain clash\nsmoc Outlier', (110.285, 103.534, 116.93)), ('A', '392', 4, 'side-chain clash\n', (110.285, 103.534, 116.93)), ('A', '398', 4, 'Dihedral angle:CA:C\n', (106.527, 113.396, 111.576)), ('A', '399', 4, 'Dihedral angle:N:CA\n', (105.285, 113.62299999999999, 115.114)), ('A', '400', 4, 'side-chain clash\n', (105.684, 110.55, 118.649)), ('A', '401', 4, 'smoc Outlier\n', (100.38500213623047, 113.00399780273438, 119.91400146484375)), ('A', '405', 4, 'smoc Outlier\n', (105.71600341796875, 105.75700378417969, 123.30799865722656)), ('A', '476', 4, 'side-chain clash\n', (107.463, 113.396, 123.557)), ('A', '572', 4, 'side-chain clash\n', (109.613, 106.263, 121.023)), ('A', '638', 4, 'side-chain clash\n', (109.613, 106.263, 121.023)), ('A', '427', 5, 'side-chain clash\nDihedral angle:CA:C\n', (89.41900000000001, 57.86, 120.06)), ('A', '428', 5, 'side-chain clash\nDihedral angle:N:CA\n', (89.774, 61.271, 118.585)), ('A', '430', 5, 'side-chain clash\n', (89.554, 58.687, 116.434)), ('A', '873', 5, 'smoc Outlier\n', (84.44300079345703, 57.52299880981445, 101.69599914550781)), ('A', '874', 5, 'side-chain clash\n', (87.395, 60.592, 105.07)), ('A', '875', 5, 'side-chain clash\n', (83.154, 58.787, 109.034)), ('A', '876', 5, 'side-chain clash\nDihedral angle:CA:C\n', (86.279, 59.325, 110.573)), ('A', '877', 5, 'side-chain clash\nDihedral angle:N:CA\n', (85.84400000000001, 62.137, 108.112)), ('A', '878', 5, 'side-chain clash\nbackbone clash\n', (81.076, 63.375, 111.189)), ('A', '879', 5, 'Dihedral angle:CA:C\n', (82.422, 60.708000000000006, 112.406)), ('A', '880', 5, 'side-chain clash\nDihedral angle:N:CA\n', (83.49900000000001, 64.282, 112.46000000000001)), ('A', '881', 5, 'backbone clash\n', (81.076, 63.375, 111.189)), ('A', '883', 5, 'side-chain clash\n', (84.766, 63.631, 117.282)), ('A', '818', 6, 'smoc Outlier\n', (83.66200256347656, 66.29299926757812, 95.61299896240234)), ('A', '819', 6, 'side-chain clash\nbackbone clash\n', (78.576, 65.03, 92.262)), ('A', '820', 6, 'side-chain clash\n', (77.488, 65.293, 98.089)), ('A', '824', 6, 'cablam Outlier\n', (68.8, 60.2, 90.7)), ('A', '825', 6, 'backbone clash\n', (73.85, 62.773, 88.436)), ('A', '826', 6, 'backbone clash\nside-chain clash\n', (77.979, 62.95, 90.215)), ('A', '827', 6, 'backbone clash\n', (78.576, 65.03, 92.262)), ('A', '829', 6, 'side-chain clash\n', (77.488, 65.293, 98.089)), ('A', '329', 7, 'Dihedral angle:CA:C\n', (99.293, 122.63199999999999, 102.79)), ('A', '330', 7, 'Dihedral angle:N:CA\n', (98.586, 124.932, 105.70400000000001)), ('A', '332', 7, 'side-chain clash\n', (94.447, 131.093, 107.861)), ('A', '333', 7, 'side-chain clash\n', (94.447, 131.093, 107.861)), ('A', '341', 7, 'side-chain clash\n', (96.935, 129.519, 109.73)), ('A', '344', 7, 'cablam Outlier\n', (93.5, 124.4, 103.1)), ('A', '190', 8, 'backbone clash\n', (112.505, 114.12, 76.985)), ('A', '280', 8, 'side-chain clash\n', (107.855, 120.467, 80.858)), ('A', '283', 8, 'backbone clash\nsmoc Outlier', (110.185, 114.798, 79.056)), ('A', '285', 8, 'backbone clash\nDihedral angle:CD:NE:CZ:NH1\n', (112.31, 116.30799999999999, 79.107)), ('A', '286', 8, 'backbone clash\n', (110.185, 114.798, 79.056)), ('A', '287', 8, 'backbone clash\n', (109.249, 114.256, 78.126)), ('A', '811', 9, 'cablam CA Geom Outlier\nDihedral angle:CA:C', (89.8, 75.5, 97.0)), ('A', '812', 9, 'cablam Outlier\nDihedral angle:N:CA', (87.2, 78.2, 97.3)), ('A', '814', 9, 'side-chain clash\n', (85.37, 75.744, 103.474)), ('A', '815', 9, 'side-chain clash\n', (85.37, 75.744, 103.474)), ('A', '576', 10, 'backbone clash\n', (77.08, 87.665, 98.477)), ('A', '580', 10, 'backbone clash\n', (77.08, 87.665, 98.477)), ('A', '740', 10, 'backbone clash\nside-chain clash\n', (79.392, 93.378, 98.906)), ('A', '741', 10, 'backbone clash\nside-chain clash\n', (79.392, 93.378, 98.906)), ('A', '257', 11, 'side-chain clash\n', (120.394, 120.297, 94.366)), ('A', '258', 11, 'cablam CA Geom Outlier\n', (122.9, 119.6, 88.9)), ('A', '265', 11, 'smoc Outlier\n', (120.91899871826172, 116.47200012207031, 97.91600036621094)), ('A', '266', 11, 'side-chain clash\n', (120.394, 120.297, 94.366)), ('A', '410', 12, 'side-chain clash\n', (98.668, 86.542, 120.489)), ('A', '412', 12, 'cablam Outlier\n', (96.2, 83.8, 124.1)), ('A', '443', 12, 'side-chain clash\n', (98.668, 86.542, 120.489)), ('A', '908', 13, 'side-chain clash\nbackbone clash\n', (67.845, 66.09, 111.355)), ('A', '910', 13, 'side-chain clash\nbackbone clash\n', (67.845, 66.09, 111.355)), ('A', '643', 14, 'cablam Outlier\n', (76.7, 110.4, 84.3)), ('A', '645', 14, 'smoc Outlier\n', (74.69000244140625, 113.52300262451172, 88.73899841308594)), ('A', '337', 15, 'cablam Outlier\n', (89.1, 136.6, 116.4)), ('A', '338', 15, 'cablam Outlier\n', (91.8, 134.1, 117.4)), ('A', '723', 16, 'side-chain clash\nsmoc Outlier', (87.464, 89.035, 68.966)), ('A', '744', 16, 'side-chain clash\n', (87.464, 89.035, 68.966)), ('A', '684', 17, 'backbone clash\n', (85.77, 101.517, 101.921)), ('A', '685', 17, 'backbone clash\n', (85.77, 101.517, 101.921)), ('A', '631', 18, 'side-chain clash\n', (89.077, 102.964, 94.556)), ('A', '635', 18, 'side-chain clash\n', (89.077, 102.964, 94.556)), ('A', '160', 19, 'side-chain clash\n', (113.64, 84.344, 104.209)), ('A', '167', 19, 'side-chain clash\n', (113.64, 84.344, 104.209)), ('A', '31', 20, 'backbone clash\n', (120.574, 83.569, 66.903)), ('A', '50', 20, 'backbone clash\nsmoc Outlier', (120.574, 83.569, 66.903)), ('A', '917', 21, 'cablam Outlier\n', (68.0, 69.5, 98.0)), ('A', '918', 21, 'smoc Outlier\n', (67.04100036621094, 72.8290023803711, 96.27200317382812)), ('B', '132', 1, 'side-chain clash\n', (115.879, 101.192, 121.337)), ('B', '133', 1, 'Dihedral angle:CA:C\n', (116.606, 99.933, 118.99300000000001)), ('B', '134', 1, 'side-chain clash\nDihedral angle:N:CA\n', (119.91000000000001, 99.054, 120.64)), ('B', '135', 1, 'cablam Outlier\n', (123.2, 100.5, 121.7)), ('B', '137', 1, 'side-chain clash\n', (120.903, 101.556, 118.116)), ('B', '142', 1, 'side-chain clash\n', (119.229, 110.43, 122.478)), ('B', '159', 1, 'side-chain clash\n', (117.82, 107.911, 125.296)), ('B', '160', 1, 'Dihedral angle:CA:C\n', (114.85799999999999, 105.849, 129.14299999999997)), ('B', '161', 1, 'cablam Outlier\nside-chain clash\nDihedral angle:N:CA', (115.1, 102.4, 127.7)), ('B', '162', 1, 'side-chain clash\n', (113.104, 100.129, 123.293)), ('B', '165', 1, 'smoc Outlier\n', (113.63700103759766, 102.9219970703125, 133.68600463867188)), ('B', '167', 1, 'side-chain clash\n', (120.164, 105.16, 128.896)), ('B', '171', 1, 'side-chain clash\nsmoc Outlier', (124.992, 98.103, 132.559)), ('B', '172', 1, 'side-chain clash\n', (120.164, 105.16, 128.896)), ('B', '175', 1, 'smoc Outlier\n', (129.96299743652344, 96.79399871826172, 128.17999267578125)), ('B', '176', 1, 'side-chain clash\n', (124.301, 94.82, 132.097)), ('B', '178', 1, 'cablam Outlier\nDihedral angle:CA:C', (122.8, 93.1, 127.6)), ('B', '179', 1, 'side-chain clash\nDihedral angle:N:CA\n', (121.13499999999999, 94.498, 130.666)), ('B', '180', 1, 'Dihedral angle:CA:C\n', (119.163, 96.96000000000001, 128.53)), ('B', '181', 1, 'cablam CA Geom Outlier\nside-chain clash\nDihedral angle:N:CA', (115.8, 96.9, 127.1)), ('B', '183', 1, 'side-chain clash\n', (115.879, 101.192, 121.337)), ('B', '184', 1, 'side-chain clash\n', (118.491, 102.701, 123.567)), ('B', '186', 1, 'side-chain clash\n', (117.82, 107.911, 125.296)), ('B', '188', 1, 'smoc Outlier\n', (116.64700317382812, 116.16699981689453, 123.8219985961914)), ('B', '121', 2, 'cablam Outlier\nsmoc Outlier', (105.9, 120.9, 114.1)), ('B', '124', 2, 'Dihedral angle:CA:C\nsmoc Outlier', (108.196, 124.95700000000001, 115.90400000000001)), ('B', '125', 2, 'Dihedral angle:N:CA\n', (110.374, 122.41400000000002, 117.65499999999999)), ('B', '126', 2, 'cablam Outlier\n', (111.2, 122.9, 121.3)), ('B', '128', 2, 'side-chain clash\n', (112.915, 116.506, 116.295)), ('B', '130', 2, 'side-chain clash\nsmoc Outlier', (115.849, 110.681, 116.148)), ('B', '88', 3, 'smoc Outlier\n', (84.81800079345703, 122.32499694824219, 120.36499786376953)), ('B', '92', 3, 'smoc Outlier\n', (89.7020034790039, 125.41300201416016, 121.48400115966797)), ('B', '95', 3, 'side-chain clash\n', (96.16, 126.742, 119.727)), ('B', '96', 3, 'Dihedral angle:CD:NE:CZ:NH1\n', (97.196, 126.53, 124.70400000000001)), ('B', '98', 3, 'side-chain clash\n', (96.16, 126.742, 119.727)), ('B', '149', 4, 'smoc Outlier\n', (119.60099792480469, 116.85299682617188, 114.00499725341797)), ('B', '150', 4, 'cablam Outlier\nsmoc Outlier', (120.0, 117.4, 110.3)), ('B', '151', 4, 'cablam Outlier\n', (121.8, 120.8, 110.4)), ('B', '152', 4, 'cablam Outlier\n', (120.3, 122.1, 113.6)), ('B', '100', 5, 'Bond angle:C\n', (103.958, 130.678, 119.545)), ('B', '101', 5, 'cablam Outlier\nside-chain clash\nBond angle:N:CA', (104.8, 133.9, 117.6)), ('B', '105', 5, 'side-chain clash\n', (107.277, 134.838, 115.042)), ('B', '116', 6, 'cablam Outlier\nsmoc Outlier', (103.3, 121.8, 103.7)), ('B', '118', 6, 'side-chain clash\n', (104.898, 117.117, 102.201)), ('B', '104', 7, 'side-chain clash\n', (102.029, 136.413, 109.792)), ('B', '107', 7, 'side-chain clash\nsmoc Outlier', (102.029, 136.413, 109.792)), ('B', '83', 8, 'side-chain clash\n', (82.055, 114.956, 117.416)), ('B', '87', 8, 'side-chain clash\n', (82.055, 114.956, 117.416)), ('C', '10', 1, 'side-chain clash\n', (104.054, 73.397, 124.273)), ('C', '11', 1, 'smoc Outlier\n', (99.45099639892578, 76.7969970703125, 125.30400085449219)), ('C', '12', 1, 'side-chain clash\n', (97.653, 78.907, 130.066)), ('C', '13', 1, 'side-chain clash\n', (105.198, 75.558, 128.394)), ('C', '15', 1, 'side-chain clash\n', (97.653, 78.907, 130.066)), ('C', '17', 1, 'smoc Outlier\n', (102.59600067138672, 82.9010009765625, 132.01699829101562)), ('C', '2', 1, 'smoc Outlier\n', (101.61799621582031, 62.7239990234375, 123.26399993896484)), ('C', '22', 1, 'side-chain clash\n', (94.84, 81.654, 132.408)), ('C', '23', 1, 'side-chain clash\n', (98.639, 63.022, 126.132)), ('C', '28', 1, 'side-chain clash\n', (94.84, 81.654, 132.408)), ('C', '36', 1, 'side-chain clash\n', (94.032, 82.263, 133.573)), ('C', '39', 1, 'side-chain clash\n', (104.054, 73.397, 124.273)), ('C', '4', 1, 'smoc Outlier\njpred outlier', (98.97699737548828, 67.12699890136719, 120.5510025024414)), ('C', '40', 1, 'side-chain clash\n', (94.032, 82.263, 133.573)), ('C', '42', 1, 'cablam Outlier\nside-chain clash', (106.7, 70.0, 116.6)), ('C', '43', 1, 'cablam Outlier\n', (107.8, 67.2, 114.4)), ('C', '44', 1, 'smoc Outlier\n', (110.50199890136719, 65.44999694824219, 116.54299926757812)), ('C', '5', 1, 'backbone clash\njpred outlier', (100.445, 66.753, 124.372)), ('C', '52', 1, 'side-chain clash\nsmoc Outlier', (108.985, 73.261, 129.933)), ('C', '55', 1, 'side-chain clash\n', (105.198, 75.558, 128.394)), ('C', '56', 1, 'side-chain clash\n', (108.985, 73.261, 129.933)), ('C', '6', 1, 'backbone clash\n', (100.445, 66.753, 124.372)), ('C', '7', 1, 'side-chain clash\n', (104.478, 69.616, 117.97)), ('C', '8', 1, 'smoc Outlier\n', (97.8489990234375, 72.04000091552734, 124.48699951171875)), ('C', '33', 2, 'smoc Outlier\n', (106.8949966430664, 83.75299835205078, 123.12100219726562)), ('C', '35', 2, 'smoc Outlier\n', (109.62799835205078, 79.1780014038086, 122.697998046875)), ('C', '37', 2, 'smoc Outlier\n', (105.7979965209961, 79.80000305175781, 118.63200378417969)), ('C', '27', 3, 'side-chain clash\n', (113.716, 87.077, 126.656)), ('C', '31', 3, 'side-chain clash\n', (113.716, 87.077, 126.656)), ('C', '21', 4, 'smoc Outlier\n', (102.94000244140625, 90.03600311279297, 134.0590057373047)), ('D', '84', 1, 'side-chain clash\n', (94.032, 82.263, 133.573)), ('D', '87', 1, 'side-chain clash\nsmoc Outlier', (94.84, 81.654, 132.408)), ('D', '88', 1, 'side-chain clash\n', (94.292, 79.497, 137.096)), ('D', '101', 2, 'backbone clash\n', (111.633, 62.981, 132.217)), ('D', '102', 2, 'backbone clash\n', (111.633, 62.981, 132.217)), ('D', '103', 2, 'smoc Outlier\n', (109.0270004272461, 66.96600341796875, 133.83900451660156))]
data['omega'] = [('A', ' 216 ', 'TRP', None, (121.635, 104.436, 69.33800000000001)), ('A', ' 235 ', 'ASP', None, (105.044, 105.824, 71.201)), ('A', ' 466 ', 'ILE', None, (99.849, 102.385, 80.407)), ('A', ' 609 ', 'VAL', None, (82.719, 75.497, 78.38100000000003)), ('A', ' 706 ', 'ALA', None, (99.513, 86.87500000000003, 77.996)), ('A', ' 755 ', 'MET', None, (84.14399999999999, 82.09700000000002, 84.27200000000003)), ('B', ' 181 ', 'ALA', None, (116.78900000000003, 96.951, 128.165))]
data['smoc'] = [('A', 36, 'ASP', 0.4259123536672201, (108.76899719238281, 94.22200012207031, 69.61399841308594)), ('A', 42, 'VAL', 0.348560480145963, (103.46700286865234, 89.9749984741211, 63.082000732421875)), ('A', 50, 'LYS', 0.642594723211747, (118.38500213623047, 85.74800109863281, 65.89800262451172)), ('A', 118, 'ARG', 0.5775136234027372, (130.3350067138672, 98.28700256347656, 69.15899658203125)), ('A', 123, 'THR', 0.4243391795221411, (119.58399963378906, 95.0459976196289, 74.18000030517578)), ('A', 124, 'MET', 0.4826303954365928, (117.31099700927734, 97.08999633789062, 76.44499969482422)), ('A', 130, 'ALA', 0.49387049334559535, (113.14700317382812, 89.08999633789062, 80.89600372314453)), ('A', 138, 'ASN', 0.6634906305940678, (113.70999908447266, 80.63500213623047, 83.51899719238281)), ('A', 165, 'PHE', 0.6893961731144834, (109.85900115966797, 91.58599853515625, 97.20700073242188)), ('A', 175, 'TYR', 0.6338701016055127, (117.46299743652344, 97.09200286865234, 90.86299896240234)), ('A', 192, 'PHE', 0.44037255670162917, (116.2249984741211, 110.9540023803711, 69.31500244140625)), ('A', 206, 'THR', 0.50822121597962, (111.13099670410156, 100.33999633789062, 68.552001953125)), ('A', 207, 'LEU', 0.5157323864687456, (113.7249984741211, 99.4729995727539, 71.22200012207031)), ('A', 219, 'PHE', 0.2856941701725005, (116.70099639892578, 103.38700103759766, 60.32500076293945)), ('A', 247, 'LEU', 0.37945177747672176, (111.15899658203125, 99.41899871826172, 89.55999755859375)), ('A', 248, 'THR', 0.5292120672114503, (114.5780029296875, 101.11100006103516, 90.13999938964844)), ('A', 251, 'LEU', 0.6707526122509351, (114.97899627685547, 109.14399719238281, 87.80000305175781)), ('A', 261, 'LEU', 0.7082781498384918, (124.625, 111.09500122070312, 90.94499969482422)), ('A', 265, 'TYR', 0.7074589065095369, (120.91899871826172, 116.47200012207031, 97.91600036621094)), ('A', 283, 'PHE', 0.7277236804069592, (107.49800109863281, 115.72100067138672, 81.07499694824219)), ('A', 308, 'LEU', 0.626976645655325, (94.43000030517578, 108.09700012207031, 84.82499694824219)), ('A', 315, 'VAL', 0.5494350643837382, (103.78399658203125, 109.11399841308594, 89.91600036621094)), ('A', 325, 'SER', 0.7217373704134997, (107.36199951171875, 118.9489974975586, 99.58699798583984)), ('A', 360, 'ASN', 0.7784182881344444, (87.00900268554688, 131.2570037841797, 104.58599853515625)), ('A', 368, 'PHE', 0.6786865316003285, (78.58599853515625, 121.60099792480469, 112.78399658203125)), ('A', 374, 'TYR', 0.7307018008515939, (88.13800048828125, 120.81999969482422, 111.00499725341797)), ('A', 375, 'ALA', 0.7434105730771967, (87.98999786376953, 118.16100311279297, 113.74099731445312)), ('A', 378, 'PRO', 0.7130090754232277, (95.37000274658203, 116.70899963378906, 110.28600311279297)), ('A', 390, 'ASP', 0.22446556274423704, (111.83100128173828, 106.24500274658203, 115.95500183105469)), ('A', 401, 'LEU', 0.5605875977958108, (100.38500213623047, 113.00399780273438, 119.91400146484375)), ('A', 405, 'VAL', 0.4345913807096676, (105.71600341796875, 105.75700378417969, 123.30799865722656)), ('A', 408, 'GLN', 0.3574873012586362, (100.08999633789062, 96.51499938964844, 123.66799926757812)), ('A', 415, 'PHE', 0.48749441093904194, (90.36900329589844, 76.11699676513672, 125.94400024414062)), ('A', 419, 'PHE', 0.4514246890010447, (84.4020004272461, 68.7509994506836, 124.28800201416016)), ('A', 436, 'GLU', 0.5660295747158804, (95.24600219726562, 65.73300170898438, 114.55899810791016)), ('A', 448, 'ALA', 0.3713600941113356, (103.9469985961914, 93.55999755859375, 116.41699981689453)), ('A', 468, 'GLN', 0.6645740951982632, (96.51899719238281, 98.58999633789062, 78.55899810791016)), ('A', 472, 'VAL', 0.7121375140301331, (90.96900177001953, 96.88500213623047, 80.03099822998047)), ('A', 475, 'VAL', 0.7037776884953436, (86.58499908447266, 95.83300018310547, 78.62699890136719)), ('A', 485, 'GLY', 0.6819375536313714, (74.91799926757812, 102.85099792480469, 89.55400085449219)), ('A', 496, 'ASN', 0.6759182693472915, (73.90399932861328, 97.98200225830078, 107.7959976196289)), ('A', 502, 'ALA', 0.5700261340749502, (84.0739974975586, 106.48500061035156, 113.0790023803711)), ('A', 503, 'GLY', 0.647172646534664, (87.70899963378906, 107.76000213623047, 113.11599731445312)), ('A', 510, 'GLY', 0.6074041708032448, (80.79299926757812, 107.41600036621094, 119.59500122070312)), ('A', 516, 'TYR', 0.5436103467695299, (74.36499786376953, 108.29199981689453, 110.18399810791016)), ('A', 525, 'ASP', 0.6857202770601095, (74.71700286865234, 115.55799865722656, 101.2979965209961)), ('A', 541, 'GLN', 0.6133622482703155, (94.3479995727539, 103.79000091552734, 112.89199829101562)), ('A', 542, 'MET', 0.5130737398826366, (96.197998046875, 100.47699737548828, 112.45999908447266)), ('A', 553, 'ARG', 0.6726591006343112, (101.97100067138672, 86.72599792480469, 111.25199890136719)), ('A', 563, 'CYS', 0.6655021329779345, (83.58000183105469, 111.48200225830078, 107.09500122070312)), ('A', 566, 'MET', 0.7069297045134207, (79.85800170898438, 108.1780014038086, 104.53099822998047)), ('A', 593, 'LYS', 0.649181892006624, (76.5719985961914, 77.78500366210938, 97.90699768066406)), ('A', 626, 'MET', 0.6529129524702599, (98.78399658203125, 97.31099700927734, 96.2959976196289)), ('A', 645, 'CYS', 0.7646091335228603, (74.69000244140625, 113.52300262451172, 88.73899841308594)), ('A', 651, 'ARG', 0.6738849897086666, (84.76699829101562, 113.41400146484375, 89.24800109863281)), ('A', 655, 'LEU', 0.6707356427473838, (88.79900360107422, 110.80699920654297, 93.09600067138672)), ('A', 658, 'GLU', 0.6707419147803668, (89.13800048828125, 109.51499938964844, 98.38700103759766)), ('A', 662, 'VAL', 0.7355584559738537, (92.30899810791016, 106.30599975585938, 102.82099914550781)), ('A', 666, 'MET', 0.6483053641597862, (98.63600158691406, 109.87899780273438, 107.69200134277344)), ('A', 698, 'GLN', 0.738626836630462, (94.9219970703125, 91.01000213623047, 86.6510009765625)), ('A', 723, 'LEU', 0.6168298968795887, (91.66999816894531, 89.30000305175781, 67.91300201416016)), ('A', 732, 'TYR', 0.5406956623427048, (99.93599700927734, 100.19100189208984, 70.4000015258789)), ('A', 737, 'VAL', 0.48162320519934754, (86.5479965209961, 103.62999725341797, 73.38200378417969)), ('A', 749, 'LEU', 0.6490035340621639, (86.04399871826172, 85.03800201416016, 76.93499755859375)), ('A', 791, 'ASN', 0.6867319855516325, (105.71800231933594, 93.49600219726562, 93.78800201416016)), ('A', 818, 'MET', 0.6546025749837752, (83.66200256347656, 66.29299926757812, 95.61299896240234)), ('A', 822, 'GLN', 0.6662863876035662, (71.64099884033203, 63.689998626708984, 94.43699645996094)), ('A', 837, 'ILE', 0.6270899084298586, (86.1520004272461, 73.45899963378906, 112.87300109863281)), ('A', 842, 'CYS', 0.5396964218751935, (88.32099914550781, 73.59500122070312, 120.74500274658203)), ('A', 864, 'ILE', 0.5823546409141035, (76.22699737548828, 72.38999938964844, 109.28600311279297)), ('A', 873, 'PRO', 0.7103381710829273, (84.44300079345703, 57.52299880981445, 101.69599914550781)), ('A', 889, 'ARG', 0.6799167506725387, (72.58000183105469, 65.8479995727539, 121.56800079345703)), ('A', 918, 'PRO', 0.6210002559381667, (67.04100036621094, 72.8290023803711, 96.27200317382812)), ('B', 88, 'GLN', 0.589327245072888, (84.81800079345703, 122.32499694824219, 120.36499786376953)), ('B', 92, 'PHE', 0.37959496464158254, (89.7020034790039, 125.41300201416016, 121.48400115966797)), ('B', 107, 'ILE', 0.5343254679758521, (103.86299896240234, 132.5659942626953, 107.52999877929688)), ('B', 116, 'PRO', 0.6229704573688433, (103.33799743652344, 121.79299926757812, 103.74700164794922)), ('B', 121, 'PRO', 0.6452126780985178, (105.93800354003906, 120.93199920654297, 114.05899810791016)), ('B', 124, 'THR', 0.7340756134631196, (108.19599914550781, 124.95700073242188, 115.90399932861328)), ('B', 130, 'VAL', 0.40264920478283545, (114.71199798583984, 109.68399810791016, 119.41500091552734)), ('B', 131, 'VAL', 0.4450735176874311, (113.46199798583984, 106.10099792480469, 119.79100036621094)), ('B', 149, 'TYR', 0.6384788041939495, (119.60099792480469, 116.85299682617188, 114.00499725341797)), ('B', 150, 'ALA', 0.6596531700472831, (120.02300262451172, 117.4229965209961, 110.25700378417969)), ('B', 165, 'LYS', 0.6889492557584539, (113.63700103759766, 102.9219970703125, 133.68600463867188)), ('B', 171, 'GLU', 0.7487320912309658, (125.56700134277344, 103.01599884033203, 132.0019989013672)), ('B', 175, 'ASP', 0.7469523473737218, (129.96299743652344, 96.79399871826172, 128.17999267578125)), ('B', 188, 'ALA', 0.6573429285359662, (116.64700317382812, 116.16699981689453, 123.8219985961914)), ('C', 2, 'LYS', 0.6336352037070121, (101.61799621582031, 62.7239990234375, 123.26399993896484)), ('C', 4, 'SER', 0.589570309583729, (98.97699737548828, 67.12699890136719, 120.5510025024414)), ('C', 8, 'CYS', 0.4607719997826674, (97.8489990234375, 72.04000091552734, 124.48699951171875)), ('C', 11, 'VAL', 0.5043908993387579, (99.45099639892578, 76.7969970703125, 125.30400085449219)), ('C', 17, 'LEU', 0.7484022037056417, (102.59600067138672, 82.9010009765625, 132.01699829101562)), ('C', 21, 'ARG', 0.7212809299626084, (102.94000244140625, 90.03600311279297, 134.0590057373047)), ('C', 33, 'VAL', 0.46627562327614397, (106.8949966430664, 83.75299835205078, 123.12100219726562)), ('C', 35, 'LEU', 0.49258179350501646, (109.62799835205078, 79.1780014038086, 122.697998046875)), ('C', 37, 'ASN', 0.5263590107628934, (105.7979965209961, 79.80000305175781, 118.63200378417969)), ('C', 44, 'ASP', 0.6535982790396975, (110.50199890136719, 65.44999694824219, 116.54299926757812)), ('C', 52, 'MET', 0.6334804858192948, (109.18099975585938, 72.4219970703125, 127.3550033569336)), ('D', 87, 'MET', 0.645020491614519, (93.37899780273438, 76.73300170898438, 134.36700439453125)), ('D', 90, 'MET', 0.49839741829417256, (93.9010009765625, 71.45899963378906, 134.63099670410156)), ('D', 103, 'LEU', 0.7006739504406472, (109.0270004272461, 66.96600341796875, 133.83900451660156)), ('D', 111, 'ARG', 0.694870219080495, (107.18599700927734, 70.53299713134766, 145.4010009765625)), ('D', 114, 'CYS', 0.6813278375376904, (113.49199676513672, 73.99700164794922, 144.8350067138672))]
handle_read_draw_probe_dots_unformatted("/home/ccpem/agnel/gisaid/countries_seq/structure_data/emdb/EMD-22288/6xqb/Model_validation_1/validation_cootdata/molprobity_probe6xqb_0.txt", 0, 0)
show_probe_dots(True, True)
gui = coot_molprobity_todo_list_gui(data=data)
