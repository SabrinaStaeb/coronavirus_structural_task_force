
from __future__ import division
import cPickle
try :
  import gobject
except ImportError :
  gobject = None
import sys

dict_residue_prop_objects = {}
class coot_extension_gui (object) :
  def __init__ (self, title) :
    import gtk
    self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
    scrolled_win = gtk.ScrolledWindow()
    self.outside_vbox = gtk.VBox(False, 2)
    self.inside_vbox = gtk.VBox(False, 0)
    self.window.set_title(title)
    self.inside_vbox.set_border_width(0)
    self.window.add(self.outside_vbox)
    self.outside_vbox.pack_start(scrolled_win, True, True, 0)
    scrolled_win.add_with_viewport(self.inside_vbox)
    scrolled_win.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)

  def finish_window (self) :
    import gtk
    self.outside_vbox.set_border_width(2)
    ok_button = gtk.Button("  Close  ")
    self.outside_vbox.pack_end(ok_button, False, False, 0)
    ok_button.connect("clicked", lambda b: self.destroy_window())
    self.window.connect("delete_event", lambda a, b: self.destroy_window())
    self.window.show_all()

  def destroy_window (self, *args) :
    self.window.destroy()
    self.window = None

  def confirm_data (self, data) :
    for data_key in self.data_keys :
      outlier_list = data.get(data_key)
      if outlier_list is not None and len(outlier_list) > 0 :
        return True
    return False

  def create_property_lists (self, data) :
    import gtk
    for data_key in self.data_keys :
      outlier_list = data[data_key]
      if outlier_list is None or len(outlier_list) == 0 :
        continue
      else :
        frame = gtk.Frame(self.data_titles[data_key])
        vbox = gtk.VBox(False, 2)
        frame.set_border_width(6)
        frame.add(vbox)
        self.add_top_widgets(data_key, vbox)
        self.inside_vbox.pack_start(frame, False, False, 5)
        list_obj = residue_properties_list(
          columns=self.data_names[data_key],
          column_types=self.data_types[data_key],
          rows=outlier_list,
          box=vbox)
        ##save property list frame object
        dict_residue_prop_objects[data_key] = list_obj
# Molprobity result viewer
class coot_molprobity_todo_list_gui (coot_extension_gui) :
  data_keys = [ "clusters","rama", "rota", "cbeta", "probe", "smoc", "cablam",
               "jpred"]
  data_titles = { "clusters"  : "Outlier residue clusters",
                  "rama"  : "Ramachandran outliers",
                  "rota"  : "Rotamer outliers",
                  "cbeta" : "C-beta outliers",
                  "probe" : "Severe clashes",
                  "smoc"  : "Local density fit (SMOC)",
                  "cablam": "Ca geometry (CaBLAM)",
                  "jpred":"SS prediction"}
  data_names = { "clusters"  : ["Chain","Residue","Cluster","Outlier types"],
                 "rama"  : ["Chain", "Residue", "Name", "Score"],
                 "rota"  : ["Chain", "Residue", "Name", "Score"],
                 "cbeta" : ["Chain", "Residue", "Name", "Conf.", "Deviation"],
                 "probe" : ["Atom 1", "Atom 2", "Overlap"],
                 "smoc" : ["Chain", "Residue", "Name", "Score"],
                 "cablam" : ["Chain", "Residue","Name","recommendation","DSSP"],
                 "jpred" : ["Chain", "Residue","Name","predicted SS","current SS"]}
  if (gobject is not None) :
    data_types = {  "clusters" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_INT, gobject.TYPE_STRING,
                             gobject.TYPE_PYOBJECT],
                    "rama" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "rota" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cbeta" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "probe" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "smoc" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cablam" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_STRING,
                             gobject.TYPE_STRING,gobject.TYPE_PYOBJECT],
                   "jpred" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_STRING,
                             gobject.TYPE_STRING,gobject.TYPE_PYOBJECT]}
  else :
    data_types = dict([ (s, []) for s in ["clusters","rama","rota","cbeta","probe","smoc",
                                          "cablam","jpred"] ])

  def __init__ (self, data_file=None, data=None) :
    assert ([data, data_file].count(None) == 1)
    if (data is None) :
      data = load_pkl(data_file)
    if not self.confirm_data(data) :
      return
    coot_extension_gui.__init__(self, "MolProbity to-do list")
    self.dots_btn = None
    self.dots2_btn = None
    self._overlaps_only = True
    self.window.set_default_size(420, 600)
    self.create_property_lists(data)
    self.finish_window()

  def add_top_widgets (self, data_key, box) :
    import gtk
    if data_key == "probe" :
      hbox = gtk.HBox(False, 2)
      self.dots_btn = gtk.CheckButton("Show Probe dots")
      hbox.pack_start(self.dots_btn, False, False, 5)
      self.dots_btn.connect("toggled", self.toggle_probe_dots)
      self.dots2_btn = gtk.CheckButton("Overlaps only")
      hbox.pack_start(self.dots2_btn, False, False, 5)
      self.dots2_btn.connect("toggled", self.toggle_all_probe_dots)
      self.dots2_btn.set_active(True)
      self.toggle_probe_dots()
      box.pack_start(hbox, False, False, 0)

  def toggle_probe_dots (self, *args) :
    if self.dots_btn is not None :
      show_dots = self.dots_btn.get_active()
      overlaps_only = self.dots2_btn.get_active()
      if show_dots :
        self.dots2_btn.set_sensitive(True)
      else :
        self.dots2_btn.set_sensitive(False)
      show_probe_dots(show_dots, overlaps_only)

  def toggle_all_probe_dots (self, *args) :
    if self.dots2_btn is not None :
      self._overlaps_only = self.dots2_btn.get_active()
      self.toggle_probe_dots()

class rsc_todo_list_gui (coot_extension_gui) :
  data_keys = ["by_res", "by_atom"]
  data_titles = ["Real-space correlation by residue",
                 "Real-space correlation by atom"]
  data_names = {}
  data_types = {}

class residue_properties_list (object) :
  def __init__ (self, columns, column_types, rows, box,
      default_size=(380,200)) :
    assert len(columns) == (len(column_types) - 1)
    if (len(rows) > 0) and (len(rows[0]) != len(column_types)) :
      raise RuntimeError("Wrong number of rows:\n%s" % str(rows[0]))
    import gtk
    ##adding a column type for checkbox (bool) before atom coordinate
    if gobject is not None:
        column_types = column_types[:-1]+[bool]+[column_types[-1]]
    
    self.liststore = gtk.ListStore(*column_types)
    self.listmodel = gtk.TreeModelSort(self.liststore)
    self.listctrl = gtk.TreeView(self.listmodel)
    self.listctrl.column = [None]*len(columns)
    self.listctrl.cell = [None]*len(columns)
    for i, column_label in enumerate(columns) :
      cell = gtk.CellRendererText()
      column = gtk.TreeViewColumn(column_label)
      self.listctrl.append_column(column)
      column.set_sort_column_id(i)
      column.pack_start(cell, True)
      column.set_attributes(cell, text=i)
    ##add a cell for checkbox
    cell1 = gtk.CellRendererToggle()
    cell1.connect ("toggled", self.on_selected_toggled)
    column = gtk.TreeViewColumn('Dealt with',cell1,active=i+1)
    self.listctrl.append_column(column)
    #column.set_sort_column_id(i+1)
    #column.pack_start(cell1, True)
    
    self.listctrl.get_selection().set_mode(gtk.SELECTION_SINGLE)
    for row in rows :
      row = row[:-1] + (False,)+(row[-1],)
      self.listmodel.get_model().append(row)
    self.listctrl.connect("cursor-changed", self.OnChange)
    sw = gtk.ScrolledWindow()
    w, h = default_size
    if len(rows) > 10 :
      sw.set_size_request(w, h)
    else :
      sw.set_size_request(w, 30 + (20 * len(rows)))
    sw.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
    box.pack_start(sw, False, False, 5)
    inside_vbox = gtk.VBox(False, 0)
    sw.add(self.listctrl)

  def OnChange (self, treeview) :
    import coot # import dependency
    selection = self.listctrl.get_selection()
    (model, tree_iter) = selection.get_selected()
    if tree_iter is not None :
      row = model[tree_iter]
      xyz = row[-1]
      if isinstance(xyz, tuple) and len(xyz) == 3 :
        set_rotation_centre(*xyz)
        set_zoom(30)
        graphics_draw()
  ##check box toggle
  def on_selected_toggled(self,renderer,path):
    if path is not None:
      model = self.listmodel.get_model()
      it = model.get_iter(path)
      #set toggle
      model[it][-2] = not model[it][-2]
      #set checkboxes for same residues in other lists
      try:
        chain = model[it][0]
        residue = model[it][1]
        for data_key in dict_residue_prop_objects:
          prop_obj = dict_residue_prop_objects[data_key]
          for row in prop_obj.listmodel.get_model():
            if data_key == 'probe':
              atom1_split = row[0].split()
              atom2_split = row[1].split()
              if atom1_split[0] == chain and atom1_split[1] == residue:
                row[-2] = model[it][-2]
              elif atom2_split[0] == chain and atom2_split[1] == residue:
                row[-2] = model[it][-2]
            elif row[0] == chain and row[1] == residue:
              row[-2] = model[it][-2]
      except IndexError: pass

  def check_chain_residue(self,chain,residue):
      pass
  
def show_probe_dots (show_dots, overlaps_only) :
  import coot # import dependency
  n_objects = number_of_generic_objects()
  sys.stdout.flush()
  if show_dots :
    for object_number in range(n_objects) :
      obj_name = generic_object_name(object_number)
      if overlaps_only and not obj_name in ["small overlap", "bad overlap"] :
        sys.stdout.flush()
        set_display_generic_object(object_number, 0)
      else :
        set_display_generic_object(object_number, 1)
  else :
    sys.stdout.flush()
    for object_number in range(n_objects) :
      set_display_generic_object(object_number, 0)

def load_pkl (file_name) :
  pkl = open(file_name, "rb")
  data = cPickle.load(pkl)
  pkl.close()
  return data
data = {}
data['rama'] = []
data['smoc'] = []
data['jpred'] = []
data['probe'] = [(' C 706  ALA  CB ', ' C1306  NAG  H62', -0.957, (264.152, 298.532, 206.563)), (' C 706  ALA  HB2', ' C1306  NAG  H62', -0.861, (264.84, 298.578, 207.758)), (' A 353  TRP  O  ', ' A 466  ARG  NH1', -0.847, (291.028, 248.533, 326.659)), (' B 164  ASN  HB3', ' B1301  NAG  HN2', -0.836, (304.213, 248.907, 317.765)), (' B1101  HIS  HD2', ' B1103  PHE  CE1', -0.723, (292.828, 257.017, 191.652)), (' A 777  ASN  OD1', ' A1019  ARG  NH1', -0.722, (274.628, 286.005, 239.568)), (' C 777  ASN  OD1', ' C1019  ARG  NH1', -0.706, (288.086, 270.623, 241.242)), (' D  90  ASN  OD1', ' D  92  THR  OG1', -0.688, (280.809, 267.934, 352.727)), (' A 710  ASN  HB3', ' A1306  NAG  H82', -0.675, (263.29, 242.006, 207.279)), (' A1081  ILE HG23', ' A1135  ASN  HB3', -0.672, (265.822, 247.241, 194.484)), (' B 462  LYS  NZ ', ' B 465  GLU  OE2', -0.658, (285.974, 313.512, 293.373)), (' C 706  ALA  HB1', ' C1306  NAG  H62', -0.648, (263.429, 298.265, 206.884)), (' A 122  ASN  OD1', ' A 125  ASN  N  ', -0.639, (221.49, 293.594, 298.728)), (' C 706  ALA  HB2', ' C1306  NAG  C6 ', -0.634, (264.29, 299.373, 207.409)), (' D 152  MET  HG3', ' D 270  MET  HB3', -0.618, (252.023, 245.516, 386.705)), (' D 382  ASP  OD1', ' D 385  TYR  OH ', -0.611, (267.197, 255.403, 357.909)), (' C 318  PHE  HD1', ' C 593  GLY  HA3', -0.606, (268.419, 308.005, 259.276)), (' B 105  ILE HG12', ' B 241  LEU HD11', -0.596, (310.256, 240.891, 301.888)), (' A  91  TYR  OH ', ' A 191  GLU  OE2', -0.594, (230.188, 278.076, 279.96)), (' C 295  PRO  HD3', ' C 633  TRP  CG ', -0.586, (279.853, 315.118, 257.135)), (' B  21  ARG  HE ', ' B  79  PHE  HB3', -0.579, (324.348, 237.667, 297.195)), (' D 120  LEU HD23', ' D 123  MET  HE1', -0.575, (273.902, 249.293, 382.172)), (' B 581  THR HG22', ' B 583  GLU  HG2', -0.569, (323.377, 297.927, 275.704)), (' D 273  ARG  O  ', ' D 449  THR HG22', -0.567, (252.25, 255.708, 379.226)), (' D 468  ILE HD12', ' D 473  TRP  HA ', -0.566, (267.123, 260.346, 393.616)), (' D 230  PHE  CZ ', ' D 484  ILE HG23', -0.563, (255.231, 265.781, 383.978)), (' C 905  ARG  NH1', ' C1049  LEU  O  ', -0.56, (287.741, 275.985, 215.343)), (' B1083  HIS  CE1', ' B1137  VAL  H  ', -0.559, (288.654, 267.592, 183.938)), (' B 484  GLU  HA ', ' B 488  CYS  HB2', -0.554, (272.057, 321.915, 312.51)), (' C 244  LEU HD12', ' C 246  ARG HH21', -0.549, (305.022, 345.357, 285.814)), (' A 437  ASN  ND2', ' A 507  PRO  O  ', -0.549, (273.557, 244.047, 335.682)), (' C 124  THR HG22', ' C 125  ASN  ND2', -0.543, (317.149, 329.487, 292.352)), (' D 388  GLN  O  ', ' D 393  ARG  NE ', -0.542, (274.851, 257.578, 351.809)), (' B 551  VAL HG23', ' B 590  CYS  HB3', -0.541, (314.614, 281.085, 268.504)), (' B1083  HIS  CG ', ' B1084  ASP  H  ', -0.54, (288.765, 271.442, 183.437)), (' D 262  LEU  HB3', ' D 267  LEU HD21', -0.539, (246.213, 255.582, 389.67)), (' B 340  GLU  O  ', ' B 356  LYS  NZ ', -0.538, (303.509, 304.376, 306.704)), (' A1083  HIS  CG ', ' A1084  ASP  H  ', -0.535, (271.496, 247.157, 189.439)), (' A 474  GLN  NE2', ' A 478  THR  H  ', -0.533, (302.012, 263.631, 351.233)), (' A1002  GLN HE22', ' B1002  GLN HE22', -0.53, (276.532, 278.077, 270.345)), (' C 825  LYS  NZ ', ' C 940  SER  O  ', -0.528, (297.526, 297.605, 233.237)), (' C 408  ARG  O  ', ' C 414  GLN  NE2', -0.527, (272.511, 281.637, 305.017)), (' D 174  LYS  HD3', ' D 496  THR HG22', -0.525, (265.447, 245.266, 398.163)), (' B 123  ALA  HA ', ' B 177  MET  HE3', -0.524, (305.387, 226.472, 300.016)), (' A  31  SER  OG ', ' A  60  SER  N  ', -0.524, (234.162, 268.197, 276.895)), (' C 310  LYS  HG2', ' C 664  ILE HD11', -0.523, (282.433, 305.413, 241.331)), (' B  30  ASN  OD1', ' B  59  PHE  HA ', -0.521, (313.557, 246.378, 273.8)), (' C 453  TYR  CZ ', ' C 493  GLN  HB3', -0.516, (264.475, 274.167, 319.314)), (' A 317  ASN  ND2', ' B 737  ASP  OD2', -0.516, (262.141, 263.295, 269.363)), (' D 474  MET  HE3', ' D 478  TRP  HE1', -0.516, (259.253, 254.151, 395.293)), (' B1125  ASN HD22', ' B1127  ASP  HB2', -0.513, (293.217, 283.118, 187.68)), (' D 414  THR HG23', ' D 417  HIS  H  ', -0.512, (240.732, 258.37, 356.309)), (' D 396  ALA  HA ', ' D 562  LYS  HA ', -0.507, (269.57, 264.036, 360.928)), (' A 170  TYR  CE2', ' A 172  SER  HA ', -0.506, (229.899, 295.134, 297.689)), (' D 208  GLU  HA ', ' D 217  TYR  O  ', -0.503, (271.617, 271.464, 369.997)), (' B 793  PRO  O  ', ' B 795  LYS  NZ ', -0.501, (264.648, 237.386, 224.692)), (' A  64  TRP  HE1', ' A 264  ALA  HB1', -0.496, (219.522, 271.651, 284.773)), (' A1083  HIS  CG ', ' A1084  ASP  N  ', -0.496, (271.137, 246.78, 189.423)), (' B 597  VAL HG12', ' B 610  VAL HG22', -0.491, (308.182, 260.408, 258.9)), (' C 352  ALA  HA ', ' C 466  ARG  HD3', -0.49, (253.665, 279.676, 311.688)), (' C 390  LEU  HB2', ' C 392  PHE  CZ ', -0.49, (260.616, 299.438, 292.955)), (' D 183  TYR  OH ', ' D 509  ASP  OD2', -0.489, (272.723, 254.595, 380.942)), (' A1002  GLN HE22', ' B1002  GLN  NE2', -0.489, (276.944, 277.668, 270.673)), (' B 416  GLY  O  ', ' B 420  ASP  N  ', -0.487, (280.188, 303.984, 301.933)), (' A 105  ILE HG23', ' A 241  LEU HD21', -0.486, (227.252, 279.46, 300.736)), (' B1072  GLU  N  ', ' B1072  GLU  OE1', -0.486, (296.777, 255.869, 211.595)), (' C 455  LEU  N  ', ' C 491  PRO  O  ', -0.484, (261.04, 271.25, 316.082)), (' C  34  ARG  NH2', ' C 219  GLY  O  ', -0.483, (301.309, 322.04, 261.016)), (' A1083  HIS  CD2', ' A1084  ASP  H  ', -0.481, (271.379, 247.517, 188.928)), (' D 457  GLU  OE1', ' D 460  ARG  NH2', -0.478, (266.265, 259.508, 379.123)), (' D 351  LEU  HB2', ' D 355  ASP  HB3', -0.478, (270.378, 245.006, 352.122)), (' D 470  LYS  HA ', ' D 473  TRP  CE2', -0.476, (271.658, 258.11, 394.449)), (' A 578  ASP  OD1', ' A 581  THR  N  ', -0.476, (273.866, 236.624, 289.613)), (' C 676  THR  H  ', ' C 690  GLN  NE2', -0.476, (282.075, 317.296, 234.395)), (' C 950  ASP  OD2', ' C 951  VAL  N  ', -0.475, (289.107, 287.33, 243.781)), (' D 536  GLU  OE2', ' D 541  LYS  HE2', -0.475, (236.741, 267.231, 357.733)), (' C  53  ASP  HB3', ' C  55  PHE  CE2', -0.473, (293.442, 310.836, 270.96)), (' C  77  LYS  HB3', ' C 258  TRP  CZ3', -0.473, (301.354, 348.234, 279.741)), (' C 825  LYS  HE3', ' C 938  LEU  O  ', -0.472, (298.068, 295.255, 231.427)), (' D 187  LYS  HD2', ' D 199  TYR  CE1', -0.471, (276.605, 256.218, 379.929)), (' B 131  CYS  HB2', ' B 133  PHE  CZ ', -0.471, (303.875, 243.908, 309.483)), (' A 145  TYR  HB2', ' A 152  TRP  CH2', -0.47, (206.143, 283.598, 297.535)), (' A  80  ASP  OD1', ' A  81  ASN  N  ', -0.469, (221.783, 269.406, 295.783)), (' C 329  PHE  N  ', ' C 530  SER  OG ', -0.468, (253.212, 309.655, 287.785)), (' C 294  ASP  CG ', ' C 295  PRO  HD2', -0.467, (281.936, 315.483, 255.571)), (' D 582  ARG  HG2', ' D 582  ARG HH11', -0.467, (247.634, 274.612, 367.994)), (' D 239  HIS  ND1', ' D 592  PHE  HE1', -0.467, (241.483, 270.039, 380.221)), (' D 453  THR  HA ', ' D 512  PHE  CE2', -0.467, (259.163, 258.598, 380.03)), (' C 143  VAL  HA ', ' C 154  GLU  HA ', -0.465, (312.091, 341.126, 286.359)), (' A 886  TRP  CD1', ' A 886  TRP  N  ', -0.464, (268.576, 283.699, 213.92)), (' A 453  TYR  CZ ', ' A 493  GLN  HB2', -0.464, (286.568, 250.982, 344.243)), (' B  53  ASP  HB3', ' B  55  PHE  CE2', -0.463, (298.138, 252.269, 280.033)), (' C1081  ILE HG23', ' C1135  ASN  HB3', -0.46, (260.41, 281.568, 189.14)), (' B1101  HIS  CD2', ' B1103  PHE  CE1', -0.46, (292.667, 257.411, 191.186)), (' B 437  ASN  HB2', ' B 508  TYR  CZ ', -0.459, (291.502, 293.315, 315.327)), (' B1097  SER  HB3', ' B1102  TRP  CD2', -0.459, (296.997, 263.389, 194.099)), (' A1107  ARG  HD3', ' B 904  TYR  CE1', -0.459, (266.992, 257.657, 210.445)), (' A 118  LEU HD13', ' A 120  VAL HG23', -0.459, (227.142, 284.958, 301.279)), (' D 382  ASP  HA ', ' D 385  TYR  CE1', -0.459, (267.251, 255.751, 355.89)), (' B 993  ILE  O  ', ' B 997  ILE HG22', -0.458, (273.928, 272.665, 280.748)), (' B1125  ASN  ND2', ' B1127  ASP  HB2', -0.457, (292.707, 283.084, 188.092)), (' B  30  ASN  OD1', ' B  31  SER  N  ', -0.455, (313.341, 245.001, 275.549)), (' A 437  ASN  HB2', ' A 508  TYR  CZ ', -0.455, (271.31, 246.026, 334.697)), (' D 536  GLU  O  ', ' D 541  LYS  NZ ', -0.454, (237.023, 268.978, 359.898)), (' D 582  ARG  NH1', ' D 586  ASN  OD1', -0.454, (247.084, 274.111, 367.039)), (' C 203  ILE  N  ', ' C 203  ILE HD12', -0.452, (302.819, 316.973, 282.033)), (' C 762  GLN  HG2', ' C 765  ARG  NH2', -0.452, (285.487, 266.382, 263.764)), (' B 145  TYR  HB2', ' B 152  TRP  CH2', -0.452, (317.494, 220.82, 300.493)), (' D 279  TYR  O  ', ' D 283  VAL HG13', -0.451, (236.656, 252.697, 377.582)), (' C 878  LEU  HA ', ' C 878  LEU HD23', -0.45, (296.96, 275.616, 221.318)), (' A 102  ARG HH11', ' A 141  LEU HD13', -0.448, (219.664, 285.961, 300.623)), (' A 188  ASN  HB3', ' A 207  HIS  NE2', -0.447, (220.984, 286.432, 281.623)), (' A 745  ASP  OD1', ' C 319  ARG  NH1', -0.446, (269.449, 303.471, 269.608)), (' B 231  ILE HG22', ' B 233  ILE HG23', -0.445, (299.212, 250.191, 303.397)), (' C 327  VAL  O  ', ' C 531  THR  N  ', -0.445, (255.059, 313.179, 285.603)), (' A 408  ARG  NH2', ' A 409  GLN HE21', -0.445, (278.469, 257.756, 339.201)), (' D 535  HIS  CG ', ' D 536  GLU  N  ', -0.444, (241.228, 269.257, 358.085)), (' C 452  LEU  HA ', ' C 494  SER  HA ', -0.444, (261.69, 277.79, 321.49)), (' D 520  LEU  C  ', ' D 524  GLN HE21', -0.444, (256.08, 267.361, 367.666)), (' B 411  ALA  HB3', ' B 414  GLN  HG3', -0.444, (283.104, 294.697, 299.708)), (' D 201  ASP  HA ', ' D 204  ARG  HB2', -0.442, (272.713, 266.298, 377.376)), (' A 922  LEU HD21', ' A1307  NAG  H5 ', -0.442, (246.763, 269.008, 211.149)), (' C 164  ASN  HB3', ' C1301  NAG  HN2', -0.441, (300.203, 326.523, 306.461)), (' B 517  LEU  H  ', ' B 519  HIS  CE1', -0.439, (299.468, 298.258, 285.045)), (' A 146  HIS  O  ', ' A 150  LYS  N  ', -0.438, (202.306, 290.257, 299.261)), (' D 295  ASP  N  ', ' D 295  ASP  OD2', -0.437, (235.548, 244.161, 359.47)), (' B 709  ASN  HA ', ' C 897  PRO  HB3', -0.437, (299.641, 272.474, 204.422)), (' A1023  ASN  C  ', ' A1023  ASN HD22', -0.435, (274.122, 280.083, 234.971)), (' D 535  HIS  NE2', ' D 539  LEU  HA ', -0.435, (242.06, 267.391, 361.614)), (' A 403  ARG  HE ', ' A 505  TYR  HA ', -0.434, (276.329, 249.297, 342.887)), (' C 200  TYR  CE2', ' C 230  PRO  HB3', -0.433, (301.573, 310.642, 290.263)), (' C 408  ARG  CZ ', ' C 409  GLN  HG2', -0.433, (271.602, 278.517, 308.627)), (' B  91  TYR  OH ', ' B 191  GLU  OE2', -0.429, (307.328, 239.818, 281.23)), (' B 353  TRP  O  ', ' B 466  ARG  NH2', -0.429, (294.397, 310.707, 302.386)), (' C 926  GLN  NE2', ' C1305  NAG  H62', -0.429, (288.551, 293.105, 207.073)), (' B1142  GLN  HB3', ' B1143  PRO  HD3', -0.428, (281.986, 260.831, 179.442)), (' A 358  ILE  HB ', ' A 395  VAL  HB ', -0.426, (284.198, 248.509, 313.788)), (' A1002  GLN  NE2', ' B1002  GLN HE22', -0.426, (276.36, 278.325, 270.446)), (' B 295  PRO  HA ', ' B 633  TRP  CH2', -0.425, (306.914, 259.076, 264.182)), (' A 542  ASN  OD1', ' A 547  THR HG22', -0.425, (272.536, 252.16, 289.558)), (' A 996  LEU  HA ', ' A 996  LEU HD23', -0.424, (270.602, 286.664, 277.342)), (' A 676  THR  HA ', ' A 690  GLN  HG2', -0.423, (235.176, 259.032, 249.15)), (' D 133  CYS  HA ', ' D 141  CYS  HA ', -0.422, (256.908, 233.813, 392.229)), (' B  70  VAL  HB ', ' B  76  THR HG22', -0.422, (331.365, 229.621, 290.687)), (' B 517  LEU HD13', ' C 983  ARG  NH1', -0.422, (297.875, 292.684, 286.587)), (' C  31  SER  O  ', ' C  59  PHE  N  ', -0.421, (291.465, 323.371, 262.954)), (' A 520  ALA  HB1', ' A 521  PRO  HD2', -0.421, (292.698, 253.624, 303.478)), (' C 416  GLY  O  ', ' C 420  ASP  N  ', -0.421, (266.044, 274.364, 306.889)), (' B1135  ASN  HA ', ' B1135  ASN HD22', -0.42, (295.643, 266.612, 186.23)), (' A  97  LYS  HD2', ' A 185  ASN  HB3', -0.42, (211.662, 281.754, 283.416)), (' C 271  GLN HE21', ' C 273  ARG  NH2', -0.42, (284.736, 317.282, 269.349)), (' C 454  ARG  HA ', ' C 492  LEU HD23', -0.419, (258.888, 272.792, 316.198)), (' C 858  LEU  O  ', ' C 859  THR  CG2', -0.419, (301.921, 278.48, 259.576)), (' B 418  ILE  HA ', ' B 422  ASN  ND2', -0.418, (282.764, 305.877, 305.63)), (' C 353  TRP  O  ', ' C 466  ARG  NH2', -0.418, (253.173, 283.13, 309.422)), (' C 748  GLU  CD ', ' C 748  GLU  H  ', -0.417, (299.463, 275.298, 281.559)), (' A 447  GLY  HA2', ' A 497  PHE  O  ', -0.417, (278.929, 239.398, 344.627)), (' B1083  HIS  CG ', ' B1084  ASP  N  ', -0.417, (289.242, 271.57, 183.85)), (' A 140  PHE  CD2', ' A 244  LEU HD12', -0.415, (215.875, 277.335, 302.598)), (' A 336  CYS  C  ', ' A 338  PHE  H  ', -0.415, (281.196, 240.549, 313.513)), (' C1101  HIS  CE1', ' C1307  NAG  H5 ', -0.415, (270.293, 291.611, 185.788)), (' D 165  TRP  CH2', ' D 490  PRO  HD2', -0.414, (253.959, 251.669, 395.37)), (' D 468  ILE HG13', ' D 473  TRP  CD1', -0.414, (269.371, 260.907, 393.256)), (' A 437  ASN HD21', ' A 439  ASN  HB2', -0.414, (272.589, 242.69, 337.477)), (' C 126  VAL  O  ', ' C 172  SER  N  ', -0.414, (313.858, 322.95, 288.653)), (' B 620  VAL  HB ', ' B 621  PRO  HD3', -0.413, (317.291, 268.064, 260.882)), (' C 125  ASN  HB3', ' C 171  VAL HG13', -0.412, (314.866, 325.306, 290.985)), (' C 858  LEU  O  ', ' C 859  THR HG23', -0.411, (301.77, 277.972, 259.735)), (' D 446  ILE  O  ', ' D 449  THR  OG1', -0.411, (252.333, 259.304, 376.351)), (' A 790  LYS  NZ ', ' C 702  GLU  OE2', -0.411, (262.696, 302.572, 218.444)), (' B 384  PRO  HA ', ' B 387  LEU  HG ', -0.41, (300.772, 288.418, 296.418)), (' A1031  GLU  OE2', ' C1039  ARG  NE ', -0.41, (275.605, 275.153, 225.939)), (' C 922  LEU  H  ', ' C 922  LEU HD22', -0.409, (292.629, 288.426, 201.759)), (' C  77  LYS  HB3', ' C 258  TRP  CH2', -0.409, (300.595, 348.208, 280.039)), (' D 257  SER  HB2', ' D 610  TRP  CE2', -0.409, (242.925, 259.087, 399.032)), (' A  14  GLN  O  ', ' A 158  ARG  NH1', -0.408, (216.58, 279.283, 311.653)), (' A 295  PRO  HD3', ' A 633  TRP  CG ', -0.408, (244.644, 262.166, 268.777)), (' B 104  TRP  HB2', ' B 106  PHE  CE1', -0.408, (306.242, 242.376, 297.369)), (' A 431  GLY  HA2', ' A 515  PHE  CE1', -0.407, (279.224, 255.455, 316.116)), (' B 433  VAL HG23', ' B 512  VAL  HB ', -0.407, (293.244, 297.719, 302.382)), (' C  87  ASN  N  ', ' C  87  ASN HD22', -0.407, (289.037, 325.105, 280.421)), (' C 295  PRO  HD3', ' C 633  TRP  CD2', -0.407, (279.232, 314.588, 257.476)), (' D 213  ASP  N  ', ' D 213  ASP  OD1', -0.406, (274.166, 280.131, 361.094)), (' C 139  PRO  CB ', ' C 159  VAL  HA ', -0.406, (301.69, 336.821, 290.957)), (' A 156  GLU  CD ', ' A 158  ARG HH21', -0.406, (213.075, 280.62, 308.601)), (' B 444  LYS  O  ', ' B 498  GLN  HA ', -0.406, (289.247, 303.361, 325.65)), (' C 474  GLN  NE2', ' C 476  GLY  O  ', -0.405, (258.922, 254.597, 315.036)), (' D 132  VAL  O  ', ' D 142  LEU  N  ', -0.405, (256.605, 234.92, 390.187)), (' C 206  LYS  NZ ', ' C 224  GLU  OE2', -0.405, (309.977, 315.646, 269.28)), (' A 347  PHE  HB2', ' A 401  VAL HG23', -0.404, (282.731, 243.199, 331.528)), (' C1072  GLU  N  ', ' C1072  GLU  OE1', -0.404, (275.115, 295.094, 206.429)), (' D 176  LEU HD13', ' D 501  ALA  O  ', -0.404, (265.632, 247.455, 387.289)), (' B 357  ARG  HD3', ' B 396  TYR  CE2', -0.404, (302.453, 307.288, 294.926)), (' C 281  GLU  CD ', ' C 281  GLU  H  ', -0.404, (308.855, 304.78, 257.264)), (' A  53  ASP  HB3', ' A  55  PHE  CE2', -0.404, (245.351, 278.452, 280.299)), (' A  81  ASN  ND2', ' A  81  ASN  O  ', -0.402, (224.862, 267.744, 296.494)), (' A 404  GLY  HA2', ' A 407  VAL HG23', -0.402, (275.068, 250.912, 335.414)), (' D 504  PHE  O  ', ' D 508  ASN  N  ', -0.402, (267.16, 249.395, 380.569)), (' C 328  ARG  HG3', ' C 543  PHE  CE1', -0.402, (252.541, 309.352, 281.354)), (' B 299  THR  CG2', ' B 597  VAL HG21', -0.402, (303.223, 258.239, 259.582)), (' A  93  ALA  HA ', ' A 191  GLU  HA ', -0.401, (227.794, 279.723, 284.477)), (' D 435  GLU  HG2', ' D 540  HIS  CD2', -0.401, (237.286, 262.476, 365.01)), (' B  24  LEU  HB2', ' B  78  ARG  CZ ', -0.4, (327.895, 240.356, 289.518)), (' C 426  PRO  HB2', ' C 428  ASP  OD2', -0.4, (262.435, 279.588, 294.249)), (' C  70  VAL HG21', ' C  78  ARG  CZ ', -0.4, (297.29, 347.907, 269.512))]
data['cbeta'] = [('A', ' 282 ', 'ASN', ' ', 0.350221873906829, (237.52999999999994, 295.019, 268.572)), ('B', ' 590 ', 'CYS', ' ', 0.31115394024334025, (313.5719999999999, 280.138, 268.0809999999999)), ('C', ' 343 ', 'ASN', ' ', 0.301820312877907, (260.7869999999998, 299.833, 315.9899999999999))]
data['rota'] = [('A', ' 215 ', 'ASP', 0.13662060310943328, (221.10399999999996, 271.58, 277.743)), ('A', ' 336 ', 'CYS', 0.24414357166380588, (282.46499999999986, 240.79400000000004, 311.59)), ('A', ' 614 ', 'ASP', 0.0062047702167220675, (260.0759999999999, 252.75899999999993, 264.476)), ('A', ' 710 ', 'ASN', 0.08771667492361558, (262.677, 244.104, 209.064)), ('A', ' 886 ', 'TRP', 0.00144159290407591, (269.2689999999999, 284.113, 215.42699999999994)), ('A', '1004 ', 'LEU', 0.10946956752937043, (272.50899999999984, 286.207, 264.947)), ('B', ' 133 ', 'PHE', 0.1781818832089064, (308.092, 245.201, 311.19)), ('B', ' 318 ', 'PHE', 0.10268164066940784, (307.216, 269.519, 266.447)), ('B', ' 515 ', 'PHE', 0.053412969751754226, (299.7189999999999, 299.463, 291.827)), ('B', ' 544 ', 'ASN', 0.19531543670757204, (310.616, 293.263, 284.7039999999999)), ('B', ' 588 ', 'THR', 0.0, (311.321, 286.2, 266.864)), ('B', ' 633 ', 'TRP', 0.029533617792993343, (311.75799999999987, 259.675, 268.175)), ('B', '1135 ', 'ASN', 0.09745202110799929, (294.5129999999999, 267.824, 186.76)), ('C', ' 273 ', 'ARG', 0.0003145494982439315, (287.77999999999986, 312.35099999999994, 269.70999999999987)), ('C', ' 391 ', 'CYS', 0.2192429948184419, (256.7439999999999, 300.677, 291.681)), ('C', ' 525 ', 'CYS', 0.2592788860011211, (255.50899999999996, 303.061, 294.624)), ('C', ' 581 ', 'THR', 0.0044800755017610095, (243.69899999999996, 310.068, 282.271)), ('C', ' 590 ', 'CYS', 0.09425613922303, (262.6349999999998, 307.992, 267.721)), ('C', ' 615 ', 'VAL', 0.01745355617521171, (263.5769999999999, 309.022, 255.66799999999998)), ('C', ' 738 ', 'CYS', 0.0831906723515635, (293.927, 274.848, 266.703)), ('C', '1133 ', 'VAL', 0.2134781930168783, (256.2639999999999, 284.118, 192.038)), ('D', ' 123 ', 'MET', 0.0, (271.6239999999999, 244.53099999999995, 385.286)), ('D', ' 132 ', 'VAL', 0.2798086624217143, (258.47899999999987, 237.586, 391.389)), ('D', ' 156 ', 'LEU', 0.19227809317200986, (241.306, 244.74099999999996, 389.29)), ('D', ' 183 ', 'TYR', 0.28971580849462064, (276.50099999999986, 252.37099999999995, 386.84)), ('D', ' 297 ', 'MET', 0.28572583525047895, (239.03, 242.49199999999993, 355.197)), ('D', ' 343 ', 'VAL', 0.21135154218581634, (261.26799999999986, 235.60499999999996, 366.596)), ('D', ' 385 ', 'TYR', 0.2875271733419162, (268.5639999999999, 259.7679999999999, 353.0)), ('D', ' 557 ', 'MET', 0.001558436703859995, (262.66699999999986, 266.304, 354.653)), ('D', ' 599 ', 'ASN', 0.09915516823860966, (235.47499999999997, 266.6519999999999, 384.94599999999997))]
data['clusters'] = [('A', '105', 1, 'side-chain clash', (227.252, 279.46, 300.736)), ('A', '117', 1, 'Dihedral angle:CA:C', (234.70499999999998, 282.40099999999995, 302.464)), ('A', '118', 1, 'side-chain clash\nDihedral angle:N:CA', (231.194, 283.245, 301.39799999999997)), ('A', '120', 1, 'side-chain clash', (227.142, 284.958, 301.279)), ('A', '1302', 1, 'Planar group:C2:C7:C8:N2:O7', (234.156, 285.334, 319.967)), ('A', '131', 1, 'Dihedral angle:CA:C', (235.042, 284.626, 308.68)), ('A', '132', 1, 'Dihedral angle:CB:CG:CD:OE1\nDihedral angle:N:CA', (235.135, 281.705, 311.065)), ('A', '163', 1, 'Dihedral angle:CA:C', (231.003, 283.91599999999994, 312.13)), ('A', '164', 1, 'Dihedral angle:N:CA', (233.106, 283.722, 315.26099999999997)), ('A', '241', 1, 'side-chain clash', (227.252, 279.46, 300.736)), ('A', '440', 2, 'cablam Outlier', (272.6, 236.9, 336.1)), ('A', '442', 2, 'Dihedral angle:CA:C', (278.64300000000003, 237.67899999999997, 336.89)), ('A', '443', 2, 'Dihedral angle:N:CA', (277.111, 238.433, 340.26)), ('A', '447', 2, 'backbone clash', (278.929, 239.398, 344.627)), ('A', '453', 2, 'side-chain clash', (286.568, 250.982, 344.243)), ('A', '493', 2, 'side-chain clash', (286.568, 250.982, 344.243)), ('A', '495', 2, 'cablam Outlier', (282.7, 246.0, 343.7)), ('A', '496', 2, 'cablam Outlier', (281.5, 242.8, 345.4)), ('A', '497', 2, 'backbone clash', (278.929, 239.398, 344.627)), ('A', '191', 3, 'side-chain clash\nDihedral angle:CB:CG:CD:OE1', (228.45700000000002, 281.132, 283.704)), ('A', '218', 3, 'cablam CA Geom Outlier', (226.4, 276.1, 271.3)), ('A', '220', 3, 'cablam CA Geom Outlier', (231.4, 280.5, 271.3)), ('A', '34', 3, 'cablam CA Geom Outlier', (233.0, 276.8, 276.5)), ('A', '91', 3, 'side-chain clash', (230.188, 278.076, 279.96)), ('A', '93', 3, 'side-chain clash', (227.794, 279.723, 284.477)), ('A', '184', 4, 'Dihedral angle:CA:C', (213.54399999999998, 278.661, 287.774)), ('A', '185', 4, 'side-chain clash\nDihedral angle:N:CA', (212.376, 279.227, 284.23699999999997)), ('A', '186', 4, 'cablam CA Geom Outlier', (215.2, 280.3, 281.9)), ('A', '262', 4, 'cablam Outlier', (212.4, 274.2, 288.2)), ('A', '96', 4, 'Dihedral angle:CA:C\nDihedral angle:CB:CG:CD:OE1', (218.07899999999998, 281.568, 285.29599999999994)), ('A', '97', 4, 'side-chain clash\nDihedral angle:N:CA', (215.033, 283.684, 285.746)), ('A', '1131', 5, 'cablam Outlier', (269.9, 242.0, 204.4)), ('A', '1306', 5, 'Planar group:C2:C7:C8:N2:O7', (265.239, 241.102, 206.94)), ('A', '353', 5, 'side-chain clash\ncablam Outlier', (263.29, 242.006, 207.279)), ('A', '466', 5, 'side-chain clash', (263.29, 242.006, 207.279)), ('A', '710', 5, 'Rotamer', (262.677, 244.104, 209.064)), ('A', '361', 6, 'Dihedral angle:CA:C', (283.637, 243.312, 307.051)), ('A', '362', 6, 'Dihedral angle:N:CA', (279.90099999999995, 243.71499999999997, 307.212)), ('A', '389', 6, 'cablam Outlier', (273.2, 253.4, 305.2)), ('A', '525', 6, 'Dihedral angle:CA:C\ncablam CA Geom Outlier', (279.72799999999995, 249.0, 305.123)), ('A', '526', 6, 'Dihedral angle:N:CA', (276.148, 248.14299999999997, 304.454)), ('A', '404', 7, 'side-chain clash', (275.068, 250.912, 335.414)), ('A', '407', 7, 'side-chain clash', (275.068, 250.912, 335.414)), ('A', '507', 7, 'backbone clash', (273.557, 244.047, 335.682)), ('A', '508', 7, 'side-chain clash', (271.31, 246.026, 334.697)), ('A', '347', 8, 'side-chain clash', (282.731, 243.199, 331.528)), ('A', '348', 8, 'Dihedral angle:CA:C', (287.393, 243.925, 331.35)), ('A', '349', 8, 'Dihedral angle:N:CA', (287.607, 245.636, 334.695)), ('A', '401', 8, 'side-chain clash', (282.731, 243.199, 331.528)), ('A', '273', 9, 'Dihedral angle:CA:C', (246.201, 272.522, 278.759)), ('A', '274', 9, 'Dihedral angle:N:CA', (248.005, 274.348, 276.009)), ('A', '53', 9, 'side-chain clash', (245.351, 278.452, 280.299)), ('A', '55', 9, 'side-chain clash', (245.351, 278.452, 280.299)), ('A', '1304', 10, 'Planar group:C2:C7:C8:N2:O7', (277.801, 235.08700000000002, 294.197)), ('A', '578', 10, 'backbone clash', (273.866, 236.624, 289.613)), ('A', '581', 10, 'backbone clash', (273.866, 236.624, 289.613)), ('A', '699', 11, 'cablam CA Geom Outlier', (255.6, 253.3, 238.3)), ('A', '701', 11, 'cablam Outlier', (251.6, 252.3, 232.9)), ('A', '702', 11, 'Dihedral angle:CB:CG:CD:OE1', (253.142, 249.39700000000002, 230.946)), ('A', '122', 12, 'backbone clash', (221.49, 293.594, 298.728)), ('A', '123', 12, 'cablam Outlier', (218.0, 292.4, 297.0)), ('A', '125', 12, 'backbone clash', (221.49, 293.594, 298.728)), ('A', '1062', 13, 'Dihedral angle:CA:C', (259.92199999999997, 280.6, 229.67499999999998)), ('A', '1063', 13, 'Dihedral angle:N:CA', (257.529, 279.42599999999993, 227.035)), ('A', '725', 13, 'Dihedral angle:CB:CG:CD:OE1', (259.43899999999996, 276.345, 232.904)), ('A', '589', 14, 'Dihedral angle:CA:C', (267.10900000000004, 250.816, 274.634)), ('A', '590', 14, 'Dihedral angle:N:CA', (263.537, 249.792, 274.902)), ('A', '591', 14, 'cablam CA Geom Outlier', (261.3, 251.9, 272.6)), ('A', '357', 15, 'Dihedral angle:CD:NE:CZ:NH1', (289.158, 246.58200000000002, 316.061)), ('A', '358', 15, 'side-chain clash', (284.198, 248.509, 313.788)), ('A', '395', 15, 'side-chain clash', (284.198, 248.509, 313.788)), ('A', '80', 16, 'backbone clash\ncablam Outlier', (221.783, 269.406, 295.783)), ('A', '81', 16, 'backbone clash\nDihedral angle:CA:C', (222.591, 268.358, 297.837)), ('A', '82', 16, 'Dihedral angle:N:CA', (224.54399999999998, 271.589, 297.66700000000003)), ('A', '336', 17, 'Rotamer\nside-chain clash', (281.196, 240.549, 313.513)), ('A', '337', 17, 'cablam Outlier', (282.5, 239.4, 315.2)), ('A', '338', 17, 'side-chain clash', (281.196, 240.549, 313.513)), ('A', '170', 18, 'side-chain clash', (229.899, 295.134, 297.689)), ('A', '172', 18, 'side-chain clash\nDihedral angle:CA:C', (229.092, 296.068, 298.909)), ('A', '173', 18, 'Dihedral angle:N:CA', (227.447, 298.186, 296.29799999999994)), ('A', '14', 19, 'side-chain clash', (216.58, 279.283, 311.653)), ('A', '156', 19, 'side-chain clash', (213.075, 280.62, 308.601)), ('A', '158', 19, 'side-chain clash', (213.075, 280.62, 308.601)), ('A', '474', 20, 'side-chain clash', (302.012, 263.631, 351.233)), ('A', '477', 20, 'cablam Outlier', (301.8, 266.1, 352.8)), ('A', '478', 20, 'side-chain clash\ncablam Outlier', (302.012, 263.631, 351.233)), ('A', '214', 21, 'cablam CA Geom Outlier', (217.6, 273.2, 278.2)), ('A', '215', 21, 'Rotamer\ncablam CA Geom Outlier', (221.10399999999996, 271.58, 277.743)), ('A', '1144', 22, 'Dihedral angle:CB:CG:CD:OE1', (264.98199999999997, 262.082, 177.71599999999998)), ('A', '1146', 22, 'Dihedral angle:CA:CB:CG:OD1', (267.16900000000004, 259.827, 173.383)), ('A', '1303', 23, 'Planar group:C2:C7:C8:N2:O7', (232.955, 298.15400000000005, 265.376)), ('A', '282', 23, 'C-beta', (237.52999999999994, 295.019, 268.572)), ('A', '666', 24, 'cablam Outlier', (254.8, 257.7, 253.0)), ('A', '667', 24, 'cablam Outlier', (257.9, 255.6, 252.3)), ('A', '676', 25, 'side-chain clash', (235.176, 259.032, 249.15)), ('A', '690', 25, 'side-chain clash', (235.176, 259.032, 249.15)), ('A', '403', 26, 'side-chain clash', (276.329, 249.297, 342.887)), ('A', '505', 26, 'side-chain clash', (276.329, 249.297, 342.887)), ('A', '542', 27, 'side-chain clash', (272.536, 252.16, 289.558)), ('A', '547', 27, 'side-chain clash', (272.536, 252.16, 289.558)), ('A', '408', 28, 'side-chain clash', (246.763, 269.008, 211.149)), ('A', '409', 28, 'side-chain clash', (246.763, 269.008, 211.149)), ('A', '1099', 29, 'cablam Outlier', (254.0, 245.6, 201.0)), ('A', '1100', 29, 'cablam Outlier', (254.4, 245.8, 197.2)), ('A', '264', 30, 'side-chain clash', (219.522, 271.651, 284.773)), ('A', '64', 30, 'side-chain clash', (219.522, 271.651, 284.773)), ('A', '295', 31, 'side-chain clash', (244.644, 262.166, 268.777)), ('A', '633', 31, 'side-chain clash', (244.644, 262.166, 268.777)), ('A', '188', 32, 'side-chain clash', (269.449, 303.471, 269.608)), ('A', '207', 32, 'side-chain clash', (269.449, 303.471, 269.608)), ('A', '257', 33, 'Dihedral angle:CA:C\ncablam Outlier', (207.833, 272.525, 303.27299999999997)), ('A', '258', 33, 'Dihedral angle:N:CA', (209.35500000000002, 274.813, 300.698)), ('A', '520', 34, 'side-chain clash', (292.698, 253.624, 303.478)), ('A', '521', 34, 'side-chain clash', (292.698, 253.624, 303.478)), ('A', '140', 35, 'side-chain clash', (215.875, 277.335, 302.598)), ('A', '244', 35, 'side-chain clash', (215.875, 277.335, 302.598)), ('A', '102', 36, 'side-chain clash', (219.664, 285.961, 300.623)), ('A', '141', 36, 'side-chain clash', (219.664, 285.961, 300.623)), ('A', '784', 37, 'Dihedral angle:CA:C', (271.68, 290.209, 227.18200000000002)), ('A', '785', 37, 'Dihedral angle:N:CA', (270.97799999999995, 292.881, 224.584)), ('A', '899', 38, 'Dihedral angle:CA:C', (257.191, 282.40099999999995, 207.595)), ('A', '900', 38, 'Dihedral angle:N:CA', (260.698, 281.92799999999994, 206.346)), ('A', '31', 39, 'backbone clash\nside-chain clash', (262.141, 263.295, 269.363)), ('A', '60', 39, 'backbone clash\nside-chain clash', (262.141, 263.295, 269.363)), ('A', '437', 40, 'backbone clash\nside-chain clash', (262.696, 302.572, 218.444)), ('A', '439', 40, 'side-chain clash', (262.696, 302.572, 218.444)), ('A', '431', 41, 'side-chain clash', (279.224, 255.455, 316.116)), ('A', '515', 41, 'side-chain clash', (279.224, 255.455, 316.116)), ('A', '559', 42, 'Dihedral angle:CA:C', (282.96599999999995, 237.238, 278.92699999999996)), ('A', '560', 42, 'Dihedral angle:N:CA', (286.16200000000003, 236.502, 280.73299999999995)), ('A', '637', 43, 'cablam CA Geom Outlier', (244.3, 253.6, 270.7)), ('A', '638', 43, 'cablam CA Geom Outlier', (243.6, 250.2, 269.1)), ('A', '146', 44, 'backbone clash', (202.306, 290.257, 299.261)), ('A', '150', 44, 'backbone clash', (202.306, 290.257, 299.261)), ('A', '145', 45, 'side-chain clash', (206.143, 283.598, 297.535)), ('A', '152', 45, 'side-chain clash', (206.143, 283.598, 297.535)), ('A', '886', 46, 'Rotamer\nbackbone clash\nDihedral angle:CA:C', (269.269, 284.113, 215.42700000000002)), ('A', '887', 46, 'Dihedral angle:N:CA', (270.92499999999995, 287.101, 213.863)), ('B', '123', 1, 'side-chain clash', (305.387, 226.472, 300.016)), ('B', '125', 1, 'Dihedral angle:CA:C', (300.112, 229.324, 302.709)), ('B', '126', 1, 'Dihedral angle:N:CA', (300.158, 232.64399999999998, 300.97999999999996)), ('B', '175', 1, 'Dihedral angle:CA:C', (298.23599999999993, 223.88700000000003, 300.73199999999997)), ('B', '176', 1, 'Dihedral angle:N:CA', (301.565, 222.221, 300.2)), ('B', '177', 1, 'side-chain clash', (305.387, 226.472, 300.016)), ('B', '178', 1, 'cablam Outlier', (306.3, 220.4, 296.1)), ('B', '180', 1, 'Dihedral angle:CB:CG:CD:OE1', (311.59299999999996, 220.51299999999998, 294.441)), ('B', '182', 1, 'Dihedral angle:CA:C', (315.46599999999995, 218.791, 291.27799999999996)), ('B', '183', 1, 'Dihedral angle:N:CA\ncablam CA Geom Outlier', (317.21099999999996, 220.91, 288.694)), ('B', '97', 1, 'Dihedral angle:CA:C\ncablam Outlier', (312.09099999999995, 225.989, 287.74)), ('B', '98', 1, 'Dihedral angle:N:CA', (312.065, 225.123, 291.43199999999996)), ('B', '104', 2, 'side-chain clash', (306.242, 242.376, 297.369)), ('B', '105', 2, 'side-chain clash', (310.256, 240.891, 301.888)), ('B', '106', 2, 'side-chain clash', (306.242, 242.376, 297.369)), ('B', '135', 2, 'Dihedral angle:CA:C', (313.32599999999996, 244.17899999999997, 309.339)), ('B', '136', 2, 'Dihedral angle:N:CA', (316.817, 242.79899999999998, 309.178)), ('B', '159', 2, 'cablam Outlier', (313.2, 238.8, 307.7)), ('B', '241', 2, 'side-chain clash', (310.256, 240.891, 301.888)), ('B', '411', 3, 'side-chain clash', (283.104, 294.697, 299.708)), ('B', '414', 3, 'side-chain clash', (283.104, 294.697, 299.708)), ('B', '415', 3, 'cablam CA Geom Outlier', (278.7, 300.1, 300.0)), ('B', '416', 3, 'backbone clash', (280.188, 303.984, 301.933)), ('B', '418', 3, 'side-chain clash', (282.764, 305.877, 305.63)), ('B', '420', 3, 'backbone clash', (280.188, 303.984, 301.933)), ('B', '422', 3, 'side-chain clash', (282.764, 305.877, 305.63)), ('B', '294', 4, 'Dihedral angle:CA:C', (308.66900000000004, 254.66899999999998, 265.41499999999996)), ('B', '295', 4, 'side-chain clash\nDihedral angle:N:CA', (307.559, 257.357, 263.039)), ('B', '299', 4, 'side-chain clash', (303.223, 258.239, 259.582)), ('B', '597', 4, 'side-chain clash', (303.223, 258.239, 259.582)), ('B', '610', 4, 'side-chain clash', (308.182, 260.408, 258.9)), ('B', '633', 4, 'Rotamer\nside-chain clash', (306.914, 259.076, 264.182)), ('B', '476', 5, 'cablam Outlier', (265.8, 318.2, 307.7)), ('B', '479', 5, 'cablam CA Geom Outlier', (268.2, 326.9, 307.2)), ('B', '480', 5, 'cablam CA Geom Outlier', (270.9, 325.1, 309.2)), ('B', '484', 5, 'side-chain clash', (272.057, 321.915, 312.51)), ('B', '486', 5, 'cablam CA Geom Outlier', (266.3, 321.2, 313.5)), ('B', '488', 5, 'side-chain clash', (272.057, 321.915, 312.51)), ('B', '340', 6, 'side-chain clash', (303.509, 304.376, 306.704)), ('B', '342', 6, 'cablam Outlier', (303.1, 298.8, 309.5)), ('B', '344', 6, 'cablam Outlier', (304.3, 303.0, 312.2)), ('B', '356', 6, 'side-chain clash', (303.509, 304.376, 306.704)), ('B', '809', 7, 'Dihedral angle:CA:C', (264.369, 235.994, 235.37)), ('B', '810', 7, 'Dihedral angle:N:CA', (266.017, 233.91, 238.063)), ('B', '812', 7, 'Dihedral angle:CA:C', (265.779, 237.094, 243.73499999999999)), ('B', '813', 7, 'Dihedral angle:N:CA', (265.93699999999995, 240.755, 242.86800000000002)), ('B', '551', 8, 'side-chain clash', (314.614, 281.085, 268.504)), ('B', '588', 8, 'Rotamer', (311.321, 286.2, 266.864)), ('B', '590', 8, 'C-beta\nside-chain clash', (314.614, 281.085, 268.504)), ('B', '591', 8, 'cablam CA Geom Outlier', (311.1, 277.5, 265.4)), ('B', '635', 9, 'cablam CA Geom Outlier', (318.5, 261.8, 267.0)), ('B', '636', 9, 'cablam Outlier', (317.7, 259.8, 263.9)), ('B', '637', 9, 'Dihedral angle:CA:C', (321.148, 260.125, 262.219)), ('B', '638', 9, 'Dihedral angle:N:CA', (320.368, 260.714, 258.574)), ('B', '1304', 10, 'Planar group:C2:C7:C8:N2:O7', (300.684, 274.942, 199.01)), ('B', '517', 10, 'side-chain clash', (299.641, 272.474, 204.422)), ('B', '519', 10, 'side-chain clash\ncablam CA Geom Outlier', (299.641, 272.474, 204.422)), ('B', '539', 11, 'Dihedral angle:CA:C', (315.43699999999995, 280.631, 275.59599999999995)), ('B', '540', 11, 'Dihedral angle:N:CA', (312.846, 281.54, 278.123)), ('B', '549', 11, 'cablam CA Geom Outlier', (310.1, 282.4, 274.8)), ('B', '30', 12, 'side-chain clash\nbackbone clash', (313.341, 245.001, 275.549)), ('B', '31', 12, 'backbone clash', (313.341, 245.001, 275.549)), ('B', '59', 12, 'side-chain clash', (313.557, 246.378, 273.8)), ('B', '619', 13, 'Dihedral angle:CA:C', (317.64500000000004, 272.60400000000004, 262.789)), ('B', '620', 13, 'side-chain clash\nDihedral angle:N:CA', (316.193, 269.119, 262.59799999999996)), ('B', '621', 13, 'side-chain clash', (317.291, 268.064, 260.882)), ('B', '743', 14, 'Dihedral angle:CA:C', (268.979, 265.54900000000004, 277.90099999999995)), ('B', '744', 14, 'Dihedral angle:N:CA', (268.474, 262.205, 279.508)), ('B', '745', 14, 'cablam Outlier', (265.2, 261.7, 281.4)), ('B', '666', 15, 'cablam Outlier', (305.1, 265.8, 248.0)), ('B', '667', 15, 'cablam Outlier', (305.0, 269.4, 246.7)), ('B', '131', 16, 'side-chain clash', (303.875, 243.908, 309.483)), ('B', '133', 16, 'Rotamer\nside-chain clash', (303.875, 243.908, 309.483)), ('B', '444', 17, 'side-chain clash', (289.247, 303.361, 325.65)), ('B', '498', 17, 'side-chain clash', (289.247, 303.361, 325.65)), ('B', '24', 18, 'side-chain clash', (327.895, 240.356, 289.518)), ('B', '78', 18, 'side-chain clash', (327.895, 240.356, 289.518)), ('B', '21', 19, 'side-chain clash', (324.348, 237.667, 297.195)), ('B', '79', 19, 'side-chain clash', (324.348, 237.667, 297.195)), ('B', '1144', 20, 'Dihedral angle:CA:C', (276.11400000000003, 260.066, 177.399)), ('B', '1145', 20, 'Dihedral angle:N:CA', (277.055, 262.0, 174.286)), ('B', '993', 21, 'side-chain clash', (273.928, 272.665, 280.748)), ('B', '997', 21, 'side-chain clash', (273.928, 272.665, 280.748)), ('B', '712', 22, 'Dihedral angle:CA:C', (297.695, 264.734, 205.516)), ('B', '713', 22, 'Dihedral angle:N:CA', (296.9959999999999, 261.565, 207.436)), ('B', '53', 23, 'side-chain clash\nDihedral angle:CA:CB:CG:OD1', (298.058, 254.524, 280.96799999999996)), ('B', '55', 23, 'side-chain clash', (298.138, 252.269, 280.033)), ('B', '377', 24, 'Dihedral angle:CA:C', (295.746, 289.87, 304.074)), ('B', '378', 24, 'Dihedral angle:N:CA', (293.29299999999995, 289.88599999999997, 301.219)), ('B', '437', 25, 'side-chain clash', (291.502, 293.315, 315.327)), ('B', '508', 25, 'side-chain clash', (291.502, 293.315, 315.327)), ('B', '1083', 26, 'cablam Outlier', (290.5, 271.5, 185.4)), ('B', '1135', 26, 'Rotamer', (294.5129999999999, 267.824, 186.76)), ('B', '191', 27, 'side-chain clash', (307.328, 239.818, 281.23)), ('B', '91', 27, 'side-chain clash', (307.328, 239.818, 281.23)), ('B', '357', 28, 'side-chain clash', (302.453, 307.288, 294.926)), ('B', '396', 28, 'side-chain clash', (302.453, 307.288, 294.926)), ('B', '793', 29, 'side-chain clash', (264.648, 237.386, 224.692)), ('B', '795', 29, 'side-chain clash', (264.648, 237.386, 224.692)), ('B', '790', 30, 'Dihedral angle:CA:C', (258.954, 245.364, 228.02)), ('B', '791', 30, 'Dihedral angle:N:CA', (261.96, 243.893, 226.346)), ('B', '581', 31, 'side-chain clash', (323.377, 297.927, 275.704)), ('B', '583', 31, 'side-chain clash', (323.377, 297.927, 275.704)), ('B', '384', 32, 'side-chain clash', (300.772, 288.418, 296.418)), ('B', '387', 32, 'side-chain clash', (300.772, 288.418, 296.418)), ('B', '372', 33, 'Dihedral angle:CA:C', (302.802, 290.008, 312.193)), ('B', '373', 33, 'Dihedral angle:N:CA', (300.15900000000005, 287.47299999999996, 311.389)), ('B', '433', 34, 'side-chain clash', (293.244, 297.719, 302.382)), ('B', '512', 34, 'side-chain clash', (293.244, 297.719, 302.382)), ('B', '757', 35, 'Dihedral angle:CA:C', (264.057, 278.48999999999995, 273.184)), ('B', '758', 35, 'Dihedral angle:N:CA', (263.76, 277.99799999999993, 269.48099999999994)), ('B', '462', 36, 'side-chain clash', (285.974, 313.512, 293.373)), ('B', '465', 36, 'side-chain clash', (285.974, 313.512, 293.373)), ('B', '145', 37, 'side-chain clash', (317.494, 220.82, 300.493)), ('B', '152', 37, 'side-chain clash', (317.494, 220.82, 300.493)), ('B', '231', 38, 'side-chain clash', (299.212, 250.191, 303.397)), ('B', '233', 38, 'side-chain clash', (299.212, 250.191, 303.397)), ('B', '353', 39, 'side-chain clash', (294.397, 310.707, 302.386)), ('B', '466', 39, 'side-chain clash', (294.397, 310.707, 302.386)), ('B', '614', 40, 'Dihedral angle:CA:C\nDihedral angle:CA:CB:CG:OD1', (308.219, 274.459, 257.308)), ('B', '615', 40, 'Dihedral angle:N:CA', (311.828, 274.254, 258.42499999999995)), ('B', '70', 41, 'side-chain clash', (297.875, 292.684, 286.587)), ('B', '76', 41, 'side-chain clash', (297.875, 292.684, 286.587)), ('C', '108', 1, 'cablam Outlier', (290.9, 326.1, 291.7)), ('C', '110', 1, 'cablam Outlier', (294.4, 330.1, 294.2)), ('C', '112', 1, 'cablam Outlier', (295.7, 328.8, 300.1)), ('C', '1301', 1, 'Planar group:C2:C7:C8:N2:O7', (301.7, 327.22799999999995, 309.07599999999996)), ('C', '131', 1, 'Dihedral angle:CA:C', (301.507, 324.33099999999996, 297.834)), ('C', '132', 1, 'Dihedral angle:N:CA', (298.877, 326.101, 299.85900000000004)), ('C', '133', 1, 'Dihedral angle:CA:C', (299.8, 329.146, 297.78)), ('C', '134', 1, 'Dihedral angle:N:CA', (298.189, 332.44599999999997, 298.57599999999996)), ('C', '452', 1, 'side-chain clash', (300.203, 326.523, 306.461)), ('C', '494', 1, 'side-chain clash', (300.203, 326.523, 306.461)), ('C', '390', 2, 'side-chain clash', (260.616, 299.438, 292.955)), ('C', '391', 2, 'Rotamer\nDihedral angle:CA:C', (256.744, 300.677, 291.681)), ('C', '392', 2, 'side-chain clash\nDihedral angle:N:CA', (255.524, 297.381, 293.057)), ('C', '520', 2, 'Dihedral angle:CA:C', (249.62800000000001, 294.546, 287.704)), ('C', '521', 2, 'Dihedral angle:N:CA', (248.85200000000003, 298.22299999999996, 287.95599999999996)), ('C', '522', 2, 'cablam Outlier', (250.9, 299.0, 291.0)), ('C', '525', 2, 'Rotamer', (255.50899999999996, 303.061, 294.624)), ('C', '527', 2, 'cablam Outlier', (258.2, 309.0, 296.3)), ('C', '180', 3, 'cablam CA Geom Outlier', (316.9, 339.7, 276.8)), ('C', '183', 3, 'cablam CA Geom Outlier', (311.1, 342.1, 268.8)), ('C', '261', 3, 'cablam Outlier', (306.0, 344.1, 274.5)), ('C', '262', 3, 'cablam Outlier', (304.7, 342.4, 271.4)), ('C', '96', 3, 'Dihedral angle:CB:CG:CD:OE1', (308.137, 333.165, 270.49499999999995)), ('C', '98', 3, 'Dihedral angle:CA:C\ncablam Outlier', (312.305, 337.377, 273.815)), ('C', '99', 3, 'Dihedral angle:N:CA', (310.952, 334.45099999999996, 275.873)), ('C', '756', 4, 'Dihedral angle:CA:C', (286.397, 269.955, 274.692)), ('C', '757', 4, 'Dihedral angle:N:CA', (287.92599999999993, 266.79099999999994, 273.371)), ('C', '758', 4, 'Dihedral angle:CA:C', (286.52599999999995, 266.656, 269.857)), ('C', '759', 4, 'Dihedral angle:N:CA', (286.574, 270.106, 268.287)), ('C', '762', 4, 'side-chain clash', (285.487, 266.382, 263.764)), ('C', '765', 4, 'side-chain clash', (285.487, 266.382, 263.764)), ('C', '453', 5, 'side-chain clash', (264.475, 274.167, 319.314)), ('C', '454', 5, 'side-chain clash', (258.888, 272.792, 316.198)), ('C', '455', 5, 'backbone clash', (261.04, 271.25, 316.082)), ('C', '491', 5, 'backbone clash', (261.04, 271.25, 316.082)), ('C', '492', 5, 'side-chain clash', (258.888, 272.792, 316.198)), ('C', '493', 5, 'side-chain clash', (264.475, 274.167, 319.314)), ('C', '327', 6, 'backbone clash', (255.059, 313.179, 285.603)), ('C', '328', 6, 'side-chain clash', (252.541, 309.352, 281.354)), ('C', '329', 6, 'side-chain clash', (253.212, 309.655, 287.785)), ('C', '530', 6, 'side-chain clash', (253.212, 309.655, 287.785)), ('C', '531', 6, 'backbone clash', (255.059, 313.179, 285.603)), ('C', '543', 6, 'side-chain clash', (252.541, 309.352, 281.354)), ('C', '124', 7, 'side-chain clash', (317.149, 329.487, 292.352)), ('C', '125', 7, 'side-chain clash', (314.866, 325.306, 290.985)), ('C', '126', 7, 'backbone clash\nDihedral angle:CA:C', (313.316, 326.177, 287.229)), ('C', '127', 7, 'Dihedral angle:N:CA', (310.72999999999996, 324.907, 289.64900000000006)), ('C', '171', 7, 'side-chain clash', (314.866, 325.306, 290.985)), ('C', '172', 7, 'backbone clash', (313.858, 322.95, 288.653)), ('C', '310', 8, 'side-chain clash\ncablam Outlier', (282.433, 305.413, 241.331)), ('C', '600', 8, 'cablam Outlier', (284.2, 310.0, 242.9)), ('C', '603', 8, 'cablam Outlier', (292.5, 310.5, 243.2)), ('C', '604', 8, 'cablam Outlier', (290.0, 312.8, 241.4)), ('C', '664', 8, 'side-chain clash', (282.433, 305.413, 241.331)), ('C', '271', 9, 'side-chain clash', (284.736, 317.282, 269.349)), ('C', '273', 9, 'Rotamer\nside-chain clash\nDihedral angle:CA:C', (287.78, 312.351, 269.71)), ('C', '274', 9, 'Dihedral angle:N:CA', (288.71799999999996, 309.35400000000004, 267.631)), ('C', '53', 9, 'side-chain clash', (293.442, 310.836, 270.96)), ('C', '55', 9, 'side-chain clash', (293.442, 310.836, 270.96)), ('C', '87', 10, 'side-chain clash', (289.037, 325.105, 280.421)), ('C', '88', 10, 'Dihedral angle:CA:C\ncablam Outlier', (289.339, 319.22299999999996, 281.02599999999995)), ('C', '89', 10, 'Dihedral angle:N:CA', (292.24, 319.65200000000004, 278.64400000000006)), ('C', '90', 10, 'Dihedral angle:CA:C', (294.22299999999996, 322.57099999999997, 277.27599999999995)), ('C', '91', 10, 'Dihedral angle:N:CA', (296.312, 323.043, 274.192)), ('C', '1303', 11, 'Planar group:C2:C7:C8:N2:O7', (260.207, 303.467, 318.52099999999996)), ('C', '338', 11, 'cablam Outlier', (257.2, 301.0, 308.7)), ('C', '340', 11, 'cablam Outlier', (254.6, 299.1, 313.0)), ('C', '343', 11, 'C-beta\nside-chain clash\nBond angle:C:CA:CB', (260.124, 298.474, 315.724)), ('C', '294', 12, 'side-chain clash', (281.936, 315.483, 255.571)), ('C', '295', 12, 'side-chain clash', (279.232, 314.588, 257.476)), ('C', '633', 12, 'side-chain clash', (279.232, 314.588, 257.476)), ('C', '636', 12, 'cablam Outlier', (274.3, 317.6, 255.1)), ('C', '318', 13, 'side-chain clash', (268.419, 308.005, 259.276)), ('C', '593', 13, 'side-chain clash', (268.419, 308.005, 259.276)), ('C', '614', 13, 'cablam Outlier', (265.0, 305.5, 255.1)), ('C', '615', 13, 'Rotamer', (263.5769999999999, 309.022, 255.66799999999998)), ('C', '1144', 14, 'Dihedral angle:CB:CG:CD:OE1\nDihedral angle:CA:C', (273.72299999999996, 269.227, 175.072)), ('C', '1145', 14, 'Dihedral angle:N:CA', (271.17, 269.32099999999997, 172.303)), ('C', '1146', 14, 'Dihedral angle:CA:CB:CG:OD1', (270.54, 265.573, 172.056)), ('C', '219', 15, 'backbone clash', (301.309, 322.04, 261.016)), ('C', '220', 15, 'cablam CA Geom Outlier', (302.0, 319.1, 260.6)), ('C', '34', 15, 'backbone clash\ncablam Outlier', (301.309, 322.04, 261.016)), ('C', '426', 16, 'side-chain clash', (262.435, 279.588, 294.249)), ('C', '427', 16, 'Dihedral angle:CA:CB:CG:OD1', (266.46099999999996, 279.93699999999995, 295.09499999999997)), ('C', '428', 16, 'side-chain clash\nDihedral angle:CA:CB:CG:OD1', (264.34700000000004, 282.392, 293.067)), ('C', '539', 17, 'Dihedral angle:CA:C', (260.839, 311.883, 274.66700000000003)), ('C', '540', 17, 'Dihedral angle:N:CA', (261.874, 309.633, 277.47799999999995)), ('C', '549', 17, 'cablam CA Geom Outlier', (261.6, 306.4, 274.7)), ('C', '825', 18, 'backbone clash', (298.068, 295.255, 231.427)), ('C', '938', 18, 'backbone clash', (298.068, 295.255, 231.427)), ('C', '940', 18, 'backbone clash', (297.526, 297.605, 233.237)), ('C', '699', 19, 'cablam Outlier', (268.9, 300.6, 229.3)), ('C', '700', 19, 'Dihedral angle:CA:C', (270.67900000000003, 300.874, 225.935)), ('C', '701', 19, 'Dihedral angle:N:CA', (270.339, 302.42599999999993, 222.55800000000002)), ('C', '206', 20, 'side-chain clash\nDihedral angle:CA:C', (307.42699999999996, 320.32599999999996, 271.043)), ('C', '207', 20, 'Dihedral angle:N:CA', (309.658, 323.129, 269.91099999999994)), ('C', '224', 20, 'side-chain clash', (309.977, 315.646, 269.28)), ('C', '244', 21, 'side-chain clash', (305.022, 345.357, 285.814)), ('C', '246', 21, 'side-chain clash', (305.022, 345.357, 285.814)), ('C', '254', 21, 'cablam Outlier', (306.3, 349.0, 290.2)), ('C', '352', 22, 'side-chain clash', (253.665, 279.676, 311.688)), ('C', '353', 22, 'side-chain clash', (253.173, 283.13, 309.422)), ('C', '466', 22, 'side-chain clash', (253.173, 283.13, 309.422)), ('C', '213', 23, 'Dihedral angle:CA:C', (303.894, 336.5, 260.103)), ('C', '214', 23, 'Dihedral angle:N:CA', (302.219, 336.187, 263.479)), ('C', '1302', 24, 'Planar group:C2:C7:C8:N2:O7', (310.03299999999996, 309.876, 256.45599999999996)), ('C', '281', 24, 'side-chain clash', (308.855, 304.78, 257.264)), ('C', '666', 25, 'cablam Outlier', (272.2, 304.0, 244.1)), ('C', '667', 25, 'cablam Outlier', (268.9, 302.1, 243.9)), ('C', '139', 26, 'side-chain clash', (301.69, 336.821, 290.957)), ('C', '159', 26, 'side-chain clash\ncablam Outlier', (301.69, 336.821, 290.957)), ('C', '676', 27, 'side-chain clash', (282.075, 317.296, 234.395)), ('C', '690', 27, 'side-chain clash', (282.075, 317.296, 234.395)), ('C', '348', 28, 'Dihedral angle:CA:C', (256.35, 285.54400000000004, 316.265)), ('C', '349', 28, 'Dihedral angle:N:CA', (258.246, 282.39799999999997, 317.03299999999996)), ('C', '408', 29, 'side-chain clash', (288.551, 293.105, 207.073)), ('C', '409', 29, 'side-chain clash', (288.551, 293.105, 207.073)), ('C', '991', 30, 'Dihedral angle:CA:C', (287.66900000000004, 281.168, 285.48599999999993)), ('C', '992', 30, 'Dihedral angle:N:CA', (290.019, 283.464, 283.6)), ('C', '1118', 31, 'Dihedral angle:CA:C', (270.158, 271.409, 190.71599999999998)), ('C', '1119', 31, 'Dihedral angle:N:CA', (269.96799999999996, 274.139, 193.30700000000002)), ('C', '31', 32, 'backbone clash', (291.465, 323.371, 262.954)), ('C', '59', 32, 'backbone clash', (291.465, 323.371, 262.954)), ('C', '1062', 33, 'Dihedral angle:CA:C', (291.111, 282.085, 226.835)), ('C', '1063', 33, 'Dihedral angle:N:CA', (291.365, 283.809, 223.507)), ('C', '416', 34, 'backbone clash', (266.044, 274.364, 306.889)), ('C', '420', 34, 'backbone clash', (266.044, 274.364, 306.889)), ('C', '80', 35, 'Dihedral angle:CA:CB:CG:OD1\nDihedral angle:CA:C\ncablam Outlier', (295.633, 342.22599999999994, 280.4959999999999)), ('C', '81', 35, 'Dihedral angle:N:CA\ncablam Outlier', (296.52099999999996, 338.525, 280.64000000000004)), ('C', '791', 36, 'Dihedral angle:CA:C', (305.741, 272.751, 217.69)), ('C', '792', 36, 'Dihedral angle:N:CA', (307.877, 272.40299999999996, 214.596)), ('C', '444', 37, 'Dihedral angle:CA:C', (264.39, 288.022, 329.67900000000003)), ('C', '445', 37, 'Dihedral angle:N:CA', (266.337, 287.334, 332.83)), ('C', '555', 38, 'Dihedral angle:CA:C', (245.49, 305.78299999999996, 270.265)), ('C', '556', 38, 'Dihedral angle:N:CA', (242.52700000000002, 304.272, 268.49399999999997)), ('C', '258', 39, 'side-chain clash', (300.595, 348.208, 280.039)), ('C', '77', 39, 'side-chain clash', (300.595, 348.208, 280.039)), ('C', '858', 40, 'side-chain clash', (301.77, 277.972, 259.735)), ('C', '859', 40, 'side-chain clash', (301.77, 277.972, 259.735)), ('C', '565', 41, 'Dihedral angle:CA:C', (249.055, 297.613, 278.01599999999996)), ('C', '566', 41, 'Dihedral angle:N:CA', (249.046, 296.553, 274.447)), ('C', '1043', 42, 'cablam CA Geom Outlier', (282.6, 280.5, 223.7)), ('C', '1045', 42, 'cablam Outlier', (280.5, 286.1, 221.0)), ('C', '143', 43, 'side-chain clash', (312.091, 341.126, 286.359)), ('C', '154', 43, 'side-chain clash', (312.091, 341.126, 286.359)), ('C', '200', 44, 'side-chain clash', (301.573, 310.642, 290.263)), ('C', '230', 44, 'side-chain clash', (301.573, 310.642, 290.263)), ('C', '950', 45, 'backbone clash\nDihedral angle:CA:CB:CG:OD1', (289.515, 289.524, 244.661)), ('C', '951', 45, 'backbone clash', (289.107, 287.33, 243.781)), ('C', '70', 46, 'side-chain clash', (297.29, 347.907, 269.512)), ('C', '78', 46, 'side-chain clash', (297.29, 347.907, 269.512)), ('C', '474', 47, 'backbone clash', (258.922, 254.597, 315.036)), ('C', '476', 47, 'backbone clash', (258.922, 254.597, 315.036)), ('D', '120', 1, 'side-chain clash', (273.902, 249.293, 382.172)), ('D', '123', 1, 'Rotamer\nside-chain clash', (273.902, 249.293, 382.172)), ('D', '183', 1, 'Rotamer\nside-chain clash', (272.723, 254.595, 380.942)), ('D', '187', 1, 'side-chain clash', (276.605, 256.218, 379.929)), ('D', '199', 1, 'side-chain clash\nDihedral angle:CA:C', (275.377, 261.5, 381.176)), ('D', '200', 1, 'Dihedral angle:N:CA', (271.977, 263.05, 380.54400000000004)), ('D', '201', 1, 'side-chain clash', (272.713, 266.298, 377.376)), ('D', '204', 1, 'side-chain clash', (272.713, 266.298, 377.376)), ('D', '457', 1, 'side-chain clash', (266.265, 259.508, 379.123)), ('D', '460', 1, 'side-chain clash', (266.265, 259.508, 379.123)), ('D', '504', 1, 'backbone clash', (267.16, 249.395, 380.569)), ('D', '508', 1, 'backbone clash', (267.16, 249.395, 380.569)), ('D', '509', 1, 'side-chain clash\nDihedral angle:CA:CB:CG:OD1', (270.51099999999997, 252.33700000000002, 379.305)), ('D', '510', 1, 'Dihedral angle:CA:C', (268.128, 254.06, 376.899)), ('D', '511', 1, 'Dihedral angle:N:CA', (267.518, 257.637, 375.902)), ('D', '402', 2, 'Dihedral angle:CB:CG:CD:OE1', (259.98999999999995, 257.34900000000005, 365.065)), ('D', '406', 2, 'Dihedral angle:CB:CG:CD:OE1', (253.835, 256.79499999999996, 362.989)), ('D', '518', 2, 'Dihedral angle:CD:NE:CZ:NH1', (258.246, 261.59599999999995, 368.93499999999995)), ('D', '520', 2, 'side-chain clash', (256.08, 267.361, 367.666)), ('D', '524', 2, 'side-chain clash', (256.08, 267.361, 367.666)), ('D', '160', 3, 'Dihedral angle:CB:CG:CD:OE1', (246.786, 241.012, 393.857)), ('D', '161', 3, 'Planar group:CD:NE:CZ:NH1:NH2', (247.706, 244.373, 392.29699999999997)), ('D', '262', 3, 'side-chain clash', (246.213, 255.582, 389.67)), ('D', '266', 3, 'Dihedral angle:CA:C', (245.768, 250.372, 390.46599999999995)), ('D', '267', 3, 'side-chain clash\nDihedral angle:N:CA', (246.24699999999999, 252.096, 387.127)), ('D', '295', 4, 'side-chain clash\nDihedral angle:CA:CB:CG:OD1', (235.685, 242.19299999999998, 359.445)), ('D', '297', 4, 'Rotamer', (239.03, 242.49199999999993, 355.197)), ('D', '302', 4, 'Dihedral angle:CA:C', (242.93200000000002, 239.661, 352.212)), ('D', '303', 4, 'Dihedral angle:N:CA\ncablam Outlier', (246.03, 237.52200000000002, 352.58599999999996)), ('D', '304', 4, 'cablam Outlier', (248.6, 239.9, 354.2)), ('D', '132', 5, 'Rotamer\nbackbone clash', (256.605, 234.92, 390.187)), ('D', '133', 5, 'side-chain clash', (256.908, 233.813, 392.229)), ('D', '141', 5, 'side-chain clash', (256.908, 233.813, 392.229)), ('D', '142', 5, 'backbone clash', (256.605, 234.92, 390.187)), ('D', '169', 6, 'Dihedral angle:CD:NE:CZ:NH1', (260.299, 246.23999999999998, 393.552)), ('D', '171', 6, 'Dihedral angle:CB:CG:CD:OE1', (262.17, 240.912, 394.626)), ('D', '174', 6, 'side-chain clash', (265.447, 245.266, 398.163)), ('D', '496', 6, 'side-chain clash', (265.447, 245.266, 398.163)), ('D', '165', 7, 'side-chain clash', (253.959, 251.669, 395.37)), ('D', '474', 7, 'side-chain clash', (259.253, 254.151, 395.293)), ('D', '478', 7, 'side-chain clash', (259.253, 254.151, 395.293)), ('D', '490', 7, 'side-chain clash', (253.959, 251.669, 395.37)), ('D', '535', 8, 'backbone clash\nside-chain clash', (242.06, 267.391, 361.614)), ('D', '536', 8, 'side-chain clash\nbackbone clash', (241.228, 269.257, 358.085)), ('D', '539', 8, 'side-chain clash', (242.06, 267.391, 361.614)), ('D', '541', 8, 'side-chain clash', (237.023, 268.978, 359.898)), ('D', '599', 9, 'Rotamer', (235.47499999999997, 266.6519999999999, 384.94599999999997)), ('D', '600', 9, 'Dihedral angle:CA:C', (232.833, 268.35900000000004, 387.13599999999997)), ('D', '601', 9, 'Dihedral angle:N:CA\ncablam CA Geom Outlier', (231.605, 264.845, 387.855)), ('D', '602', 9, 'cablam CA Geom Outlier', (234.1, 265.3, 390.7)), ('D', '238', 10, 'Dihedral angle:CB:CG:CD:OE1', (245.18, 267.057, 384.812)), ('D', '239', 10, 'side-chain clash', (241.483, 270.039, 380.221)), ('D', '592', 10, 'side-chain clash', (241.483, 270.039, 380.221)), ('D', '176', 11, 'backbone clash', (265.632, 247.455, 387.289)), ('D', '177', 11, 'Dihedral angle:CD:NE:CZ:NH1', (269.214, 249.157, 392.603)), ('D', '501', 11, 'backbone clash', (265.632, 247.455, 387.289)), ('D', '468', 12, 'side-chain clash', (269.371, 260.907, 393.256)), ('D', '470', 12, 'side-chain clash', (271.658, 258.11, 394.449)), ('D', '473', 12, 'side-chain clash', (269.371, 260.907, 393.256)), ('D', '351', 13, 'side-chain clash', (270.378, 245.006, 352.122)), ('D', '353', 13, 'cablam CA Geom Outlier', (273.5, 248.1, 348.9)), ('D', '355', 13, 'side-chain clash', (270.378, 245.006, 352.122)), ('D', '208', 14, 'backbone clash', (271.617, 271.464, 369.997)), ('D', '217', 14, 'backbone clash', (271.617, 271.464, 369.997)), ('D', '90', 15, 'side-chain clash', (280.809, 267.934, 352.727)), ('D', '92', 15, 'side-chain clash', (280.809, 267.934, 352.727)), ('D', '224', 16, 'Dihedral angle:CB:CG:CD:OE1\ncablam Outlier', (264.40799999999996, 274.191, 377.882)), ('D', '227', 16, 'Dihedral angle:CB:CG:CD:OE1', (259.94599999999997, 271.618, 380.263)), ('D', '435', 17, 'side-chain clash', (237.286, 262.476, 365.01)), ('D', '540', 17, 'side-chain clash', (237.286, 262.476, 365.01)), ('D', '279', 18, 'side-chain clash', (236.656, 252.697, 377.582)), ('D', '283', 18, 'side-chain clash', (236.656, 252.697, 377.582)), ('D', '414', 19, 'side-chain clash', (240.732, 258.37, 356.309)), ('D', '417', 19, 'side-chain clash', (240.732, 258.37, 356.309)), ('D', '146', 20, 'Dihedral angle:CA:C', (253.648, 237.512, 380.816)), ('D', '147', 20, 'Dihedral angle:N:CA', (253.04, 236.88100000000003, 384.47999999999996)), ('D', '189', 21, 'Dihedral angle:CB:CG:CD:OE1', (282.93499999999995, 259.529, 383.98699999999997)), ('D', '192', 21, 'Dihedral angle:CD:NE:CZ:NH1', (282.96999999999997, 264.03299999999996, 381.52299999999997)), ('D', '152', 22, 'side-chain clash', (252.023, 245.516, 386.705)), ('D', '270', 22, 'side-chain clash', (252.023, 245.516, 386.705)), ('D', '396', 23, 'side-chain clash', (269.57, 264.036, 360.928)), ('D', '562', 23, 'side-chain clash', (269.57, 264.036, 360.928)), ('D', '582', 24, 'side-chain clash', (247.084, 274.111, 367.039)), ('D', '586', 24, 'side-chain clash', (247.084, 274.111, 367.039)), ('D', '446', 25, 'side-chain clash', (252.333, 259.304, 376.351)), ('D', '449', 25, 'side-chain clash', (252.333, 259.304, 376.351)), ('D', '382', 26, 'side-chain clash', (267.251, 255.751, 355.89)), ('D', '385', 26, 'Rotamer\nside-chain clash', (267.251, 255.751, 355.89)), ('D', '388', 27, 'side-chain clash', (274.851, 257.578, 351.809)), ('D', '393', 27, 'side-chain clash', (274.851, 257.578, 351.809)), ('D', '453', 28, 'side-chain clash', (259.163, 258.598, 380.03)), ('D', '512', 28, 'side-chain clash', (259.163, 258.598, 380.03)), ('D', '257', 29, 'side-chain clash', (242.925, 259.087, 399.032)), ('D', '610', 29, 'side-chain clash', (242.925, 259.087, 399.032)), ('D', '230', 30, 'side-chain clash', (255.231, 265.781, 383.978)), ('D', '484', 30, 'side-chain clash', (255.231, 265.781, 383.978))]
data['omega'] = [('A', ' 527 ', 'PRO', None, (275.0929999999999, 246.095, 305.2469999999999)), ('D', ' 146 ', 'PRO', None, (254.897, 236.74199999999993, 380.76199999999994))]
data['cablam'] = [('A', '20', 'THR', 'check CA trace,carbonyls, peptide', 'bend\n--S-B', (210.8, 266.2, 302.4)), ('A', '80', 'ASP', 'check CA trace,carbonyls, peptide', ' \nB----', (219.9, 269.9, 295.6)), ('A', '88', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\n--SEE', (242.1, 273.5, 291.7)), ('A', '108', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nEESSS', (238.5, 273.7, 303.9)), ('A', '123', 'ALA', 'check CA trace,carbonyls, peptide', 'bend\nE-SSB', (218.0, 292.4, 297.0)), ('A', '138', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\n-SS--', (221.6, 272.7, 305.1)), ('A', '231', 'ILE', ' beta sheet', ' \nEE---', (242.1, 285.8, 300.4)), ('A', '257', 'GLY', 'check CA trace,carbonyls, peptide', ' \nTT--B', (207.8, 272.5, 303.3)), ('A', '262', 'ALA', 'check CA trace,carbonyls, peptide', 'strand\n-TEEE', (212.4, 274.2, 288.2)), ('A', '310', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\n--SEE', (247.6, 268.7, 252.3)), ('A', '315', 'THR', 'check CA trace,carbonyls, peptide', ' \nEE---', (254.1, 265.9, 265.9)), ('A', '324', 'GLU', 'check CA trace,carbonyls, peptide', ' \n---EE', (260.1, 248.3, 287.5)), ('A', '333', 'THR', 'check CA trace,carbonyls, peptide', ' \n----B', (278.9, 237.2, 303.6)), ('A', '337', 'PRO', 'check CA trace,carbonyls, peptide', 'bend\nB-STT', (282.5, 239.4, 315.2)), ('A', '342', 'PHE', ' alpha helix', 'helix-3\nTGGG-', (277.8, 241.1, 322.8)), ('A', '353', 'TRP', 'check CA trace,carbonyls, peptide', ' \nGG-EE', (288.9, 248.4, 329.7)), ('A', '389', 'ASP', 'check CA trace,carbonyls, peptide', 'turn\nSTT-E', (273.2, 253.4, 305.2)), ('A', '440', 'ASN', ' alpha helix', 'helix\n-HHHH', (272.6, 236.9, 336.1)), ('A', '477', 'SER', 'check CA trace,carbonyls, peptide', 'bend\n-SS--', (301.8, 266.1, 352.8)), ('A', '478', 'THR', 'check CA trace,carbonyls, peptide', ' \nSS---', (302.7, 262.5, 353.8)), ('A', '495', 'TYR', ' beta sheet', ' \nEE--B', (282.7, 246.0, 343.7)), ('A', '496', 'GLY', ' beta sheet', ' \nE--B-', (281.5, 242.8, 345.4)), ('A', '536', 'ASN', 'check CA trace,carbonyls, peptide', 'bend\n--SSE', (261.6, 241.7, 278.8)), ('A', '614', 'ASP', 'check CA trace,carbonyls, peptide', 'turn\nETT--', (260.1, 252.8, 264.5)), ('A', '666', 'ILE', 'check CA trace,carbonyls, peptide', 'strand\nEEEET', (254.8, 257.7, 253.0)), ('A', '667', 'GLY', 'check CA trace,carbonyls, peptide', 'strand\nEEETT', (257.9, 255.6, 252.3)), ('A', '701', 'ALA', 'check CA trace,carbonyls, peptide', 'strand\n-SEEE', (251.6, 252.3, 232.9)), ('A', '1043', 'CYS', 'check CA trace,carbonyls, peptide', 'turn\nTTTSS', (265.0, 273.5, 225.9)), ('A', '1083', 'HIS', 'check CA trace,carbonyls, peptide', ' \nEE-SS', (270.3, 246.2, 191.5)), ('A', '1099', 'GLY', 'check CA trace,carbonyls, peptide', 'bend\nESSSS', (254.0, 245.6, 201.0)), ('A', '1100', 'THR', ' alpha helix', 'bend\nSSSSE', (254.4, 245.8, 197.2)), ('A', '1123', 'SER', 'check CA trace,carbonyls, peptide', 'strand\nEEEEE', (279.1, 251.3, 196.8)), ('A', '1131', 'GLY', 'check CA trace,carbonyls, peptide', 'bend\n-SS-E', (269.9, 242.0, 204.4)), ('A', '34', 'ARG', 'check CA trace', ' \n-S--E', (233.0, 276.8, 276.5)), ('A', '186', 'PHE', 'check CA trace', ' \nT--SE', (215.2, 280.3, 281.9)), ('A', '214', 'ARG', 'check CA trace', 'bend\n--SS-', (217.6, 273.2, 278.2)), ('A', '215', 'ASP', 'check CA trace', 'bend\n-SS--', (221.1, 271.6, 277.7)), ('A', '218', 'GLN', 'check CA trace', ' \n---S-', (226.4, 276.1, 271.3)), ('A', '220', 'PHE', 'check CA trace', ' \n-S--E', (231.4, 280.5, 271.3)), ('A', '486', 'PHE', 'check CA trace', 'turn\n-BTTE', (297.3, 257.6, 357.1)), ('A', '525', 'CYS', 'check CA trace', 'strand\n-EE--', (279.7, 249.0, 305.1)), ('A', '549', 'THR', 'check CA trace', 'strand\nEEEEE', (267.3, 251.9, 281.6)), ('A', '591', 'SER', 'check CA trace', ' \n---EE', (261.3, 251.9, 272.6)), ('A', '637', 'SER', 'check CA trace', 'turn\nSTTSS', (244.3, 253.6, 270.7)), ('A', '638', 'THR', 'check CA trace', 'bend\nTTSSS', (243.6, 250.2, 269.1)), ('A', '699', 'LEU', 'check CA trace', ' \n---SE', (255.6, 253.3, 238.3)), ('A', '1092', 'GLU', 'check CA trace', 'bend\nESSSE', (269.3, 260.6, 203.6)), ('B', '20', 'THR', 'check CA trace,carbonyls, peptide', 'bend\n--S-B', (331.1, 235.2, 300.7)), ('B', '41', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\n-SSEE', (287.4, 245.2, 283.8)), ('B', '46', 'SER', 'check CA trace,carbonyls, peptide', 'bend\n--S-E', (287.0, 242.5, 267.7)), ('B', '87', 'ASN', 'check CA trace,carbonyls, peptide', ' \nE--S-', (308.8, 254.4, 291.5)), ('B', '97', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\nEESS-', (312.1, 226.0, 287.7)), ('B', '108', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nEESS-', (309.5, 252.8, 302.7)), ('B', '112', 'SER', 'check CA trace,carbonyls, peptide', 'bend\n-SSSS', (309.1, 249.4, 312.4)), ('B', '159', 'VAL', 'check CA trace,carbonyls, peptide', 'strand\nEEEEE', (313.2, 238.8, 307.7)), ('B', '178', 'ASP', ' beta sheet', ' \n-----', (306.3, 220.4, 296.1)), ('B', '230', 'PRO', ' beta sheet', ' \nEE---', (293.0, 248.6, 300.2)), ('B', '262', 'ALA', 'check CA trace,carbonyls, peptide', 'strand\n--EEE', (321.0, 229.4, 290.1)), ('B', '291', 'CYS', 'check CA trace,carbonyls, peptide', 'turn\nEETTS', (302.3, 255.2, 269.9)), ('B', '342', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\nSSSS-', (303.1, 298.8, 309.5)), ('B', '344', 'ALA', 'check CA trace,carbonyls, peptide', ' \nSS-S-', (304.3, 303.0, 312.2)), ('B', '476', 'GLY', 'check CA trace,carbonyls, peptide', 'bend\nESS-S', (265.8, 318.2, 307.7)), ('B', '636', 'TYR', ' beta sheet', ' \n-----', (317.7, 259.8, 263.9)), ('B', '666', 'ILE', 'check CA trace,carbonyls, peptide', 'strand\nEEEET', (305.1, 265.8, 248.0)), ('B', '667', 'GLY', 'check CA trace,carbonyls, peptide', 'strand\nEEETT', (305.0, 269.4, 246.7)), ('B', '699', 'LEU', 'check CA trace,carbonyls, peptide', ' \n----E', (304.5, 265.6, 232.7)), ('B', '745', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\n-SS-H', (265.2, 261.7, 281.4)), ('B', '797', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\n--STT', (270.2, 242.2, 217.7)), ('B', '1034', 'LEU', ' alpha helix', 'turn\nIITS-', (268.2, 259.6, 225.3)), ('B', '1043', 'CYS', 'check CA trace,carbonyls, peptide', 'turn\nTTTSS', (279.9, 261.5, 227.0)), ('B', '1083', 'HIS', 'check CA trace,carbonyls, peptide', ' \nEE-SS', (290.5, 271.5, 185.4)), ('B', '1092', 'GLU', 'check CA trace,carbonyls, peptide', 'bend\nESSSE', (282.5, 267.1, 201.4)), ('B', '1098', 'ASN', 'check CA trace,carbonyls, peptide', ' \nEE-SS', (299.3, 258.4, 196.6)), ('B', '1109', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\nTTS--', (287.7, 256.8, 206.9)), ('B', '82', 'PRO', 'check CA trace', ' \n----E', (319.8, 244.3, 297.2)), ('B', '183', 'GLN', 'check CA trace', ' \n----S', (317.2, 220.9, 288.7)), ('B', '185', 'ASN', 'check CA trace', 'bend\n--SEE', (317.1, 224.9, 282.8)), ('B', '214', 'ARG', 'check CA trace', 'bend\nESSS-', (319.0, 232.2, 280.4)), ('B', '218', 'GLN', 'check CA trace', ' \n-----', (310.4, 236.8, 273.2)), ('B', '220', 'PHE', 'check CA trace', ' \n----E', (303.5, 238.2, 273.5)), ('B', '415', 'THR', 'check CA trace', ' \nT--SH', (278.7, 300.1, 300.0)), ('B', '479', 'PRO', 'check CA trace', 'turn\n-STTT', (268.2, 326.9, 307.2)), ('B', '480', 'CYS', 'check CA trace', 'turn\nSTTTT', (270.9, 325.1, 309.2)), ('B', '486', 'PHE', 'check CA trace', 'turn\n--TTE', (266.3, 321.2, 313.5)), ('B', '519', 'HIS', 'check CA trace', 'bend\n-SSS-', (302.2, 299.7, 281.7)), ('B', '549', 'THR', 'check CA trace', 'strand\nEEEEE', (310.1, 282.4, 274.8)), ('B', '591', 'SER', 'check CA trace', ' \n---EE', (311.1, 277.5, 265.4)), ('B', '635', 'VAL', 'check CA trace', ' \n-----', (318.5, 261.8, 267.0)), ('C', '34', 'ARG', 'check CA trace,carbonyls, peptide', ' \n-S---', (298.4, 320.8, 265.4)), ('C', '41', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\n-SSEE', (305.6, 304.8, 275.0)), ('C', '80', 'ASP', 'check CA trace,carbonyls, peptide', ' \n-----', (295.6, 342.2, 280.5)), ('C', '81', 'ASN', 'check CA trace,carbonyls, peptide', ' \n-----', (296.5, 338.5, 280.6)), ('C', '88', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\n--SSE', (289.3, 319.2, 281.0)), ('C', '98', 'SER', 'check CA trace,carbonyls, peptide', 'turn\nESTT-', (312.3, 337.4, 273.8)), ('C', '108', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nEESS-', (290.9, 326.1, 291.7)), ('C', '110', 'LEU', 'check CA trace,carbonyls, peptide', ' \nSS-BS', (294.4, 330.1, 294.2)), ('C', '112', 'SER', 'check CA trace,carbonyls, peptide', 'bend\n-BSSS', (295.7, 328.8, 300.1)), ('C', '159', 'VAL', 'check CA trace,carbonyls, peptide', 'strand\nEEEEE', (303.4, 336.3, 292.2)), ('C', '254', 'SER', 'check CA trace,carbonyls, peptide', 'turn\nS-TTT', (306.3, 349.0, 290.2)), ('C', '261', 'GLY', 'check CA trace,carbonyls, peptide', ' \nB----', (306.0, 344.1, 274.5)), ('C', '262', 'ALA', 'check CA trace,carbonyls, peptide', ' \n----E', (304.7, 342.4, 271.4)), ('C', '310', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\n--SEE', (285.2, 305.4, 243.3)), ('C', '333', 'THR', ' beta sheet', ' \n----B', (249.1, 310.0, 298.7)), ('C', '338', 'PHE', 'check CA trace,carbonyls, peptide', ' \n---HH', (257.2, 301.0, 308.7)), ('C', '340', 'GLU', ' alpha helix', 'helix\n-HHHH', (254.6, 299.1, 313.0)), ('C', '481', 'ASN', 'check CA trace,carbonyls, peptide', 'turn\n--TT-', (250.9, 255.7, 318.7)), ('C', '522', 'ALA', 'check CA trace,carbonyls, peptide', ' \nSS-SE', (250.9, 299.0, 291.0)), ('C', '527', 'PRO', 'check CA trace,carbonyls, peptide', 'bend\nE-S--', (258.2, 309.0, 296.3)), ('C', '536', 'ASN', 'check CA trace,carbonyls, peptide', 'bend\n--SSE', (254.1, 314.4, 269.4)), ('C', '600', 'PRO', 'check CA trace,carbonyls, peptide', 'bend\nEES-T', (284.2, 310.0, 242.9)), ('C', '603', 'ASN', ' alpha helix', 'turn\n-TTT-', (292.5, 310.5, 243.2)), ('C', '604', 'THR', 'check CA trace,carbonyls, peptide', 'turn\nTTT--', (290.0, 312.8, 241.4)), ('C', '614', 'ASP', 'check CA trace,carbonyls, peptide', 'turn\nETT--', (265.0, 305.5, 255.1)), ('C', '636', 'TYR', ' three-ten', 'helix-3\nGGGSS', (274.3, 317.6, 255.1)), ('C', '658', 'ASN', 'check CA trace,carbonyls, peptide', ' \n-S---', (269.2, 313.6, 230.8)), ('C', '666', 'ILE', 'check CA trace,carbonyls, peptide', 'strand\nEEEET', (272.2, 304.0, 244.1)), ('C', '667', 'GLY', 'check CA trace,carbonyls, peptide', 'strand\nEEETT', (268.9, 302.1, 243.9)), ('C', '699', 'LEU', 'check CA trace,carbonyls, peptide', ' \n---SE', (268.9, 300.6, 229.3)), ('C', '745', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\n-SS-H', (303.5, 277.5, 275.1)), ('C', '797', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\n--STT', (300.8, 278.7, 208.9)), ('C', '1034', 'LEU', 'check CA trace,carbonyls, peptide', 'bend\nIISS-', (289.6, 270.6, 221.9)), ('C', '1045', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\nSSSSE', (280.5, 286.1, 221.0)), ('C', '1070', 'ALA', 'check CA trace,carbonyls, peptide', ' \nEE--E', (279.7, 292.9, 208.2)), ('C', '1084', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nESSSE', (256.0, 274.7, 184.6)), ('C', '1111', 'GLU', 'check CA trace,carbonyls, peptide', ' \nS---B', (277.3, 285.2, 196.5)), ('C', '1131', 'GLY', 'check CA trace,carbonyls, peptide', 'bend\n-SSEE', (253.7, 283.5, 198.6)), ('C', '180', 'GLU', 'check CA trace', ' \n-----', (316.9, 339.7, 276.8)), ('C', '183', 'GLN', 'check CA trace', ' \n---SS', (311.1, 342.1, 268.8)), ('C', '220', 'PHE', 'check CA trace', ' \n-S---', (302.0, 319.1, 260.6)), ('C', '549', 'THR', 'check CA trace', 'strand\nEEEEE', (261.6, 306.4, 274.7)), ('C', '1043', 'CYS', 'check CA trace', 'bend\nTSSSS', (282.6, 280.5, 223.7)), ('C', '1092', 'GLU', 'check CA trace', 'bend\nESSSE', (269.5, 275.2, 201.2)), ('D', '57', 'GLU', ' alpha helix', 'turn\nSTTHH', (276.2, 229.0, 362.9)), ('D', '156', 'LEU', 'check CA trace,carbonyls, peptide', ' \nT---H', (241.3, 244.7, 389.3)), ('D', '224', 'GLU', ' alpha helix', 'turn\nGTTTH', (264.4, 274.2, 377.9)), ('D', '303', 'ASP', 'check CA trace,carbonyls, peptide', ' \nT--SH', (246.0, 237.5, 352.6)), ('D', '304', 'ALA', 'check CA trace,carbonyls, peptide', 'bend\n--SHH', (248.6, 239.9, 354.2)), ('D', '609', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\n-SS--', (248.7, 265.4, 399.6)), ('D', '353', 'LYS', 'check CA trace', 'turn\nEETTE', (273.5, 248.1, 348.9)), ('D', '601', 'ASN', 'check CA trace', 'turn\nHTTS-', (231.6, 264.8, 387.9)), ('D', '602', 'SER', 'check CA trace', 'bend\nTTS-S', (234.1, 265.3, 390.7))]
handle_read_draw_probe_dots_unformatted("/home/ccpem/agnel/gisaid/countries_seq/structure_data/emdb/EMD-11684/7a94/Model_validation_1/validation_cootdata/molprobity_probe7a94_0.txt", 0, 0)
show_probe_dots(True, True)
gui = coot_molprobity_todo_list_gui(data=data)
