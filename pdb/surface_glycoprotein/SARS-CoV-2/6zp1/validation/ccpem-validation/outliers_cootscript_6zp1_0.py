
from __future__ import division
import cPickle
try :
  import gobject
except ImportError :
  gobject = None
import sys

dict_residue_prop_objects = {}
class coot_extension_gui (object) :
  def __init__ (self, title) :
    import gtk
    self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
    scrolled_win = gtk.ScrolledWindow()
    self.outside_vbox = gtk.VBox(False, 2)
    self.inside_vbox = gtk.VBox(False, 0)
    self.window.set_title(title)
    self.inside_vbox.set_border_width(0)
    self.window.add(self.outside_vbox)
    self.outside_vbox.pack_start(scrolled_win, True, True, 0)
    scrolled_win.add_with_viewport(self.inside_vbox)
    scrolled_win.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)

  def finish_window (self) :
    import gtk
    self.outside_vbox.set_border_width(2)
    ok_button = gtk.Button("  Close  ")
    self.outside_vbox.pack_end(ok_button, False, False, 0)
    ok_button.connect("clicked", lambda b: self.destroy_window())
    self.window.connect("delete_event", lambda a, b: self.destroy_window())
    self.window.show_all()

  def destroy_window (self, *args) :
    self.window.destroy()
    self.window = None

  def confirm_data (self, data) :
    for data_key in self.data_keys :
      outlier_list = data.get(data_key)
      if outlier_list is not None and len(outlier_list) > 0 :
        return True
    return False

  def create_property_lists (self, data) :
    import gtk
    for data_key in self.data_keys :
      outlier_list = data[data_key]
      if outlier_list is None or len(outlier_list) == 0 :
        continue
      else :
        frame = gtk.Frame(self.data_titles[data_key])
        vbox = gtk.VBox(False, 2)
        frame.set_border_width(6)
        frame.add(vbox)
        self.add_top_widgets(data_key, vbox)
        self.inside_vbox.pack_start(frame, False, False, 5)
        list_obj = residue_properties_list(
          columns=self.data_names[data_key],
          column_types=self.data_types[data_key],
          rows=outlier_list,
          box=vbox)
        ##save property list frame object
        dict_residue_prop_objects[data_key] = list_obj
# Molprobity result viewer
class coot_molprobity_todo_list_gui (coot_extension_gui) :
  data_keys = [ "clusters","rama", "rota", "cbeta", "probe", "smoc", "cablam",
               "jpred"]
  data_titles = { "clusters"  : "Outlier residue clusters",
                  "rama"  : "Ramachandran outliers",
                  "rota"  : "Rotamer outliers",
                  "cbeta" : "C-beta outliers",
                  "probe" : "Severe clashes",
                  "smoc"  : "Local density fit (SMOC)",
                  "cablam": "Ca geometry (CaBLAM)",
                  "jpred":"SS prediction"}
  data_names = { "clusters"  : ["Chain","Residue","Cluster","Outlier types"],
                 "rama"  : ["Chain", "Residue", "Name", "Score"],
                 "rota"  : ["Chain", "Residue", "Name", "Score"],
                 "cbeta" : ["Chain", "Residue", "Name", "Conf.", "Deviation"],
                 "probe" : ["Atom 1", "Atom 2", "Overlap"],
                 "smoc" : ["Chain", "Residue", "Name", "Score"],
                 "cablam" : ["Chain", "Residue","Name","recommendation","DSSP"],
                 "jpred" : ["Chain", "Residue","Name","predicted SS","current SS"]}
  if (gobject is not None) :
    data_types = {  "clusters" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_INT, gobject.TYPE_STRING,
                             gobject.TYPE_PYOBJECT],
                    "rama" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "rota" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cbeta" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "probe" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "smoc" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cablam" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_STRING,
                             gobject.TYPE_STRING,gobject.TYPE_PYOBJECT],
                   "jpred" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_STRING,
                             gobject.TYPE_STRING,gobject.TYPE_PYOBJECT]}
  else :
    data_types = dict([ (s, []) for s in ["clusters","rama","rota","cbeta","probe","smoc",
                                          "cablam","jpred"] ])

  def __init__ (self, data_file=None, data=None) :
    assert ([data, data_file].count(None) == 1)
    if (data is None) :
      data = load_pkl(data_file)
    if not self.confirm_data(data) :
      return
    coot_extension_gui.__init__(self, "MolProbity to-do list")
    self.dots_btn = None
    self.dots2_btn = None
    self._overlaps_only = True
    self.window.set_default_size(420, 600)
    self.create_property_lists(data)
    self.finish_window()

  def add_top_widgets (self, data_key, box) :
    import gtk
    if data_key == "probe" :
      hbox = gtk.HBox(False, 2)
      self.dots_btn = gtk.CheckButton("Show Probe dots")
      hbox.pack_start(self.dots_btn, False, False, 5)
      self.dots_btn.connect("toggled", self.toggle_probe_dots)
      self.dots2_btn = gtk.CheckButton("Overlaps only")
      hbox.pack_start(self.dots2_btn, False, False, 5)
      self.dots2_btn.connect("toggled", self.toggle_all_probe_dots)
      self.dots2_btn.set_active(True)
      self.toggle_probe_dots()
      box.pack_start(hbox, False, False, 0)

  def toggle_probe_dots (self, *args) :
    if self.dots_btn is not None :
      show_dots = self.dots_btn.get_active()
      overlaps_only = self.dots2_btn.get_active()
      if show_dots :
        self.dots2_btn.set_sensitive(True)
      else :
        self.dots2_btn.set_sensitive(False)
      show_probe_dots(show_dots, overlaps_only)

  def toggle_all_probe_dots (self, *args) :
    if self.dots2_btn is not None :
      self._overlaps_only = self.dots2_btn.get_active()
      self.toggle_probe_dots()

class rsc_todo_list_gui (coot_extension_gui) :
  data_keys = ["by_res", "by_atom"]
  data_titles = ["Real-space correlation by residue",
                 "Real-space correlation by atom"]
  data_names = {}
  data_types = {}

class residue_properties_list (object) :
  def __init__ (self, columns, column_types, rows, box,
      default_size=(380,200)) :
    assert len(columns) == (len(column_types) - 1)
    if (len(rows) > 0) and (len(rows[0]) != len(column_types)) :
      raise RuntimeError("Wrong number of rows:\n%s" % str(rows[0]))
    import gtk
    ##adding a column type for checkbox (bool) before atom coordinate
    if gobject is not None:
        column_types = column_types[:-1]+[bool]+[column_types[-1]]
    
    self.liststore = gtk.ListStore(*column_types)
    self.listmodel = gtk.TreeModelSort(self.liststore)
    self.listctrl = gtk.TreeView(self.listmodel)
    self.listctrl.column = [None]*len(columns)
    self.listctrl.cell = [None]*len(columns)
    for i, column_label in enumerate(columns) :
      cell = gtk.CellRendererText()
      column = gtk.TreeViewColumn(column_label)
      self.listctrl.append_column(column)
      column.set_sort_column_id(i)
      column.pack_start(cell, True)
      column.set_attributes(cell, text=i)
    ##add a cell for checkbox
    cell1 = gtk.CellRendererToggle()
    cell1.connect ("toggled", self.on_selected_toggled)
    column = gtk.TreeViewColumn('Dealt with',cell1,active=i+1)
    self.listctrl.append_column(column)
    #column.set_sort_column_id(i+1)
    #column.pack_start(cell1, True)
    
    self.listctrl.get_selection().set_mode(gtk.SELECTION_SINGLE)
    for row in rows :
      row = row[:-1] + (False,)+(row[-1],)
      self.listmodel.get_model().append(row)
    self.listctrl.connect("cursor-changed", self.OnChange)
    sw = gtk.ScrolledWindow()
    w, h = default_size
    if len(rows) > 10 :
      sw.set_size_request(w, h)
    else :
      sw.set_size_request(w, 30 + (20 * len(rows)))
    sw.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
    box.pack_start(sw, False, False, 5)
    inside_vbox = gtk.VBox(False, 0)
    sw.add(self.listctrl)

  def OnChange (self, treeview) :
    import coot # import dependency
    selection = self.listctrl.get_selection()
    (model, tree_iter) = selection.get_selected()
    if tree_iter is not None :
      row = model[tree_iter]
      xyz = row[-1]
      if isinstance(xyz, tuple) and len(xyz) == 3 :
        set_rotation_centre(*xyz)
        set_zoom(30)
        graphics_draw()
  ##check box toggle
  def on_selected_toggled(self,renderer,path):
    if path is not None:
      model = self.listmodel.get_model()
      it = model.get_iter(path)
      #set toggle
      model[it][-2] = not model[it][-2]
      #set checkboxes for same residues in other lists
      try:
        chain = model[it][0]
        residue = model[it][1]
        for data_key in dict_residue_prop_objects:
          prop_obj = dict_residue_prop_objects[data_key]
          for row in prop_obj.listmodel.get_model():
            if data_key == 'probe':
              atom1_split = row[0].split()
              atom2_split = row[1].split()
              if atom1_split[0] == chain and atom1_split[1] == residue:
                row[-2] = model[it][-2]
              elif atom2_split[0] == chain and atom2_split[1] == residue:
                row[-2] = model[it][-2]
            elif row[0] == chain and row[1] == residue:
              row[-2] = model[it][-2]
      except IndexError: pass

  def check_chain_residue(self,chain,residue):
      pass
  
def show_probe_dots (show_dots, overlaps_only) :
  import coot # import dependency
  n_objects = number_of_generic_objects()
  sys.stdout.flush()
  if show_dots :
    for object_number in range(n_objects) :
      obj_name = generic_object_name(object_number)
      if overlaps_only and not obj_name in ["small overlap", "bad overlap"] :
        sys.stdout.flush()
        set_display_generic_object(object_number, 0)
      else :
        set_display_generic_object(object_number, 1)
  else :
    sys.stdout.flush()
    for object_number in range(n_objects) :
      set_display_generic_object(object_number, 0)

def load_pkl (file_name) :
  pkl = open(file_name, "rb")
  data = cPickle.load(pkl)
  pkl.close()
  return data
data = {}
data['jpred'] = []
data['probe'] = [(' A 986  GLU  N  ', ' A 986  GLU  OE1', -0.693, (146.424, 130.428, 158.974)), (' B 986  GLU  N  ', ' B 986  GLU  OE1', -0.682, (125.638, 129.25, 158.872)), (' C 986  GLU  N  ', ' C 986  GLU  OE1', -0.676, (134.959, 148.02, 158.91)), (' B 376  THR HG22', ' B 435  ALA  HB3', -0.646, (147.25, 141.218, 181.887)), (' C 376  THR HG22', ' C 435  ALA  HB3', -0.638, (134.187, 122.971, 181.386)), (' A 376  THR HG22', ' A 435  ALA  HB3', -0.634, (125.281, 143.19, 181.803)), (' A 457  ARG  NH1', ' A 459  SER  OG ', -0.622, (109.239, 124.053, 173.319)), (' C 457  ARG  NH1', ' C 459  SER  OG ', -0.621, (159.543, 119.223, 173.261)), (' C 342  PHE  HE1', ' C 434  ILE HG21', -0.618, (132.15, 115.501, 180.41)), (' B 457  ARG  NH1', ' B 459  SER  OG ', -0.617, (138.967, 165.009, 173.474)), (' B 342  PHE  HE1', ' B 434  ILE HG21', -0.6, (155.205, 142.668, 180.511)), (' A 342  PHE  HE1', ' A 434  ILE HG21', -0.598, (120.551, 149.182, 180.117)), (' A 998  GLN  NE2', ' C1001  GLN  OE1', -0.594, (137.621, 140.512, 140.259)), (' B  91  TYR  OH ', ' B 191  GLU  OE2', -0.588, (154.506, 91.477, 148.159)), (' C 734  CYS  SG ', ' C 735  THR  N  ', -0.583, (136.197, 152.497, 140.67)), (' A 734  CYS  SG ', ' A 735  THR  N  ', -0.582, (150.064, 127.101, 140.64)), (' A  91  TYR  OH ', ' A 191  GLU  OE2', -0.579, (164.647, 174.131, 148.079)), (' B 734  CYS  SG ', ' B 735  THR  N  ', -0.575, (121.182, 127.805, 140.492)), (' C  91  TYR  OH ', ' C 191  GLU  OE2', -0.571, (88.072, 141.57, 148.031)), (' B1001  GLN  OE1', ' C 998  GLN  NE2', -0.564, (130.689, 134.985, 140.373)), (' C 226  LEU HD12', ' C 227  VAL HG23', -0.56, (92.788, 151.563, 159.974)), (' C 375  SER  N  ', ' C 435  ALA  O  ', -0.559, (131.055, 122.128, 183.864)), (' B 226  LEU HD12', ' B 227  VAL HG23', -0.556, (143.381, 90.747, 159.934)), (' A 375  SER  N  ', ' A 435  ALA  O  ', -0.555, (126.275, 146.828, 183.844)), (' A 226  LEU HD12', ' A 227  VAL HG23', -0.552, (170.292, 165.199, 159.792)), (' C 732  VAL HG22', ' C 854  LEU HD23', -0.547, (128.651, 151.435, 134.245)), (' A 457  ARG  NE ', ' A 467  ASP  OD1', -0.546, (108.791, 125.862, 177.123)), (' A 732  VAL HG22', ' A 854  LEU HD23', -0.544, (152.68, 133.789, 134.012)), (' A 809  SER  OG ', ' A 864  GLU  OE2', -0.54, (167.936, 135.799, 110.577)), (' A 442  ASP  OD2', ' A 451  TYR  OH ', -0.539, (114.138, 141.305, 191.762)), (' B 375  SER  N  ', ' B 435  ALA  O  ', -0.533, (149.798, 138.559, 183.78)), (' A1001  GLN  OE1', ' B 998  GLN  NE2', -0.533, (138.824, 131.64, 140.218)), (' B 732  VAL HG22', ' B 854  LEU HD23', -0.533, (125.431, 122.257, 134.069)), (' B 809  SER  OG ', ' B 864  GLU  OE2', -0.532, (119.611, 108.026, 110.498)), (' C 981  ASP  N  ', ' C 984  GLU  OE2', -0.524, (130.611, 149.954, 164.354)), (' C 442  ASP  OD2', ' C 451  TYR  OH ', -0.522, (141.85, 114.244, 191.8)), (' C 457  ARG  NE ', ' C 467  ASP  OD1', -0.516, (157.964, 117.484, 177.194)), (' B 981  ASP  N  ', ' B 984  GLU  OE2', -0.515, (125.873, 124.574, 164.245)), (' A 981  ASP  N  ', ' A 984  GLU  OE2', -0.512, (150.515, 133.038, 164.271)), (' B1007  GLN  OE1', ' B1010  ARG  NH1', -0.512, (133.626, 124.568, 127.043)), (' B 442  ASP  OD2', ' B 451  TYR  OH ', -0.511, (151.169, 151.822, 191.887)), (' C1007  GLN  OE1', ' C1010  ARG  NH1', -0.511, (127.346, 143.142, 127.026)), (' C 746  SER  O  ', ' C 750  LEU HD12', -0.511, (140.375, 153.152, 147.901)), (' B 457  ARG  NE ', ' B 467  ASP  OD1', -0.509, (140.583, 164.286, 177.126)), (' C 809  SER  OG ', ' C 864  GLU  OE2', -0.507, (119.64, 163.833, 110.527)), (' B 746  SER  O  ', ' B 750  LEU HD12', -0.506, (118.442, 131.246, 147.831)), (' A 746  SER  O  ', ' A 750  LEU HD12', -0.505, (148.217, 123.559, 148.02)), (' A 403  ARG  NH1', ' A 505  TYR  O  ', -0.503, (122.857, 133.761, 193.26)), (' A1007  GLN  OE1', ' A1010  ARG  NH1', -0.502, (146.738, 139.198, 127.264)), (' C 403  ARG  NH1', ' C 505  TYR  O  ', -0.498, (144.028, 125.547, 193.316)), (' B 430  THR  OG1', ' B 515  PHE  O  ', -0.498, (153.028, 146.564, 165.058)), (' B 807  LYS  O  ', ' B 810  LYS  NZ ', -0.497, (117.328, 102.194, 105.531)), (' B 201  PHE  CD1', ' B 203  ILE HD11', -0.496, (147.997, 94.886, 162.943)), (' B 787  THR  OG1', ' B 791  LYS  NZ ', -0.495, (120.176, 108.85, 93.646)), (' A  87  ASN  N  ', ' A  87  ASN  OD1', -0.494, (153.484, 174.353, 159.69)), (' A 201  PHE  CD1', ' A 203  ILE HD11', -0.492, (165.062, 166.995, 162.936)), (' C 787  THR  OG1', ' C 791  LYS  NZ ', -0.492, (120.181, 162.79, 93.731)), (' B 979  ARG  NH1', ' C 381  GLY  O  ', -0.491, (132.386, 119.554, 162.722)), (' C  87  ASN  N  ', ' C  87  ASN  OD1', -0.49, (93.555, 131.577, 159.311)), (' A 982  PRO  O  ', ' A 986  GLU  OE1', -0.49, (147.165, 129.984, 160.615)), (' B 490  PHE  CE2', ' B 492  LEU  HB2', -0.49, (140.414, 166.058, 188.458)), (' A 787  THR  OG1', ' A 791  LYS  NZ ', -0.489, (167.094, 135.786, 93.768)), (' C 490  PHE  CE2', ' C 492  LEU  HB2', -0.489, (159.649, 116.714, 188.423)), (' A 490  PHE  CE2', ' A 492  LEU  HB2', -0.488, (107.497, 125.138, 188.232)), (' C 201  PHE  CD1', ' C 203  ILE HD11', -0.488, (94.387, 145.188, 163.15)), (' C 807  LYS  O  ', ' C 810  LYS  NZ ', -0.487, (115.865, 168.62, 105.615)), (' C 982  PRO  O  ', ' C 986  GLU  OE1', -0.487, (135.367, 148.573, 160.249)), (' C 226  LEU  CD1', ' C 227  VAL HG23', -0.485, (92.484, 151.35, 159.605)), (' A 430  THR  OG1', ' A 515  PHE  O  ', -0.485, (117.857, 145.473, 165.01)), (' A 226  LEU  CD1', ' A 227  VAL HG23', -0.484, (171.062, 165.339, 160.008)), (' B  87  ASN  N  ', ' B  87  ASN  OD1', -0.482, (160.196, 101.21, 159.81)), (' B 226  LEU  CD1', ' B 227  VAL HG23', -0.48, (143.77, 90.447, 159.639)), (' A 454  ARG  NH2', ' A 467  ASP  O  ', -0.478, (107.318, 128.025, 181.08)), (' B 982  PRO  O  ', ' B 986  GLU  OE1', -0.477, (124.855, 129.027, 160.678)), (' C 898  MET  SD ', ' C1046  MET  HE3', -0.477, (122.721, 147.839, 88.408)), (' A 898  MET  SD ', ' A1046  MET  HE3', -0.476, (152.71, 141.176, 88.41)), (' B 403  ARG  NH1', ' B 505  TYR  O  ', -0.475, (140.518, 148.135, 193.37)), (' B 898  MET  SD ', ' B1046  MET  HE3', -0.474, (131.807, 118.476, 88.868)), (' C 454  ARG  NH2', ' C 467  ASP  O  ', -0.474, (156.811, 114.942, 181.183)), (' B 454  ARG  NH2', ' B 467  ASP  O  ', -0.473, (143.325, 164.507, 181.162)), (' B 946  ASP  OD1', ' B 947  VAL  N  ', -0.472, (137.881, 119.207, 119.099)), (' C 946  ASP  OD1', ' C 947  VAL  N  ', -0.47, (120.466, 142.132, 119.221)), (' C 430  THR  OG1', ' C 515  PHE  O  ', -0.468, (136.175, 115.516, 165.11)), (' A 165  ASN  OD1', ' A1321  NAG  N2 ', -0.467, (161.278, 168.557, 185.041)), (' A 946  ASP  OD1', ' A 947  VAL  N  ', -0.467, (149.434, 145.814, 119.396)), (' C 165  ASN  OD1', ' C1321  NAG  N2 ', -0.467, (94.603, 141.303, 184.961)), (' C1125  VAL HG13', ' C1128  ILE  HB ', -0.467, (130.372, 113.52, 70.868)), (' A1125  VAL HG13', ' A1128  ILE  HB ', -0.466, (119.356, 151.088, 71.081)), (' B 165  ASN  OD1', ' B1321  NAG  N2 ', -0.463, (151.243, 97.349, 185.075)), (' B 403  ARG  HG2', ' B 495  TYR  CE2', -0.463, (140.837, 151.346, 188.578)), (' B1125  VAL HG13', ' B1128  ILE  HB ', -0.461, (157.506, 142.482, 70.982)), (' C 494  SER  OG ', ' C 495  TYR  N  ', -0.459, (150.959, 120.054, 192.811)), (' C 435  ALA  HB2', ' C 510  VAL HG12', -0.456, (137.0, 121.548, 182.406)), (' B 494  SER  OG ', ' B 495  TYR  N  ', -0.455, (142.001, 157.138, 192.989)), (' A 403  ARG  HG2', ' A 495  TYR  CE2', -0.453, (119.773, 132.711, 188.522)), (' A 435  ALA  HB2', ' A 510  VAL HG12', -0.452, (123.038, 142.203, 182.08)), (' A 494  SER  OG ', ' A 495  TYR  N  ', -0.448, (114.277, 130.612, 193.193)), (' B 280  ASN  ND2', ' B 284  THR  OG1', -0.448, (139.572, 93.16, 138.435)), (' B 138  ASP  N  ', ' B 138  ASP  OD2', -0.447, (167.792, 83.845, 171.243)), (' B 435  ALA  HB2', ' B 510  VAL HG12', -0.446, (147.571, 144.081, 182.221)), (' C1309  NAG  H3 ', ' C1309  NAG  H83', -0.445, (108.8, 103.736, 128.48)), (' A1309  NAG  H3 ', ' A1309  NAG  H83', -0.445, (121.465, 175.149, 128.531)), (' B 761  ARG  NE ', ' C 953  GLN  OE1', -0.444, (119.83, 138.683, 130.133)), (' A 280  ASN  ND2', ' A 284  THR  OG1', -0.444, (170.514, 160.607, 138.83)), (' C 403  ARG  HG2', ' C 495  TYR  CE2', -0.443, (146.568, 123.556, 188.504)), (' B1309  NAG  H3 ', ' B1309  NAG  H83', -0.443, (176.643, 128.458, 128.358)), (' B 454  ARG  NH2', ' B 469  SER  O  ', -0.441, (142.343, 165.89, 181.941)), (' C 280  ASN  ND2', ' C 284  THR  OG1', -0.44, (96.818, 153.821, 138.434)), (' C 138  ASP  N  ', ' C 138  ASP  OD2', -0.439, (74.678, 133.663, 171.355)), (' B 133  PHE  HB3', ' B 135  PHE  CE1', -0.437, (157.88, 88.61, 175.227)), (' A 138  ASP  N  ', ' A 138  ASP  OD2', -0.436, (164.568, 189.766, 171.034)), (' C 118  LEU  CD2', ' C 120  VAL HG23', -0.436, (83.301, 145.749, 169.309)), (' A 454  ARG  HG3', ' A 491  PRO  HB2', -0.436, (110.501, 123.922, 183.351)), (' A 358  ILE  HB ', ' A 395  VAL HG13', -0.435, (111.814, 151.531, 172.841)), (' B 358  ILE  HB ', ' B 395  VAL HG13', -0.434, (161.327, 148.676, 172.894)), (' B 394  ASN  N  ', ' B 516  GLU  OE2', -0.432, (160.642, 150.598, 165.639)), (' C 420  ASP  OD1', ' C 421  TYR  N  ', -0.432, (153.485, 123.825, 177.112)), (' C 358  ILE  HB ', ' C 395  VAL HG13', -0.432, (134.342, 106.916, 173.215)), (' B 118  LEU  CD2', ' B 120  VAL HG23', -0.431, (153.14, 85.455, 169.281)), (' A 118  LEU  CD2', ' A 120  VAL HG23', -0.43, (170.557, 176.448, 169.297)), (' A 517  LEU HD11', ' C 975  ASP  OD2', -0.429, (120.235, 150.721, 158.316)), (' C 133  PHE  HB3', ' C 135  PHE  CE1', -0.429, (84.025, 140.22, 175.507)), (' A 557  LYS  NZ ', ' A 574  ASP  OD2', -0.429, (110.44, 159.894, 142.126)), (' A1125  VAL HG23', ' C 913  TYR  HB3', -0.428, (119.052, 148.92, 74.957)), (' B 420  ASP  OD1', ' B 421  TYR  N  ', -0.428, (137.253, 157.119, 176.91)), (' C 393  THR  OG1', ' C 516  GLU  OE2', -0.426, (136.77, 106.923, 164.294)), (' C 454  ARG  HG3', ' C 491  PRO  HB2', -0.424, (158.448, 119.739, 183.032)), (' B 454  ARG  HG3', ' B 491  PRO  HB2', -0.423, (138.298, 163.487, 182.985)), (' A 133  PHE  HB3', ' A 135  PHE  CE1', -0.423, (165.393, 178.65, 175.071)), (' A 589  PRO  HD2', ' C 851  PHE  CD2', -0.421, (120.515, 161.202, 140.705)), (' C 557  LYS  NZ ', ' C 574  ASP  OD2', -0.42, (127.597, 101.919, 142.272)), (' A 420  ASP  OD1', ' A 421  TYR  N  ', -0.42, (116.888, 126.196, 177.067)), (' A 349  SER  OG ', ' A 452  LEU  O  ', -0.418, (112.043, 133.119, 186.748)), (' C 118  LEU HD21', ' C 120  VAL HG23', -0.414, (83.105, 145.501, 169.803)), (' B 349  SER  OG ', ' B 452  LEU  O  ', -0.413, (144.834, 157.901, 186.829)), (' B 377  PHE  CD1', ' B 434  ILE HD12', -0.413, (153.682, 139.236, 177.758)), (' A 454  ARG  NH2', ' A 469  SER  O  ', -0.412, (106.515, 126.437, 182.029)), (' C 377  PHE  CD1', ' C 434  ILE HD12', -0.412, (129.798, 118.593, 177.822)), (' A 118  LEU HD21', ' A 120  VAL HG23', -0.41, (170.616, 176.568, 169.353)), (' B 913  TYR  HB3', ' C1125  VAL HG23', -0.41, (132.777, 114.762, 75.106)), (' C 349  SER  OG ', ' C 452  LEU  O  ', -0.41, (150.086, 116.566, 186.916)), (' A 807  LYS  O  ', ' A 810  LYS  NZ ', -0.409, (173.831, 136.405, 105.707)), (' A 381  GLY  O  ', ' C 979  ARG  NH1', -0.406, (123.191, 147.029, 162.917)), (' B 557  LYS  NZ ', ' B 574  ASP  OD2', -0.405, (169.149, 145.6, 142.381)), (' A 377  PHE  CD1', ' A 434  ILE HD12', -0.405, (123.92, 149.55, 177.796)), (' B 118  LEU HD21', ' B 120  VAL HG23', -0.404, (153.53, 85.47, 169.767)), (' C 366  SER  O  ', ' C 370  ASN  ND2', -0.404, (120.491, 115.016, 178.42)), (' B 600  PRO  HD3', ' B 688  ILE HD11', -0.403, (160.129, 108.904, 122.495)), (' C 600  PRO  HD3', ' C 688  ILE HD11', -0.402, (100.057, 127.807, 122.349)), (' A 900  TYR  HE1', ' B1103  ARG  HE ', -0.401, (148.387, 133.488, 80.023)), (' A 366  SER  O  ', ' A 370  ASN  ND2', -0.4, (125.487, 159.484, 178.347)), (' A 600  PRO  HD3', ' A 688  ILE HD11', -0.4, (146.82, 170.779, 122.416)), (' B 438  SER  OG ', ' B 509  ARG  HG3', -0.4, (150.7, 145.837, 189.159))]
data['cbeta'] = [('A', ' 429 ', 'PHE', ' ', 0.29079923125051216, (119.337, 139.611, 167.86399999999995)), ('A', ' 617 ', 'CYS', ' ', 0.2768179988162677, (130.51, 174.46299999999997, 131.611)), ('A', ' 986 ', 'GLU', ' ', 0.3184255319497716, (145.322, 129.376, 157.48099999999994)), ('B', ' 429 ', 'PHE', ' ', 0.2895046822671753, (147.243, 148.178, 167.881)), ('B', ' 617 ', 'CYS', ' ', 0.27660094994640927, (171.85300000000007, 120.98799999999997, 131.703)), ('B', ' 986 ', 'GLU', ' ', 0.31786970290152305, (125.36400000000003, 130.846, 157.45499999999996)), ('C', ' 429 ', 'PHE', ' ', 0.2894522698699639, (140.736, 119.66099999999997, 167.882)), ('C', ' 617 ', 'CYS', ' ', 0.27666992843006677, (104.965, 111.89799999999997, 131.635)), ('C', ' 986 ', 'GLU', ' ', 0.3189014261769018, (136.601, 147.28, 157.49699999999999))]
data['smoc'] = [('A', 27, u'ALA', 0.9067600311579391, (157.75, 189.32200000000003, 150.38600000000002)), ('A', 28, u'TYR', 0.8989955382950097, (156.92200000000003, 186.137, 148.44299999999998)), ('A', 40, u'ASP', 0.8900315854618316, (162.483, 156.632, 151.994)), ('A', 58, u'PHE', 0.8794344222252367, (155.29899999999998, 173.05800000000002, 142.965)), ('A', 91, u'TYR', 0.8447633969574015, (160.47299999999998, 173.701, 153.91899999999998)), ('A', 104, u'TRP', 0.865506822701777, (166.504, 177.20999999999998, 164.61299999999997)), ('A', 106, u'PHE', 0.8628061361929604, (160.935, 174.762, 167.32200000000003)), ('A', 115, u'GLN', 0.8466039998122319, (159.906, 170.537, 175.086)), ('A', 121, u'ASN', 0.8278642407953933, (175.58200000000002, 175.71099999999998, 164.253)), ('A', 173, u'GLN', 0.8040452303532923, (182.68, 167.124, 166.342)), ('A', 175, u'PHE', 0.7992688477722149, (185.212, 172.12, 163.24399999999997)), ('A', 193, u'VAL', 0.8168799351141566, (163.13, 169.784, 155.123)), ('A', 198, u'ASP', 0.8295850154926123, (154.25, 159.94899999999998, 164.76899999999998)), ('A', 209, u'PRO', 0.8631619167897053, (177.55100000000002, 175.758, 145.33700000000002)), ('A', 211, u'ASN', 0.8206838551021056, (177.324, 182.055, 142.265)), ('A', 214, u'ARG', 0.8063992078492762, (168.657, 185.925, 142.92700000000002)), ('A', 237, u'ARG', 0.9004475166204758, (155.66899999999998, 177.403, 166.129)), ('A', 244, u'LEU', 0.8200746582259237, (174.52, 189.975, 164.256)), ('A', 266, u'TYR', 0.9063708420653003, (162.89600000000002, 181.291, 152.477)), ('A', 291, u'CYS', 0.7887043665402604, (150.455, 165.266, 140.353)), ('A', 295, u'PRO', 0.7948271322561984, (145.54899999999998, 168.55100000000002, 134.251)), ('A', 299, u'THR', 0.7865362033926135, (147.71499999999997, 162.941, 132.706)), ('A', 309, u'GLU', 0.8038167584444842, (151.379, 161.053, 123.215)), ('A', 324, u'GLU', 0.8940697413235327, (125.71000000000001, 172.016, 154.067)), ('A', 328, u'ARG', 0.8935190635033389, (115.203, 166.47899999999998, 159.436)), ('A', 330, u'PRO', 0.8269144565511982, (109.473, 164.42100000000002, 163.07)), ('A', 337, u'PRO', 0.883921064137338, (110.268, 156.354, 179.448)), ('A', 346, u'ARG', 0.8439707063650561, (111.316, 144.76299999999998, 190.756)), ('A', 357, u'ARG', 0.9157352203545077, (107.44400000000002, 148.69299999999998, 173.903)), ('A', 369, u'TYR', 0.8398886139282198, (125.736, 154.95100000000002, 178.101)), ('A', 380, u'TYR', 0.6773360593904962, (125.283, 143.718, 168.283)), ('A', 386, u'LYS', 0.7657758125979226, (126.587, 155.82800000000003, 166.789)), ('A', 389, u'ASP', 0.6898050643809922, (121.758, 159.417, 164.485)), ('A', 398, u'ASP', 0.8438494045003283, (113.09100000000001, 142.85500000000002, 177.48800000000003)), ('A', 408, u'ARG', 0.8353978010833326, (127.271, 134.56, 178.77899999999997)), ('A', 413, u'GLY', 0.6717278273013249, (123.972, 132.034, 168.499)), ('A', 415, u'THR', 0.8083626713133966, (122.99400000000001, 127.93400000000001, 173.936)), ('A', 416, u'GLY', 0.8742247180167839, (122.425, 126.81, 177.49800000000002)), ('A', 446, u'GLY', 0.8630454638963825, (118.71100000000001, 133.556, 203.503)), ('A', 456, u'PHE', 0.8557220199433362, (113.654, 120.918, 181.661)), ('A', 477, u'SER', 0.8376332407594678, (106.99000000000001, 107.527, 179.129)), ('A', 489, u'TYR', 0.8468556660235241, (109.209, 116.30799999999999, 187.925)), ('A', 492, u'LEU', 0.8758575312280268, (110.084, 125.221, 187.60299999999998)), ('A', 517, u'LEU', 0.8181056275602268, (116.398, 148.924, 161.047)), ('A', 519, u'HIS', 0.8330281235148316, (112.906, 149.37, 156.853)), ('A', 534, u'VAL', 0.9068818758224388, (117.584, 174.2, 151.375)), ('A', 538, u'CYS', 0.8747092632592443, (123.812, 169.497, 146.536)), ('A', 546, u'LEU', 0.8186379503390618, (117.728, 157.701, 155.978)), ('A', 547, u'THR', 0.8961267633152671, (120.74600000000001, 159.584, 154.638)), ('A', 554, u'GLU', 0.8897607000288117, (110.02199999999999, 170.283, 144.285)), ('A', 557, u'LYS', 0.8916100677781766, (104.613, 163.096, 142.124)), ('A', 562, u'PHE', 0.8797513203102995, (100.35, 156.46800000000002, 153.445)), ('A', 563, u'GLN', 0.8926852392060846, (103.363, 156.631, 151.107)), ('A', 574, u'ASP', 0.8521860339086892, (113.79700000000001, 158.873, 143.93)), ('A', 586, u'ASP', 0.8537667438658144, (112.624, 164.74599999999998, 144.354)), ('A', 590, u'CYS', 0.8629795865589848, (124.395, 166.136, 142.292)), ('A', 598, u'ILE', 0.8053574274508151, (142.844, 166.595, 125.41900000000001)), ('A', 653, u'ALA', 0.7970566446748476, (139.657, 174.765, 123.304)), ('A', 654, u'GLU', 0.8699434754165805, (138.71699999999998, 177.538, 120.887)), ('A', 662, u'CYS', 0.7922691692757805, (139.524, 164.523, 112.768)), ('A', 671, u'CYS', 0.782018930561694, (137.448, 166.694, 117.17799999999998)), ('A', 685, u'SER', 0.8618833224785436, (149.917, 181.972, 117.63499999999999)), ('A', 708, u'ILE', 0.7790393159364225, (131.335, 158.259, 80.366)), ('A', 710, u'ILE', 0.7638596321077339, (137.409, 156.464, 80.722)), ('A', 725, u'VAL', 0.5911478606435329, (149.55800000000002, 136.672, 113.636)), ('A', 729, u'LYS', 0.7566067237380241, (153.25, 132.791, 124.556)), ('A', 734, u'CYS', 0.6675023322759635, (149.899, 129.093, 139.76)), ('A', 741, u'ASP', 0.8396861741801036, (158.248, 128.6, 148.095)), ('A', 761, u'ARG', 0.7961194085608383, (145.795, 124.131, 130.618)), ('A', 776, u'GLU', 0.7519031009937933, (148.835, 128.298, 109.06)), ('A', 796, u'PHE', 0.8092672152541515, (161.266, 145.0, 88.18299999999999)), ('A', 818, u'LEU', 0.7649011624310013, (160.465, 146.286, 110.43100000000001)), ('A', 861, u'LEU', 0.7931362634180636, (159.41299999999998, 128.80200000000002, 114.473)), ('A', 872, u'ALA', 0.7502653056414993, (160.076, 130.722, 99.415)), ('A', 886, u'ALA', 0.7278371663014267, (147.73, 124.79100000000001, 93.16499999999999)), ('A', 900, u'TYR', 0.7556580425776708, (147.975, 137.59, 83.17499999999998)), ('A', 906, u'GLY', 0.7829578735276617, (139.985, 143.627, 82.477)), ('A', 934, u'LEU', 0.7899686444117561, (158.933, 152.42600000000002, 107.113)), ('A', 958, u'LEU', 0.6966416573029441, (149.687, 140.767, 137.258)), ('A', 966, u'PHE', 0.7538003462717242, (143.659, 142.166, 149.626)), ('A', 973, u'LEU', 0.7530737052630231, (153.627, 135.96200000000002, 152.515)), ('A', 986, u'GLU', 0.8312701066092845, (145.93200000000002, 130.82800000000003, 157.529)), ('A', 990, u'ASP', 0.7760532863268184, (143.597, 132.665, 152.57299999999998)), ('A', 1001, u'GLN', 0.7373002825784591, (141.80200000000002, 134.242, 136.508)), ('A', 1008, u'LEU', 0.7459963739029826, (141.767, 133.974, 126.013)), ('A', 1009, u'ILE', 0.7577911023830143, (139.755, 136.84, 124.588)), ('A', 1026, u'SER', 0.6834503279436969, (146.226, 132.29, 99.95100000000001)), ('A', 1027, u'GLU', 0.6765858665296558, (144.038, 134.653, 97.90700000000001)), ('A', 1035, u'ARG', 0.7527893183910047, (137.55100000000002, 140.671, 96.21300000000001)), ('A', 1045, u'LEU', 0.7287323728372442, (147.668, 142.504, 90.793)), ('A', 1049, u'PRO', 0.690022677992407, (154.629, 138.942, 102.20100000000001)), ('A', 1068, u'GLU', 0.8191347075086205, (140.455, 160.44, 82.94500000000001)), ('A', 1085, u'PHE', 0.8310347396358015, (126.53, 145.819, 71.133)), ('A', 1090, u'VAL', 0.7517922768720815, (131.731, 150.523, 75.383)), ('A', 1116, u'THR', 0.8681433558626226, (130.414, 143.788, 68.381)), ('A', 1119, u'SER', 0.8680583551171849, (120.752, 141.004, 68.55199999999999)), ('A', 1134, u'TYR', 0.8889961702443816, (132.806, 148.698, 59.306)), ('A', 1301, u'NAG', 0.8340766079893588, (150.05700000000002, 180.754, 143.44899999999998)), ('A', 1307, u'NAG', 0.8045630088986894, (116.98100000000001, 157.065, 182.829)), ('A', 1308, u'NAG', 0.788022215122918, (157.883, 166.762, 115.329)), ('A', 1309, u'NAG', 0.8208338127041621, (122.44600000000001, 173.45000000000002, 128.13299999999998)), ('A', 1310, u'NAG', 0.809616326540668, (135.30800000000002, 183.015, 113.86999999999999)), ('B', 80, u'ASP', 0.7848380416947868, (168.995, 83.051, 163.788)), ('B', 91, u'TYR', 0.8618780582644144, (156.08700000000002, 95.476, 153.98800000000003)), ('B', 92, u'PHE', 0.8694464156479801, (156.508, 91.827, 154.911)), ('B', 96, u'GLU', 0.8383546232185174, (155.72, 78.891, 152.467)), ('B', 97, u'LYS', 0.8163538522903884, (155.118, 75.215, 151.88500000000002)), ('B', 106, u'PHE', 0.8793424430235078, (156.73999999999998, 94.551, 167.393)), ('B', 110, u'LEU', 0.8238665612142496, (161.3, 94.577, 174.038)), ('B', 121, u'ASN', 0.8499926823752129, (150.20999999999998, 81.408, 164.316)), ('B', 135, u'PHE', 0.777018772986782, (162.24299999999997, 87.936, 175.425)), ('B', 136, u'CYS', 0.731876038625502, (165.187, 85.55499999999999, 175.0)), ('B', 143, u'VAL', 0.751089639334249, (158.284, 71.475, 166.166)), ('B', 169, u'GLU', 0.8378177765838136, (143.912, 89.801, 173.991)), ('B', 180, u'GLU', 0.8061765742755321, (157.334, 69.545, 158.14299999999997)), ('B', 183, u'GLN', 0.7856957924331293, (163.077, 72.222, 151.288)), ('B', 198, u'ASP', 0.8295836083713527, (147.296, 107.77199999999999, 164.81)), ('B', 200, u'TYR', 0.8648248177325476, (144.907, 101.995, 164.318)), ('B', 201, u'PHE', 0.8851361279450767, (147.252, 99.10799999999999, 163.563)), ('B', 218, u'GLN', 0.9031711824257721, (156.676, 89.31400000000001, 139.10299999999998)), ('B', 222, u'ALA', 0.8786211166781238, (146.42200000000003, 93.735, 145.517)), ('B', 262, u'ALA', 0.8041517531077522, (164.27399999999997, 77.113, 152.736)), ('B', 281, u'GLU', 0.8867910074240114, (134.809, 96.066, 136.183)), ('B', 291, u'CYS', 0.8217891346671939, (153.859, 108.368, 140.409)), ('B', 299, u'THR', 0.8526337491914402, (153.24399999999997, 111.9, 132.758)), ('B', 309, u'GLU', 0.7888567842727685, (149.79399999999998, 109.67499999999998, 123.26)), ('B', 330, u'PRO', 0.8432117444726538, (173.662, 144.23999999999998, 163.153)), ('B', 333, u'THR', 0.8363092547647029, (175.796, 143.98600000000002, 171.91299999999998)), ('B', 365, u'TYR', 0.8772395918026065, (161.61299999999997, 138.039, 174.73299999999998)), ('B', 369, u'TYR', 0.8434461145778566, (157.267, 134.945, 178.15)), ('B', 373, u'SER', 0.8672490811405486, (154.464, 135.806, 186.92200000000003)), ('B', 380, u'TYR', 0.64022388614172, (147.80700000000002, 140.974, 168.306)), ('B', 389, u'ASP', 0.6536887287578521, (163.16, 136.132, 164.548)), ('B', 390, u'LEU', 0.7827882603428516, (161.617, 139.57, 163.83)), ('B', 398, u'ASP', 0.8608416116619538, (153.16299999999998, 151.955, 177.518)), ('B', 408, u'ARG', 0.7752730116338913, (138.863, 143.86200000000002, 178.778)), ('B', 415, u'THR', 0.789626467422178, (135.295, 150.88500000000002, 173.923)), ('B', 423, u'TYR', 0.8791684834905638, (143.82000000000002, 155.012, 176.67299999999997)), ('B', 442, u'ASP', 0.8667782299769012, (150.304, 149.333, 194.539)), ('B', 446, u'GLY', 0.81528899499186, (142.236, 151.781, 203.506)), ('B', 451, u'TYR', 0.8586767456328743, (145.789, 156.51, 190.731)), ('B', 489, u'TYR', 0.8382236646472496, (132.134, 168.654, 187.894)), ('B', 515, u'PHE', 0.8482111739557342, (155.7, 146.77299999999997, 167.654)), ('B', 518, u'LEU', 0.8010266361069988, (160.141, 146.025, 159.221)), ('B', 521, u'PRO', 0.8487693362872145, (165.795, 149.55800000000002, 158.905)), ('B', 529, u'LYS', 0.889403802634249, (173.85100000000003, 135.162, 166.875)), ('B', 532, u'ASN', 0.9084828235997119, (178.833, 133.969, 157.985)), ('B', 538, u'CYS', 0.874496482576262, (170.88800000000003, 129.282, 146.621)), ('B', 546, u'LEU', 0.8379928078273385, (163.722, 140.474, 156.039)), ('B', 554, u'GLU', 0.8647609566101117, (178.5, 140.81, 144.38200000000003)), ('B', 557, u'LYS', 0.8948856451899261, (175.009, 149.096, 142.208)), ('B', 562, u'PHE', 0.9148506583288017, (171.39200000000002, 156.11899999999997, 153.516)), ('B', 574, u'ASP', 0.8458391575537478, (166.73899999999998, 143.277, 143.997)), ('B', 583, u'GLU', 0.9040902079277878, (178.77399999999997, 145.904, 150.605)), ('B', 586, u'ASP', 0.843511583017877, (172.405, 141.342, 144.436)), ('B', 597, u'VAL', 0.7796975417231392, (158.38800000000003, 115.059, 129.172)), ('B', 603, u'ASN', 0.8559440739296834, (152.313, 101.702, 121.897)), ('B', 611, u'LEU', 0.7935514998886141, (163.248, 119.06400000000001, 128.918)), ('B', 653, u'ALA', 0.8268567666269256, (167.539, 112.922, 123.391)), ('B', 670, u'ILE', 0.8291001050542843, (163.903, 121.959, 117.548)), ('B', 671, u'CYS', 0.8139486711793611, (161.685, 118.884, 117.24700000000001)), ('B', 703, u'TYR', 0.8446744165046028, (163.576, 130.44299999999998, 85.72)), ('B', 708, u'ILE', 0.8314811350000708, (157.55200000000002, 128.38600000000002, 80.41900000000001)), ('B', 714, u'PHE', 0.8389808301111432, (146.24899999999997, 116.46600000000001, 85.196)), ('B', 721, u'GLU', 0.6943375473724318, (137.94899999999998, 119.34100000000001, 105.276)), ('B', 725, u'VAL', 0.6180508182029746, (129.651, 123.49300000000001, 113.624)), ('B', 737, u'TYR', 0.7599623214853575, (124.562, 122.583, 141.788)), ('B', 792, u'ASP', 0.8683934111114262, (123.54100000000001, 107.666, 85.13799999999999)), ('B', 796, u'PHE', 0.8499253271363038, (131.032, 109.17199999999998, 88.18299999999999)), ('B', 872, u'ALA', 0.8046637108079356, (119.257, 117.37899999999999, 99.38199999999999)), ('B', 883, u'THR', 0.7826744171539289, (121.38799999999999, 126.726, 89.781)), ('B', 899, u'ALA', 0.7184723538379211, (132.347, 121.133, 81.571)), ('B', 909, u'GLN', 0.7791686824603721, (135.52, 122.008, 78.14)), ('B', 920, u'ALA', 0.9110912723663414, (135.72899999999998, 109.49700000000001, 86.225)), ('B', 927, u'ILE', 0.8347150763151382, (136.92100000000002, 108.51700000000001, 96.73)), ('B', 934, u'LEU', 0.8315364816021424, (138.57899999999998, 107.46900000000001, 107.13199999999999)), ('B', 941, u'LEU', 0.7538420332084295, (138.815, 113.65599999999999, 112.82499999999999)), ('B', 966, u'PHE', 0.7723577622355806, (137.278, 125.854, 149.632)), ('B', 993, u'ILE', 0.6522344666330704, (128.748, 128.89200000000002, 147.978)), ('B', 1000, u'LEU', 0.7347884446840106, (130.376, 127.96100000000001, 137.622)), ('B', 1014, u'ILE', 0.6938254377803398, (132.518, 127.43900000000001, 117.333)), ('B', 1018, u'ALA', 0.6570300947973258, (130.19, 127.54100000000001, 111.787)), ('B', 1027, u'GLU', 0.6667449384913241, (130.71699999999998, 129.271, 97.895)), ('B', 1058, u'PHE', 0.7359423226924564, (133.52, 118.745, 102.978)), ('B', 1077, u'ILE', 0.823688793124591, (154.974, 137.578, 67.55499999999999)), ('B', 1088, u'GLU', 0.6477734718301799, (143.945, 133.093, 75.337)), ('B', 1114, u'ASP', 0.8566206790832894, (141.31, 134.186, 65.17599999999999)), ('B', 1125, u'VAL', 0.8169166962728841, (157.659, 144.99200000000002, 73.36999999999999)), ('B', 1134, u'TYR', 0.8807756050615413, (148.597, 131.905, 59.335)), ('B', 1136, u'PRO', 0.8564746977855708, (142.83700000000002, 130.73999999999998, 57.253)), ('B', 1301, u'NAG', 0.8417322229680829, (167.444, 100.932, 143.542)), ('B', 1307, u'NAG', 0.8209008938751511, (163.48200000000003, 141.455, 182.89000000000001)), ('B', 1309, u'NAG', 0.8634017785068334, (175.036, 128.46800000000002, 128.22899999999998)), ('B', 1310, u'NAG', 0.8301121815852618, (176.88000000000002, 112.532, 113.979)), ('B', 1311, u'NAG', 0.8652255923025914, (169.565, 135.08700000000002, 80.639)), ('C', 27, u'ALA', 0.8857910380152901, (78.475, 128.05700000000002, 150.411)), ('C', 36, u'VAL', 0.8658536831585095, (95.52799999999999, 142.629, 146.757)), ('C', 44, u'ARG', 0.8852510406999144, (106.505, 153.146, 142.842)), ('C', 53, u'ASP', 0.8209537622010703, (104.095, 138.523, 151.095)), ('C', 61, u'ASN', 0.8721564611644356, (87.38199999999999, 129.40200000000002, 147.27499999999998)), ('C', 91, u'TYR', 0.8552322362969322, (90.64, 138.228, 153.942)), ('C', 97, u'LYS', 0.833260156365849, (73.549, 149.151, 151.83)), ('C', 104, u'TRP', 0.8829509812564863, (84.586, 141.698, 164.636)), ('C', 117, u'LEU', 0.8681269498501772, (90.82, 142.359, 169.76999999999998)), ('C', 123, u'ALA', 0.8155202989177861, (77.421, 154.23299999999998, 163.253)), ('C', 138, u'ASP', 0.7406974608523312, (75.697, 134.547, 169.945)), ('C', 166, u'CYS', 0.8670318229352822, (92.815, 145.849, 179.23)), ('C', 173, u'GLN', 0.7992870075425954, (85.229, 160.75, 166.36100000000002)), ('C', 191, u'GLU', 0.8800373575959303, (87.003, 144.75, 151.48100000000002)), ('C', 193, u'VAL', 0.8626692732346561, (92.703, 142.489, 155.14499999999998)), ('C', 198, u'ASP', 0.8304480748577057, (105.663, 139.72, 164.79)), ('C', 199, u'GLY', 0.8883821285160958, (103.702, 142.38800000000003, 166.73999999999998)), ('C', 209, u'PRO', 0.8505154553825396, (80.316, 151.98700000000002, 145.359)), ('C', 218, u'GLN', 0.8906553307722372, (85.026, 140.80800000000002, 139.05200000000002)), ('C', 223, u'LEU', 0.8759002793905105, (93.45, 147.93, 149.231)), ('C', 224, u'GLU', 0.8583935672013563, (95.24600000000001, 150.768, 150.966)), ('C', 229, u'LEU', 0.8748683074457629, (97.989, 148.454, 165.907)), ('C', 237, u'ARG', 0.8773527561310915, (89.839, 132.21899999999997, 166.15200000000002)), ('C', 244, u'LEU', 0.7839244753118446, (69.524, 142.254, 164.28)), ('C', 245, u'HIS', 0.7515461991525662, (66.144, 143.997, 164.37800000000001)), ('C', 270, u'LEU', 0.8628730789781744, (95.757, 134.285, 152.766)), ('C', 281, u'GLU', 0.9168206650826566, (101.765, 156.423, 136.184)), ('C', 290, u'ASP', 0.8568862628221168, (99.596, 135.35800000000003, 141.10899999999998)), ('C', 291, u'CYS', 0.8118938107089619, (102.95400000000001, 133.771, 140.375)), ('C', 299, u'THR', 0.8253802713210777, (106.336, 132.56, 132.727)), ('C', 308, u'VAL', 0.8779527320580619, (104.67499999999998, 137.003, 126.705)), ('C', 309, u'GLU', 0.8064077441310288, (106.13799999999999, 136.676, 123.235)), ('C', 324, u'GLU', 0.9012899356301164, (109.488, 108.97, 154.091)), ('C', 330, u'PRO', 0.8283195058286035, (124.18599999999999, 98.71000000000001, 163.094)), ('C', 346, u'ARG', 0.8443073252299876, (140.29, 110.142, 190.777)), ('C', 369, u'TYR', 0.8638490453718286, (124.255, 117.531, 178.122)), ('C', 373, u'SER', 0.866830109779656, (126.38199999999999, 119.519, 186.901)), ('C', 380, u'TYR', 0.7291287144463509, (134.206, 122.756, 168.303)), ('C', 386, u'LYS', 0.79409183504894, (123.06700000000001, 117.82799999999999, 166.811)), ('C', 389, u'ASP', 0.7002804891403768, (122.37499999999999, 111.851, 164.507)), ('C', 390, u'LEU', 0.7989455506038263, (126.12499999999999, 111.48100000000001, 163.795)), ('C', 400, u'PHE', 0.8914757193598728, (142.61299999999997, 115.24600000000001, 183.632)), ('C', 404, u'GLY', 0.8325553018288497, (140.10399999999998, 126.807, 187.097)), ('C', 408, u'ARG', 0.8208727874313085, (141.14399999999998, 129.06, 178.796)), ('C', 413, u'GLY', 0.7701678258356833, (144.98000000000002, 127.465, 168.516)), ('C', 415, u'THR', 0.8443867758851026, (149.01899999999998, 128.67, 173.95200000000003)), ('C', 432, u'CYS', 0.865476907091194, (134.0, 118.998, 172.974)), ('C', 435, u'ALA', 0.8907871039265278, (134.314, 120.65299999999999, 182.73299999999998)), ('C', 465, u'GLU', 0.8799441742565629, (151.63299999999998, 113.959, 173.38400000000001)), ('C', 480, u'CYS', 0.8512937967068912, (172.815, 118.76, 184.742)), ('C', 489, u'TYR', 0.8439313866614351, (165.984, 122.55, 187.94)), ('C', 495, u'TYR', 0.8550410077266478, (149.49800000000002, 121.95, 193.08200000000002)), ('C', 499, u'PRO', 0.8525566283332363, (139.078, 124.18199999999999, 200.106)), ('C', 517, u'LEU', 0.8090116319218785, (134.142, 112.45700000000001, 161.068)), ('C', 518, u'LEU', 0.8095753855231713, (132.467, 109.55799999999999, 159.19299999999998)), ('C', 532, u'ASN', 0.9122972635314806, (112.71300000000001, 99.342, 157.909)), ('C', 541, u'PHE', 0.9220057997144051, (118.15199999999999, 107.831, 153.79399999999998)), ('C', 549, u'THR', 0.862100895858063, (118.15599999999999, 111.562, 149.11899999999997)), ('C', 554, u'GLU', 0.8896539645466119, (118.834, 96.25, 144.31)), ('C', 568, u'ASP', 0.8669472702309332, (131.099, 106.74300000000001, 140.64299999999997)), ('C', 571, u'ASP', 0.8621841884844648, (133.22899999999998, 110.49100000000001, 143.35800000000003)), ('C', 574, u'ASP', 0.8620284052118412, (126.82499999999999, 105.226, 143.953)), ('C', 583, u'GLU', 0.8474855618206223, (123.107, 93.46900000000001, 150.535)), ('C', 586, u'ASP', 0.8663058815248778, (122.327, 101.273, 144.37800000000001)), ('C', 598, u'ILE', 0.8022554492221599, (105.60799999999999, 126.513, 125.44100000000002)), ('C', 607, u'GLN', 0.8825256638157903, (96.732, 128.222, 126.397)), ('C', 614, u'ASP', 0.8601311236415323, (114.43400000000001, 114.488, 130.431)), ('C', 649, u'CYS', 0.8110283239958821, (107.259, 114.277, 128.284)), ('C', 650, u'LEU', 0.8536987086454593, (105.21600000000001, 117.133, 126.785)), ('C', 654, u'GLU', 0.8659584611540949, (98.196, 117.46600000000001, 120.912)), ('C', 662, u'CYS', 0.833510642741767, (109.061, 124.67299999999999, 112.79)), ('C', 671, u'CYS', 0.8491306434307431, (108.22, 121.79, 117.20100000000001)), ('C', 675, u'GLN', 0.8852734846712025, (96.776, 125.753, 114.977)), ('C', 698, u'GLU', 0.8840683345109577, (109.71000000000001, 117.224, 98.894)), ('C', 721, u'GLU', 0.7541954444069565, (120.44300000000001, 142.17299999999997, 105.283)), ('C', 725, u'VAL', 0.6997128314481118, (128.159, 147.292, 113.65199999999999)), ('C', 734, u'CYS', 0.6911615731301172, (134.554, 151.383, 139.77499999999998)), ('C', 745, u'CYS', 0.7256083018422655, (135.26299999999998, 152.17299999999997, 151.42000000000002)), ('C', 749, u'LEU', 0.6964968876916663, (139.283, 149.348, 147.74599999999998)), ('C', 763, u'LEU', 0.7586607037072224, (135.842, 149.333, 128.876)), ('C', 785, u'TYR', 0.7623901246257857, (129.503, 162.433, 96.615)), ('C', 814, u'ILE', 0.8039429504188612, (113.646, 153.877, 104.509)), ('C', 899, u'ALA', 0.7149901174857323, (124.821, 146.18200000000002, 81.592)), ('C', 907, u'VAL', 0.7514329576524476, (123.93400000000001, 137.32600000000002, 80.975)), ('C', 914, u'GLU', 0.7997718595362268, (115.65299999999999, 144.88600000000002, 75.548)), ('C', 946, u'ASP', 0.818990759062592, (118.392, 142.105, 120.65599999999999)), ('C', 953, u'GLN', 0.8173428013026408, (119.69, 144.14299999999997, 130.32100000000003)), ('C', 960, u'LYS', 0.7609476429747264, (120.353, 145.354, 140.662)), ('C', 966, u'PHE', 0.7773381576047197, (126.357, 139.442, 149.64399999999998)), ('C', 975, u'ASP', 0.838583507687548, (123.55799999999999, 152.727, 156.67899999999997)), ('C', 1005, u'THR', 0.7596175042602976, (133.899, 139.93200000000002, 130.727)), ('C', 1006, u'GLN', 0.7430055913814301, (130.472, 139.65, 129.122)), ('C', 1013, u'GLU', 0.7310414079873412, (130.95200000000003, 139.30200000000002, 118.468)), ('C', 1026, u'SER', 0.7335966262335156, (133.618, 146.596, 99.96700000000001)), ('C', 1027, u'GLU', 0.6734117847618811, (132.666, 143.52, 97.923)), ('C', 1047, u'SER', 0.7245542700958746, (123.76400000000001, 146.49200000000002, 96.87799999999999)), ('C', 1056, u'VAL', 0.7473123769292391, (123.927, 148.92000000000002, 108.806)), ('C', 1062, u'THR', 0.7380462546810989, (119.755, 139.995, 92.753)), ('C', 1068, u'GLU', 0.8188162923857482, (112.127, 127.51700000000001, 82.96600000000001)), ('C', 1085, u'PHE', 0.8479268194770616, (131.751, 122.77, 71.15199999999999)), ('C', 1088, u'GLU', 0.7223624080833566, (129.437, 130.181, 75.338)), ('C', 1091, u'PHE', 0.7920530982885765, (123.604, 123.17899999999999, 72.41700000000002)), ('C', 1114, u'ASP', 0.8547733482922182, (131.712, 131.94, 65.184)), ('C', 1122, u'CYS', 0.858389260528434, (133.425, 112.79400000000001, 66.689)), ('C', 1301, u'NAG', 0.8382000861353188, (89.74100000000001, 125.67999999999999, 143.474)), ('C', 1307, u'NAG', 0.8087379224406832, (126.803, 108.894, 182.85200000000003)), ('C', 1308, u'NAG', 0.8236641912464642, (97.93900000000001, 139.45000000000002, 115.35)), ('C', 1309, u'NAG', 0.827224808739763, (109.87499999999999, 105.422, 128.15800000000002)), ('C', 1310, u'NAG', 0.8262751656979518, (95.157, 111.773, 113.896)), ('C', 1311, u'NAG', 0.8591435619220087, (118.41400000000002, 106.95400000000001, 80.584))]
data['rota'] = [('A', ' 309 ', 'GLU', 0.010441334915026287, (151.379, 161.05299999999994, 123.21499999999997)), ('A', ' 400 ', 'PHE', 0.039745110699744964, (114.574, 140.198, 183.612)), ('A', ' 429 ', 'PHE', 0.0031427045637229395, (119.528, 140.288, 166.46199999999993)), ('A', ' 986 ', 'GLU', 0.0, (145.932, 130.828, 157.529)), ('B', ' 309 ', 'GLU', 0.010417445759884927, (149.794, 109.67499999999997, 123.25999999999998)), ('B', ' 400 ', 'PHE', 0.03962631672184892, (150.105, 152.01, 183.634)), ('B', ' 429 ', 'PHE', 0.0030703134444021317, (147.736, 147.672, 166.48)), ('B', ' 986 ', 'GLU', 0.0, (126.314, 129.588, 157.506)), ('C', ' 309 ', 'GLU', 0.010559088903196241, (106.138, 136.676, 123.235)), ('C', ' 400 ', 'PHE', 0.039478500400774455, (142.613, 115.24599999999998, 183.63199999999995)), ('C', ' 429 ', 'PHE', 0.003115748394383773, (140.055, 119.48799999999997, 166.48099999999994)), ('C', ' 986 ', 'GLU', 0.0, (135.038, 147.082, 157.54499999999996))]
data['clusters'] = [('A', '380', 1, 'Bond angle:N:CA:CB\nsmoc Outlier', (125.283, 143.718, 168.283)), ('A', '424', 1, 'Bond length:C', (116.088, 132.52700000000002, 173.05)), ('A', '425', 1, 'Bond length:N', (117.43, 135.33700000000002, 170.829)), ('A', '429', 1, 'Rotamer\nC-beta\nBond angle:CA:CB:CG\nBond angle:C:CA:CB', (119.52799999999999, 140.288, 166.46200000000002)), ('A', '430', 1, 'backbone clash', (117.857, 145.473, 165.01)), ('A', '464', 1, 'cablam Outlier', (111.3, 135.6, 171.7)), ('A', '515', 1, 'backbone clash', (117.857, 145.473, 165.01)), ('A', '517', 1, 'smoc Outlier', (116.398, 148.924, 161.047)), ('A', '518', 1, 'Ramachandran', (114.725, 151.824, 159.172)), ('A', '519', 1, 'smoc Outlier', (112.906, 149.37, 156.853)), ('A', '520', 1, 'cablam CA Geom Outlier', (109.7, 151.5, 157.3)), ('A', '807', 1, 'side-chain clash\nbackbone clash', (123.191, 147.029, 162.917)), ('A', '810', 1, 'side-chain clash\nbackbone clash', (123.191, 147.029, 162.917)), ('A', '454', 2, 'backbone clash\nside-chain clash', (106.515, 126.437, 182.029)), ('A', '456', 2, 'smoc Outlier', (113.654, 120.918, 181.661)), ('A', '457', 2, 'side-chain clash', (108.791, 125.862, 177.123)), ('A', '459', 2, 'side-chain clash', (109.239, 124.053, 173.319)), ('A', '467', 2, 'side-chain clash\nbackbone clash\nDihedral angle:CA:CB:CG:OD1', (106.973, 129.69899999999998, 178.127)), ('A', '469', 2, 'backbone clash', (106.515, 126.437, 182.029)), ('A', '484', 2, 'Dihedral angle:CB:CG:CD:OE1', (105.603, 113.839, 190.93200000000002)), ('A', '486', 2, 'cablam Outlier', (110.1, 109.0, 189.0)), ('A', '489', 2, 'smoc Outlier', (109.209, 116.30799999999999, 187.925)), ('A', '490', 2, 'side-chain clash\nBond angle:CA:CB:CG\nBond angle:CA:C', (108.222, 119.903, 187.73299999999998)), ('A', '491', 2, 'side-chain clash\nBond angle:N', (110.393, 122.10799999999999, 185.416)), ('A', '492', 2, 'side-chain clash\nsmoc Outlier', (107.497, 125.138, 188.232)), ('A', '104', 3, 'smoc Outlier', (166.504, 177.20999999999998, 164.61299999999997)), ('A', '106', 3, 'smoc Outlier', (160.935, 174.762, 167.32200000000003)), ('A', '108', 3, 'cablam Outlier', (154.6, 175.6, 170.8)), ('A', '118', 3, 'side-chain clash', (170.616, 176.568, 169.353)), ('A', '120', 3, 'side-chain clash', (170.616, 176.568, 169.353)), ('A', '159', 3, 'cablam CA Geom Outlier', (171.7, 182.1, 173.5)), ('A', '237', 3, 'smoc Outlier', (155.66899999999998, 177.403, 166.129)), ('A', '661', 4, 'Dihedral angle:CB:CG:CD:OE1', (139.894, 166.129, 109.362)), ('A', '662', 4, 'smoc Outlier', (139.524, 164.523, 112.768)), ('A', '663', 4, 'Dihedral angle:CA:CB:CG:OD1', (142.702, 164.529, 114.837)), ('A', '666', 4, 'cablam Outlier', (136.0, 164.1, 121.4)), ('A', '667', 4, 'cablam Outlier', (132.7, 162.7, 120.5)), ('A', '671', 4, 'smoc Outlier', (137.448, 166.694, 117.17799999999998)), ('A', '981', 5, 'side-chain clash', (150.515, 133.038, 164.271)), ('A', '982', 5, 'side-chain clash', (147.165, 129.984, 160.615)), ('A', '983', 5, 'cablam Outlier', (146.0, 129.2, 163.8)), ('A', '984', 5, 'side-chain clash', (150.515, 133.038, 164.271)), ('A', '986', 5, 'Rotamer\nC-beta\nside-chain clash\nBond angle:CA:CB:CG\nBond angle:N:CA:CB\nsmoc Outlier', (145.93200000000002, 130.82800000000003, 157.529)), ('A', '990', 5, 'smoc Outlier', (143.597, 132.665, 152.57299999999998)), ('A', '133', 6, 'side-chain clash', (120.515, 161.202, 140.705)), ('A', '135', 6, 'side-chain clash', (120.515, 161.202, 140.705)), ('A', '538', 6, 'smoc Outlier', (123.812, 169.497, 146.536)), ('A', '549', 6, 'cablam CA Geom Outlier', (123.6, 163.2, 149.1)), ('A', '590', 6, 'smoc Outlier', (124.395, 166.136, 142.292)), ('A', '121', 7, 'smoc Outlier', (175.58200000000002, 175.71099999999998, 164.253)), ('A', '122', 7, 'Bond angle:C\ncablam Outlier', (178.17299999999997, 178.075, 165.754)), ('A', '123', 7, 'Bond angle:N:CA', (180.94299999999998, 177.14399999999998, 163.231)), ('A', '173', 7, 'smoc Outlier', (182.68, 167.124, 166.342)), ('A', '175', 7, 'smoc Outlier', (185.212, 172.12, 163.24399999999997)), ('A', '413', 8, 'smoc Outlier', (123.972, 132.034, 168.499)), ('A', '415', 8, 'smoc Outlier', (122.99400000000001, 127.93400000000001, 173.936)), ('A', '416', 8, 'smoc Outlier', (122.425, 126.81, 177.49800000000002)), ('A', '420', 8, 'backbone clash', (116.888, 126.196, 177.067)), ('A', '421', 8, 'backbone clash', (116.888, 126.196, 177.067)), ('A', '214', 9, 'Bond angle:CA:CB:CG\nsmoc Outlier', (168.657, 185.925, 142.92700000000002)), ('A', '216', 9, 'cablam Outlier', (165.6, 180.3, 144.7)), ('A', '218', 9, 'Bond angle:C\ncablam CA Geom Outlier', (165.515, 177.26999999999998, 139.029)), ('A', '219', 9, 'Bond angle:N:CA', (166.624, 173.718, 138.39700000000002)), ('A', '201', 10, 'side-chain clash', (165.062, 166.995, 162.936)), ('A', '203', 10, 'side-chain clash', (165.062, 166.995, 162.936)), ('A', '226', 10, 'side-chain clash', (171.062, 165.339, 160.008)), ('A', '227', 10, 'side-chain clash', (171.062, 165.339, 160.008)), ('A', '403', 11, 'backbone clash\nside-chain clash', (119.773, 132.711, 188.522)), ('A', '494', 11, 'backbone clash', (114.277, 130.612, 193.193)), ('A', '495', 11, 'side-chain clash\nbackbone clash\nPlanar group:CB:CG:CD1:CD2:CE1:CE2:CZ:OH', (116.935, 130.88400000000001, 193.064)), ('A', '505', 11, 'backbone clash', (122.857, 133.761, 193.26)), ('A', '554', 12, 'smoc Outlier', (110.02199999999999, 170.283, 144.285)), ('A', '557', 12, 'side-chain clash\nsmoc Outlier', (110.44, 159.894, 142.126)), ('A', '574', 12, 'side-chain clash\nsmoc Outlier', (110.44, 159.894, 142.126)), ('A', '586', 12, 'smoc Outlier', (112.624, 164.74599999999998, 144.354)), ('A', '1068', 13, 'smoc Outlier', (140.455, 160.44, 82.94500000000001)), ('A', '1105', 13, 'cablam Outlier', (141.9, 152.0, 79.8)), ('A', '708', 13, 'smoc Outlier', (131.335, 158.259, 80.366)), ('A', '710', 13, 'smoc Outlier', (137.409, 156.464, 80.722)), ('A', '375', 14, 'backbone clash', (126.275, 146.828, 183.844)), ('A', '376', 14, 'side-chain clash', (125.281, 143.19, 181.803)), ('A', '435', 14, 'side-chain clash\nbackbone clash\nBond angle:C:CA:CB', (123.40700000000001, 144.68, 182.71399999999997)), ('A', '510', 14, 'side-chain clash', (123.038, 142.203, 182.08)), ('A', '346', 15, 'smoc Outlier', (111.316, 144.76299999999998, 190.756)), ('A', '442', 15, 'side-chain clash', (114.138, 141.305, 191.762)), ('A', '451', 15, 'side-chain clash', (114.138, 141.305, 191.762)), ('A', '366', 16, 'side-chain clash', (125.487, 159.484, 178.347)), ('A', '369', 16, 'smoc Outlier', (125.736, 154.95100000000002, 178.101)), ('A', '370', 16, 'side-chain clash', (125.487, 159.484, 178.347)), ('A', '291', 17, 'smoc Outlier', (150.455, 165.266, 140.353)), ('A', '293', 17, 'cablam CA Geom Outlier', (149.6, 171.0, 139.8)), ('A', '58', 17, 'smoc Outlier', (155.29899999999998, 173.05800000000002, 142.965)), ('A', '377', 18, 'side-chain clash', (148.387, 133.488, 80.023)), ('A', '434', 18, 'side-chain clash', (148.387, 133.488, 80.023)), ('A', '900', 18, 'smoc Outlier', (147.975, 137.59, 83.17499999999998)), ('A', '197', 19, 'Bond angle:C', (155.803, 161.833, 161.77299999999997)), ('A', '198', 19, 'Ramachandran\nBond angle:N:CA\ncablam Outlier\nsmoc Outlier', (154.25, 159.94899999999998, 164.76899999999998)), ('A', '199', 19, 'Ramachandran\ncablam Outlier', (157.54, 160.312, 166.71999999999997)), ('A', '191', 20, 'side-chain clash', (164.647, 174.131, 148.079)), ('A', '34', 20, 'cablam Outlier', (162.2, 173.0, 145.0)), ('A', '91', 20, 'side-chain clash\nsmoc Outlier', (164.647, 174.131, 148.079)), ('A', '357', 21, 'Dihedral angle:CD:NE:CZ:NH1\nsmoc Outlier', (107.44400000000002, 148.69299999999998, 173.903)), ('A', '358', 21, 'side-chain clash', (111.814, 151.531, 172.841)), ('A', '395', 21, 'side-chain clash', (111.814, 151.531, 172.841)), ('A', '729', 22, 'smoc Outlier', (153.25, 132.791, 124.556)), ('A', '856', 22, 'Bond length:C', (157.91899999999998, 132.91, 128.44899999999998)), ('A', '857', 22, 'Bond length:N', (158.177, 130.03, 126.15499999999999)), ('A', '598', 23, 'smoc Outlier', (142.844, 166.595, 125.41900000000001)), ('A', '600', 23, 'side-chain clash', (146.82, 170.779, 122.416)), ('A', '688', 23, 'side-chain clash', (146.82, 170.779, 122.416)), ('A', '1035', 24, 'smoc Outlier', (137.55100000000002, 140.671, 96.21300000000001)), ('A', '1037', 24, 'Dihedral angle:CA:CB:CG:OD1', (139.547, 146.194, 98.73100000000001)), ('A', '1039', 24, 'cablam Outlier', (144.1, 143.4, 99.3)), ('A', '653', 25, 'smoc Outlier', (139.657, 174.765, 123.304)), ('A', '654', 25, 'smoc Outlier', (138.71699999999998, 177.538, 120.887)), ('A', '27', 26, 'smoc Outlier', (157.75, 189.32200000000003, 150.38600000000002)), ('A', '28', 26, 'smoc Outlier', (156.92200000000003, 186.137, 148.44299999999998)), ('A', '546', 27, 'smoc Outlier', (117.728, 157.701, 155.978)), ('A', '547', 27, 'smoc Outlier', (120.74600000000001, 159.584, 154.638)), ('A', '398', 28, 'smoc Outlier', (113.09100000000001, 142.85500000000002, 177.48800000000003)), ('A', '400', 28, 'Rotamer\nPlanar group:CB:CG:CD1:CD2:CE1:CE2:CZ', (114.574, 140.198, 183.612)), ('A', '280', 29, 'side-chain clash', (170.514, 160.607, 138.83)), ('A', '284', 29, 'side-chain clash', (170.514, 160.607, 138.83)), ('A', '1085', 30, 'smoc Outlier', (126.53, 145.819, 71.133)), ('A', '1116', 30, 'smoc Outlier', (130.414, 143.788, 68.381)), ('A', '295', 31, 'smoc Outlier', (145.54899999999998, 168.55100000000002, 134.251)), ('A', '299', 31, 'smoc Outlier', (147.71499999999997, 162.941, 132.706)), ('A', '87', 32, 'side-chain clash\nBond angle:C', (152.067, 173.198, 160.26999999999998)), ('A', '88', 32, 'Bond angle:N:CA\ncablam CA Geom Outlier', (152.572, 169.516, 159.32100000000003)), ('A', '793', 33, 'cablam Outlier', (162.8, 140.2, 86.1)), ('A', '796', 33, 'smoc Outlier', (161.266, 145.0, 88.18299999999999)), ('A', '787', 34, 'side-chain clash', (167.094, 135.786, 93.768)), ('A', '791', 34, 'side-chain clash', (167.094, 135.786, 93.768)), ('A', '446', 35, 'smoc Outlier', (118.71100000000001, 133.556, 203.503)), ('A', '447', 35, 'cablam Outlier', (117.9, 133.5, 199.8)), ('A', '386', 36, 'smoc Outlier', (126.587, 155.82800000000003, 166.789)), ('A', '389', 36, 'smoc Outlier', (121.758, 159.417, 164.485)), ('A', '1008', 37, 'smoc Outlier', (141.767, 133.974, 126.013)), ('A', '1009', 37, 'smoc Outlier', (139.755, 136.84, 124.588)), ('A', '349', 38, 'backbone clash', (112.043, 133.119, 186.748)), ('A', '452', 38, 'backbone clash', (112.043, 133.119, 186.748)), ('A', '732', 39, 'side-chain clash', (152.68, 133.789, 134.012)), ('A', '854', 39, 'side-chain clash', (152.68, 133.789, 134.012)), ('A', '734', 40, 'backbone clash\nsmoc Outlier', (150.064, 127.101, 140.64)), ('A', '735', 40, 'backbone clash', (150.064, 127.101, 140.64)), ('A', '337', 41, 'smoc Outlier', (110.268, 156.354, 179.448)), ('A', '340', 41, 'Dihedral angle:CB:CG:CD:OE1', (110.52499999999999, 153.471, 184.284)), ('A', '746', 42, 'side-chain clash', (148.217, 123.559, 148.02)), ('A', '750', 42, 'side-chain clash', (148.217, 123.559, 148.02)), ('A', '562', 43, 'smoc Outlier', (100.35, 156.46800000000002, 153.445)), ('A', '563', 43, 'smoc Outlier', (103.363, 156.631, 151.107)), ('A', '1026', 44, 'smoc Outlier', (146.226, 132.29, 99.95100000000001)), ('A', '1027', 44, 'smoc Outlier', (144.038, 134.653, 97.90700000000001)), ('A', '809', 45, 'side-chain clash', (167.936, 135.799, 110.577)), ('A', '864', 45, 'side-chain clash', (167.936, 135.799, 110.577)), ('A', '480', 46, 'cablam Outlier', (102.5, 112.3, 184.7)), ('A', '481', 46, 'cablam Outlier', (100.3, 115.4, 185.1)), ('A', '946', 47, 'backbone clash', (149.434, 145.814, 119.396)), ('A', '947', 47, 'backbone clash', (149.434, 145.814, 119.396)), ('B', '454', 1, 'backbone clash\nside-chain clash', (138.298, 163.487, 182.985)), ('B', '457', 1, 'side-chain clash', (140.583, 164.286, 177.126)), ('B', '459', 1, 'side-chain clash', (138.967, 165.009, 173.474)), ('B', '467', 1, 'side-chain clash\nbackbone clash\nDihedral angle:CA:CB:CG:OD1', (144.859, 163.854, 178.129)), ('B', '469', 1, 'backbone clash', (142.343, 165.89, 181.941)), ('B', '484', 1, 'Dihedral angle:CB:CG:CD:OE1', (131.803, 173.01299999999998, 190.89700000000002)), ('B', '486', 1, 'cablam Outlier', (125.3, 171.6, 188.9)), ('B', '489', 1, 'smoc Outlier', (132.134, 168.654, 187.894)), ('B', '490', 1, 'side-chain clash\nBond angle:CA:CB:CG\nBond angle:CA:C', (135.73899999999998, 167.701, 187.71099999999998)), ('B', '491', 1, 'side-chain clash\nBond angle:N', (136.56, 164.71399999999997, 185.39800000000002)), ('B', '492', 1, 'side-chain clash', (140.414, 166.058, 188.458)), ('B', '380', 2, 'Bond angle:N:CA:CB\nsmoc Outlier', (147.80700000000002, 140.974, 168.306)), ('B', '420', 2, 'backbone clash', (137.253, 157.119, 176.91)), ('B', '421', 2, 'backbone clash', (137.253, 157.119, 176.91)), ('B', '423', 2, 'smoc Outlier', (143.82000000000002, 155.012, 176.67299999999997)), ('B', '424', 2, 'Bond length:C', (142.737, 154.54899999999998, 173.05200000000002)), ('B', '425', 2, 'Bond length:N', (144.499, 151.976, 170.83700000000002)), ('B', '429', 2, 'Rotamer\nC-beta\nBond angle:CA:CB:CG\nBond angle:C:CA:CB', (147.736, 147.672, 166.48000000000002)), ('B', '430', 2, 'backbone clash', (153.028, 146.564, 165.058)), ('B', '464', 2, 'cablam Outlier', (147.8, 157.2, 171.8)), ('B', '515', 2, 'backbone clash\nsmoc Outlier', (153.028, 146.564, 165.058)), ('B', '191', 3, 'side-chain clash', (154.506, 91.477, 148.159)), ('B', '214', 3, 'Bond angle:CA:CB:CG', (162.572, 82.252, 143.01899999999998)), ('B', '216', 3, 'cablam Outlier', (159.3, 87.7, 144.8)), ('B', '218', 3, 'Bond angle:C\ncablam CA Geom Outlier\nsmoc Outlier', (156.676, 89.31400000000001, 139.10299999999998)), ('B', '219', 3, 'Bond angle:N:CA', (153.04899999999998, 90.14, 138.461)), ('B', '34', 3, 'cablam Outlier', (154.6, 94.3, 145.1)), ('B', '91', 3, 'side-chain clash\nsmoc Outlier', (154.506, 91.477, 148.159)), ('B', '661', 4, 'Dihedral angle:CB:CG:CD:OE1', (159.98700000000002, 117.048, 109.428)), ('B', '663', 4, 'Dihedral angle:CA:CB:CG:OD1', (157.17899999999997, 115.427, 114.896)), ('B', '666', 4, 'cablam Outlier', (160.1, 121.4, 121.5)), ('B', '667', 4, 'cablam Outlier', (160.6, 125.0, 120.5)), ('B', '670', 4, 'smoc Outlier', (163.903, 121.959, 117.548)), ('B', '671', 4, 'smoc Outlier', (161.685, 118.884, 117.24700000000001)), ('B', '108', 5, 'cablam Outlier', (160.7, 99.6, 170.9)), ('B', '110', 5, 'smoc Outlier', (161.3, 94.577, 174.038)), ('B', '112', 5, 'cablam Outlier', (158.9, 94.8, 179.6)), ('B', '133', 5, 'side-chain clash', (157.88, 88.61, 175.227)), ('B', '135', 5, 'side-chain clash\nsmoc Outlier', (157.88, 88.61, 175.227)), ('B', '342', 6, 'side-chain clash', (155.205, 142.668, 180.511)), ('B', '373', 6, 'smoc Outlier', (154.464, 135.806, 186.92200000000003)), ('B', '375', 6, 'backbone clash', (149.798, 138.559, 183.78)), ('B', '376', 6, 'side-chain clash', (147.25, 141.218, 181.887)), ('B', '435', 6, 'side-chain clash\nbackbone clash\nBond angle:C:CA:CB', (149.545, 142.121, 182.73999999999998)), ('B', '981', 7, 'side-chain clash', (125.873, 124.574, 164.245)), ('B', '982', 7, 'side-chain clash\nPlanar group:CA:C:O', (122.893, 127.529, 161.933)), ('B', '983', 7, 'Planar group:N\ncablam Outlier', (124.862, 130.316, 163.73999999999998)), ('B', '984', 7, 'side-chain clash', (125.873, 124.574, 164.245)), ('B', '986', 7, 'Rotamer\nC-beta\nside-chain clash\nBond angle:CA:CB:CG\nBond angle:N:CA:CB', (126.31400000000001, 129.58800000000002, 157.506)), ('B', '201', 8, 'side-chain clash\nsmoc Outlier', (147.997, 94.886, 162.943)), ('B', '203', 8, 'side-chain clash', (147.997, 94.886, 162.943)), ('B', '226', 8, 'side-chain clash', (143.77, 90.447, 159.639)), ('B', '227', 8, 'side-chain clash', (143.77, 90.447, 159.639)), ('B', '349', 9, 'backbone clash', (144.834, 157.901, 186.829)), ('B', '452', 9, 'backbone clash', (144.834, 157.901, 186.829)), ('B', '494', 9, 'backbone clash', (142.001, 157.138, 192.989)), ('B', '495', 9, 'side-chain clash\nbackbone clash', (142.001, 157.138, 192.989)), ('B', '554', 10, 'smoc Outlier', (178.5, 140.81, 144.38200000000003)), ('B', '557', 10, 'side-chain clash\nsmoc Outlier', (169.149, 145.6, 142.381)), ('B', '574', 10, 'side-chain clash\nsmoc Outlier', (169.149, 145.6, 142.381)), ('B', '586', 10, 'smoc Outlier', (172.405, 141.342, 144.436)), ('B', '792', 11, 'smoc Outlier', (123.54100000000001, 107.666, 85.13799999999999)), ('B', '793', 11, 'cablam Outlier', (126.1, 110.3, 86.1)), ('B', '796', 11, 'smoc Outlier', (131.032, 109.17199999999998, 88.18299999999999)), ('B', '920', 11, 'smoc Outlier', (135.72899999999998, 109.49700000000001, 86.225)), ('B', '197', 12, 'Bond angle:C', (148.153, 105.48, 161.816)), ('B', '198', 12, 'Ramachandran\nBond angle:N:CA\ncablam Outlier\nsmoc Outlier', (147.296, 107.77199999999999, 164.81)), ('B', '199', 12, 'Ramachandran\ncablam Outlier', (145.953, 104.74499999999998, 166.759)), ('B', '200', 12, 'smoc Outlier', (144.907, 101.995, 164.318)), ('B', '438', 13, 'side-chain clash', (150.7, 145.837, 189.159)), ('B', '442', 13, 'side-chain clash\nsmoc Outlier', (151.169, 151.822, 191.887)), ('B', '451', 13, 'side-chain clash\nsmoc Outlier', (151.169, 151.822, 191.887)), ('B', '509', 13, 'side-chain clash', (150.7, 145.837, 189.159)), ('B', '734', 14, 'backbone clash', (121.182, 127.805, 140.492)), ('B', '735', 14, 'backbone clash', (121.182, 127.805, 140.492)), ('B', '737', 14, 'smoc Outlier', (124.562, 122.583, 141.788)), ('B', '852', 14, 'cablam CA Geom Outlier', (124.3, 117.6, 140.2)), ('B', '136', 15, 'smoc Outlier', (165.187, 85.55499999999999, 175.0)), ('B', '138', 15, 'side-chain clash\nDihedral angle:CA:CB:CG:OD1', (166.67899999999997, 84.353, 170.02100000000002)), ('B', '80', 15, 'smoc Outlier', (168.995, 83.051, 163.788)), ('B', '280', 16, 'side-chain clash', (139.572, 93.16, 138.435)), ('B', '281', 16, 'smoc Outlier', (134.809, 96.066, 136.183)), ('B', '284', 16, 'side-chain clash', (139.572, 93.16, 138.435)), ('B', '118', 17, 'side-chain clash', (153.53, 85.47, 169.767)), ('B', '120', 17, 'side-chain clash', (153.53, 85.47, 169.767)), ('B', '159', 17, 'cablam CA Geom Outlier', (157.6, 81.6, 173.6)), ('B', '121', 18, 'smoc Outlier', (150.20999999999998, 81.408, 164.316)), ('B', '122', 18, 'Bond angle:C\ncablam Outlier', (150.94899999999998, 77.98100000000001, 165.82000000000002)), ('B', '123', 18, 'Bond angle:N:CA', (148.758, 76.05199999999999, 163.29299999999998)), ('B', '1014', 19, 'smoc Outlier', (132.518, 127.43900000000001, 117.333)), ('B', '1018', 19, 'smoc Outlier', (130.19, 127.54100000000001, 111.787)), ('B', '725', 19, 'smoc Outlier', (129.651, 123.49300000000001, 113.624)), ('B', '357', 20, 'Dihedral angle:CD:NE:CZ:NH1', (161.056, 153.90200000000002, 173.95000000000002)), ('B', '358', 20, 'side-chain clash', (161.327, 148.676, 172.894)), ('B', '395', 20, 'side-chain clash', (161.327, 148.676, 172.894)), ('B', '518', 21, 'Ramachandran\nsmoc Outlier', (160.14100000000005, 146.025, 159.221)), ('B', '520', 21, 'cablam CA Geom Outlier', (162.4, 150.5, 157.4)), ('B', '521', 21, 'smoc Outlier', (165.795, 149.55800000000002, 158.905)), ('B', '364', 22, 'Dihedral angle:CA:CB:CG:OD1', (165.324, 138.728, 174.687)), ('B', '365', 22, 'smoc Outlier', (161.61299999999997, 138.039, 174.73299999999998)), ('B', '369', 22, 'smoc Outlier', (157.267, 134.945, 178.15)), ('B', '510', 23, 'side-chain clash', (119.83, 138.683, 130.133)), ('B', '761', 23, 'Dihedral angle:CD:NE:CZ:NH1', (120.657, 133.056, 130.57899999999998)), ('B', '398', 24, 'smoc Outlier', (153.16299999999998, 151.955, 177.518)), ('B', '400', 24, 'Rotamer', (150.105, 152.01, 183.634)), ('B', '807', 25, 'side-chain clash', (117.328, 102.194, 105.531)), ('B', '810', 25, 'side-chain clash', (117.328, 102.194, 105.531)), ('B', '538', 26, 'smoc Outlier', (170.88800000000003, 129.282, 146.621)), ('B', '549', 26, 'cablam CA Geom Outlier', (165.5, 132.6, 149.2)), ('B', '183', 27, 'cablam CA Geom Outlier\nsmoc Outlier', (163.1, 72.2, 151.3)), ('B', '262', 27, 'smoc Outlier', (164.27399999999997, 77.113, 152.736)), ('B', '1122', 28, 'cablam Outlier', (157.1, 145.2, 66.7)), ('B', '1125', 28, 'smoc Outlier', (157.659, 144.99200000000002, 73.36999999999999)), ('B', '291', 29, 'smoc Outlier', (153.859, 108.368, 140.409)), ('B', '293', 29, 'cablam CA Geom Outlier', (159.2, 106.3, 139.8)), ('B', '377', 30, 'side-chain clash', (132.777, 114.762, 75.106)), ('B', '434', 30, 'side-chain clash', (132.777, 114.762, 75.106)), ('B', '597', 31, 'smoc Outlier', (158.38800000000003, 115.059, 129.172)), ('B', '611', 31, 'smoc Outlier', (163.248, 119.06400000000001, 128.918)), ('B', '87', 32, 'side-chain clash\nBond angle:C', (159.86, 103.001, 160.344)), ('B', '88', 32, 'Bond angle:N:CA\ncablam CA Geom Outlier', (156.425, 104.41300000000001, 159.38600000000002)), ('B', '389', 33, 'smoc Outlier', (163.16, 136.132, 164.548)), ('B', '390', 33, 'smoc Outlier', (161.617, 139.57, 163.83)), ('B', '394', 34, 'side-chain clash', (160.642, 150.598, 165.639)), ('B', '516', 34, 'side-chain clash', (160.642, 150.598, 165.639)), ('B', '1134', 35, 'smoc Outlier', (148.597, 131.905, 59.335)), ('B', '1136', 35, 'smoc Outlier', (142.83700000000002, 130.73999999999998, 57.253)), ('B', '787', 36, 'side-chain clash', (132.386, 119.554, 162.722)), ('B', '791', 36, 'side-chain clash', (132.386, 119.554, 162.722)), ('B', '446', 37, 'smoc Outlier', (142.236, 151.781, 203.506)), ('B', '447', 37, 'cablam Outlier', (142.6, 152.5, 199.8)), ('B', '899', 38, 'smoc Outlier', (132.347, 121.133, 81.571)), ('B', '909', 38, 'smoc Outlier', (135.52, 122.008, 78.14)), ('B', '732', 39, 'side-chain clash', (125.431, 122.257, 134.069)), ('B', '854', 39, 'side-chain clash', (125.431, 122.257, 134.069)), ('B', '856', 40, 'Bond length:C', (122.16199999999999, 118.16199999999999, 128.42200000000003)), ('B', '857', 40, 'Bond length:N', (119.548, 119.384, 126.121)), ('B', '1037', 41, 'Dihedral angle:CA:CB:CG:OD1', (142.95000000000002, 127.357, 98.75)), ('B', '1039', 41, 'cablam Outlier', (138.2, 124.8, 99.3)), ('B', '746', 42, 'side-chain clash', (118.442, 131.246, 147.831)), ('B', '750', 42, 'side-chain clash', (118.442, 131.246, 147.831)), ('B', '96', 43, 'smoc Outlier', (155.72, 78.891, 152.467)), ('B', '97', 43, 'smoc Outlier', (155.118, 75.215, 151.88500000000002)), ('B', '809', 44, 'side-chain clash', (119.611, 108.026, 110.498)), ('B', '864', 44, 'side-chain clash', (119.611, 108.026, 110.498)), ('B', '1058', 45, 'smoc Outlier', (133.52, 118.745, 102.978)), ('B', '721', 45, 'smoc Outlier', (137.94899999999998, 119.34100000000001, 105.276)), ('B', '600', 46, 'side-chain clash', (160.129, 108.904, 122.495)), ('B', '688', 46, 'side-chain clash', (160.129, 108.904, 122.495)), ('B', '480', 47, 'cablam Outlier', (132.0, 176.5, 184.7)), ('B', '481', 47, 'cablam Outlier', (135.8, 176.8, 185.0)), ('B', '946', 48, 'backbone clash\nside-chain clash', (151.243, 97.349, 185.075)), ('B', '947', 48, 'backbone clash\nside-chain clash', (151.243, 97.349, 185.075)), ('C', '342', 1, 'side-chain clash', (132.15, 115.501, 180.41)), ('C', '366', 1, 'side-chain clash', (120.491, 115.016, 178.42)), ('C', '369', 1, 'smoc Outlier', (124.255, 117.531, 178.122)), ('C', '370', 1, 'side-chain clash', (120.491, 115.016, 178.42)), ('C', '373', 1, 'smoc Outlier', (126.38199999999999, 119.519, 186.901)), ('C', '375', 1, 'backbone clash', (131.055, 122.128, 183.864)), ('C', '376', 1, 'side-chain clash', (134.187, 122.971, 181.386)), ('C', '377', 1, 'side-chain clash', (129.798, 118.593, 177.822)), ('C', '380', 1, 'Bond angle:N:CA:CB\nsmoc Outlier', (134.206, 122.756, 168.303)), ('C', '381', 1, 'backbone clash', (132.386, 119.554, 162.722)), ('C', '424', 1, 'Bond length:C', (148.497, 120.392, 173.068)), ('C', '425', 1, 'Bond length:N', (145.39200000000002, 120.148, 170.847)), ('C', '429', 1, 'Rotamer\nC-beta\nBond angle:CA:CB:CG\nBond angle:C:CA:CB', (140.055, 119.488, 166.48100000000002)), ('C', '432', 1, 'smoc Outlier', (134.0, 118.998, 172.974)), ('C', '434', 1, 'side-chain clash', (129.798, 118.593, 177.822)), ('C', '435', 1, 'side-chain clash\nbackbone clash\nBond angle:C:CA:CB\nsmoc Outlier', (134.314, 120.65299999999999, 182.73299999999998)), ('C', '464', 1, 'cablam Outlier', (148.3, 114.7, 171.8)), ('C', '510', 1, 'side-chain clash', (137.0, 121.548, 182.406)), ('C', '424', 2, 'Bond length:C', (148.497, 120.392, 173.068)), ('C', '425', 2, 'Bond length:N', (145.39200000000002, 120.148, 170.847)), ('C', '454', 2, 'backbone clash\nside-chain clash', (158.448, 119.739, 183.032)), ('C', '457', 2, 'side-chain clash', (157.964, 117.484, 177.194)), ('C', '459', 2, 'side-chain clash', (159.543, 119.223, 173.261)), ('C', '464', 2, 'cablam Outlier', (148.3, 114.7, 171.8)), ('C', '465', 2, 'smoc Outlier', (151.63299999999998, 113.959, 173.38400000000001)), ('C', '467', 2, 'side-chain clash\nbackbone clash\nDihedral angle:CA:CB:CG:OD1', (155.505, 113.915, 178.14499999999998)), ('C', '484', 2, 'Dihedral angle:CB:CG:CD:OE1', (169.925, 120.663, 190.947)), ('C', '486', 2, 'cablam Outlier', (171.9, 127.0, 189.0)), ('C', '489', 2, 'smoc Outlier', (165.984, 122.55, 187.94)), ('C', '490', 2, 'side-chain clash\nBond angle:CA:CB:CG\nBond angle:CA:C', (163.364, 119.897, 187.74899999999997)), ('C', '491', 2, 'side-chain clash\nBond angle:N', (160.369, 120.67399999999999, 185.43200000000002)), ('C', '492', 2, 'side-chain clash', (159.649, 116.714, 188.423)), ('C', '661', 3, 'Dihedral angle:CB:CG:CD:OE1', (107.485, 124.189, 109.38499999999999)), ('C', '662', 3, 'smoc Outlier', (109.061, 124.67299999999999, 112.79)), ('C', '663', 3, 'Dihedral angle:CA:CB:CG:OD1', (107.46600000000001, 127.422, 114.85799999999999)), ('C', '666', 3, 'cablam Outlier', (111.2, 121.9, 121.5)), ('C', '667', 3, 'cablam Outlier', (114.1, 119.7, 120.5)), ('C', '671', 3, 'smoc Outlier', (108.22, 121.79, 117.20100000000001)), ('C', '349', 4, 'backbone clash', (150.086, 116.566, 186.916)), ('C', '403', 4, 'backbone clash\nside-chain clash', (146.568, 123.556, 188.504)), ('C', '452', 4, 'backbone clash', (150.086, 116.566, 186.916)), ('C', '494', 4, 'backbone clash', (150.959, 120.054, 192.811)), ('C', '495', 4, 'backbone clash\nside-chain clash\nPlanar group:CB:CG:CD1:CD2:CE1:CE2:CZ:OH\nsmoc Outlier', (149.49800000000002, 121.95, 193.08200000000002)), ('C', '505', 4, 'backbone clash', (144.028, 125.547, 193.316)), ('C', '554', 5, 'smoc Outlier', (118.834, 96.25, 144.31)), ('C', '557', 5, 'side-chain clash', (127.597, 101.919, 142.272)), ('C', '568', 5, 'smoc Outlier', (131.099, 106.74300000000001, 140.64299999999997)), ('C', '571', 5, 'smoc Outlier', (133.22899999999998, 110.49100000000001, 143.35800000000003)), ('C', '574', 5, 'side-chain clash\nsmoc Outlier', (127.597, 101.919, 142.272)), ('C', '586', 5, 'smoc Outlier', (122.327, 101.273, 144.37800000000001)), ('C', '191', 6, 'side-chain clash\nsmoc Outlier', (88.072, 141.57, 148.031)), ('C', '223', 6, 'smoc Outlier', (93.45, 147.93, 149.231)), ('C', '224', 6, 'smoc Outlier', (95.24600000000001, 150.768, 150.966)), ('C', '34', 6, 'cablam Outlier', (90.4, 140.1, 145.1)), ('C', '36', 6, 'smoc Outlier', (95.52799999999999, 142.629, 146.757)), ('C', '91', 6, 'side-chain clash\nsmoc Outlier', (88.072, 141.57, 148.031)), ('C', '981', 7, 'side-chain clash', (130.611, 149.954, 164.354)), ('C', '982', 7, 'side-chain clash\nPlanar group:CA:C:O', (134.946, 151.067, 161.978)), ('C', '983', 7, 'Planar group:N\ncablam Outlier', (136.38200000000003, 147.97, 163.782)), ('C', '984', 7, 'side-chain clash', (130.611, 149.954, 164.354)), ('C', '986', 7, 'Rotamer\nC-beta\nside-chain clash\nBond angle:CA:CB:CG\nBond angle:N:CA:CB', (135.038, 147.08200000000002, 157.545)), ('C', '393', 8, 'side-chain clash', (136.77, 106.923, 164.294)), ('C', '516', 8, 'side-chain clash', (136.77, 106.923, 164.294)), ('C', '517', 8, 'smoc Outlier', (134.142, 112.45700000000001, 161.068)), ('C', '518', 8, 'Ramachandran\nsmoc Outlier', (132.46700000000007, 109.558, 159.193)), ('C', '520', 8, 'cablam CA Geom Outlier', (135.2, 105.4, 157.4)), ('C', '214', 9, 'Bond angle:CA:CB:CG', (75.96000000000001, 139.2, 142.95100000000002)), ('C', '216', 9, 'cablam Outlier', (82.3, 139.3, 144.7)), ('C', '218', 9, 'Bond angle:C\ncablam CA Geom Outlier\nsmoc Outlier', (85.026, 140.80800000000002, 139.05200000000002)), ('C', '219', 9, 'Bond angle:N:CA', (87.54700000000001, 143.54399999999998, 138.418)), ('C', '104', 10, 'smoc Outlier', (84.586, 141.698, 164.636)), ('C', '118', 10, 'side-chain clash', (83.105, 145.501, 169.803)), ('C', '120', 10, 'side-chain clash', (83.105, 145.501, 169.803)), ('C', '159', 10, 'cablam CA Geom Outlier', (77.8, 143.7, 173.5)), ('C', '745', 11, 'smoc Outlier', (135.26299999999998, 152.17299999999997, 151.42000000000002)), ('C', '746', 11, 'side-chain clash', (140.375, 153.152, 147.901)), ('C', '749', 11, 'smoc Outlier', (139.283, 149.348, 147.74599999999998)), ('C', '750', 11, 'side-chain clash', (140.375, 153.152, 147.901)), ('C', '598', 12, 'smoc Outlier', (105.60799999999999, 126.513, 125.44100000000002)), ('C', '600', 12, 'side-chain clash', (100.057, 127.807, 122.349)), ('C', '607', 12, 'smoc Outlier', (96.732, 128.222, 126.397)), ('C', '688', 12, 'side-chain clash', (100.057, 127.807, 122.349)), ('C', '346', 13, 'smoc Outlier', (140.29, 110.142, 190.777)), ('C', '442', 13, 'side-chain clash', (141.85, 114.244, 191.8)), ('C', '451', 13, 'side-chain clash', (141.85, 114.244, 191.8)), ('C', '280', 14, 'side-chain clash', (96.818, 153.821, 138.434)), ('C', '281', 14, 'smoc Outlier', (101.765, 156.423, 136.184)), ('C', '284', 14, 'side-chain clash', (96.818, 153.821, 138.434)), ('C', '290', 15, 'smoc Outlier', (99.596, 135.35800000000003, 141.10899999999998)), ('C', '291', 15, 'smoc Outlier', (102.95400000000001, 133.771, 140.375)), ('C', '293', 15, 'cablam CA Geom Outlier', (98.5, 130.2, 139.8)), ('C', '197', 16, 'Bond angle:C', (103.254, 140.122, 161.79299999999998)), ('C', '198', 16, 'Ramachandran\nBond angle:N:CA\ncablam Outlier\nsmoc Outlier', (105.663, 139.72, 164.79)), ('C', '199', 16, 'Ramachandran\ncablam Outlier\nsmoc Outlier', (103.702, 142.388, 166.74)), ('C', '386', 17, 'smoc Outlier', (123.06700000000001, 117.82799999999999, 166.811)), ('C', '389', 17, 'smoc Outlier', (122.37499999999999, 111.851, 164.507)), ('C', '390', 17, 'smoc Outlier', (126.12499999999999, 111.48100000000001, 163.795)), ('C', '357', 18, 'Dihedral angle:CD:NE:CZ:NH1', (138.82200000000003, 104.821, 173.924)), ('C', '358', 18, 'side-chain clash', (134.342, 106.916, 173.215)), ('C', '395', 18, 'side-chain clash', (134.342, 106.916, 173.215)), ('C', '617', 19, 'C-beta', (104.965, 111.89799999999997, 131.635)), ('C', '649', 19, 'smoc Outlier', (107.259, 114.277, 128.284)), ('C', '650', 19, 'smoc Outlier', (105.21600000000001, 117.133, 126.785)), ('C', '201', 20, 'side-chain clash', (94.387, 145.188, 163.15)), ('C', '203', 20, 'side-chain clash', (94.387, 145.188, 163.15)), ('C', '229', 20, 'smoc Outlier', (97.989, 148.454, 165.907)), ('C', '1301', 21, 'smoc Outlier', (89.74100000000001, 125.67999999999999, 143.474)), ('C', '61', 21, 'smoc Outlier', (87.38199999999999, 129.40200000000002, 147.27499999999998)), ('C', '761', 22, 'Dihedral angle:CD:NE:CZ:NH1', (140.90200000000002, 150.309, 130.632)), ('C', '763', 22, 'smoc Outlier', (135.842, 149.333, 128.876)), ('C', '133', 23, 'side-chain clash', (84.025, 140.22, 175.507)), ('C', '135', 23, 'side-chain clash', (84.025, 140.22, 175.507)), ('C', '226', 24, 'side-chain clash', (122.721, 147.839, 88.408)), ('C', '227', 24, 'side-chain clash', (122.721, 147.839, 88.408)), ('C', '541', 25, 'smoc Outlier', (118.15199999999999, 107.831, 153.79399999999998)), ('C', '549', 25, 'cablam CA Geom Outlier\nsmoc Outlier', (118.2, 111.6, 149.1)), ('C', '807', 26, 'side-chain clash', (115.865, 168.62, 105.615)), ('C', '810', 26, 'side-chain clash', (115.865, 168.62, 105.615)), ('C', '122', 27, 'Bond angle:C\ncablam Outlier', (78.001, 151.369, 165.77599999999998)), ('C', '123', 27, 'Bond angle:N:CA\nsmoc Outlier', (77.421, 154.23299999999998, 163.253)), ('C', '913', 28, 'side-chain clash', (119.052, 148.92, 74.957)), ('C', '914', 28, 'smoc Outlier', (115.65299999999999, 144.88600000000002, 75.548)), ('C', '413', 29, 'smoc Outlier', (144.98000000000002, 127.465, 168.516)), ('C', '415', 29, 'smoc Outlier', (149.01899999999998, 128.67, 173.95200000000003)), ('C', '308', 30, 'smoc Outlier', (104.67499999999998, 137.003, 126.705)), ('C', '309', 30, 'Rotamer\nsmoc Outlier', (106.138, 136.676, 123.235)), ('C', '87', 31, 'side-chain clash\nBond angle:C', (95.282, 131.202, 160.29299999999998)), ('C', '88', 31, 'Bond angle:N:CA\ncablam CA Geom Outlier', (98.21700000000001, 133.48000000000002, 159.344)), ('C', '787', 32, 'side-chain clash', (120.181, 162.79, 93.731)), ('C', '791', 32, 'side-chain clash', (120.181, 162.79, 93.731)), ('C', '1056', 33, 'smoc Outlier', (123.927, 148.92000000000002, 108.806)), ('C', '725', 33, 'smoc Outlier', (128.159, 147.292, 113.65199999999999)), ('C', '420', 34, 'backbone clash', (153.485, 123.825, 177.112)), ('C', '421', 34, 'backbone clash', (153.485, 123.825, 177.112)), ('C', '856', 35, 'Bond length:C', (127.236, 156.416, 128.464)), ('C', '857', 35, 'Bond length:N', (129.601, 158.08, 126.169)), ('C', '108', 36, 'cablam Outlier', (91.9, 132.1, 170.8)), ('C', '237', 36, 'smoc Outlier', (89.839, 132.21899999999997, 166.15200000000002)), ('C', '244', 37, 'smoc Outlier', (69.524, 142.254, 164.28)), ('C', '245', 37, 'smoc Outlier', (66.144, 143.997, 164.37800000000001)), ('C', '1105', 38, 'cablam Outlier', (118.8, 133.0, 79.8)), ('C', '907', 38, 'smoc Outlier', (123.93400000000001, 137.32600000000002, 80.975)), ('C', '430', 39, 'backbone clash\nside-chain clash', (94.603, 141.303, 184.961)), ('C', '515', 39, 'backbone clash\nside-chain clash', (94.603, 141.303, 184.961)), ('C', '732', 40, 'side-chain clash', (128.651, 151.435, 134.245)), ('C', '854', 40, 'side-chain clash', (128.651, 151.435, 134.245)), ('C', '975', 41, 'side-chain clash\nsmoc Outlier', (120.235, 150.721, 158.316)), ('C', '979', 41, 'side-chain clash', (123.191, 147.029, 162.917)), ('C', '734', 42, 'backbone clash\nsmoc Outlier', (136.197, 152.497, 140.67)), ('C', '735', 42, 'backbone clash', (136.197, 152.497, 140.67)), ('C', '1037', 43, 'Dihedral angle:CA:CB:CG:OD1', (124.91900000000001, 133.85800000000003, 98.75)), ('C', '1039', 43, 'cablam Outlier', (125.1, 139.2, 99.3)), ('C', '1026', 44, 'smoc Outlier', (133.618, 146.596, 99.96700000000001)), ('C', '1027', 44, 'smoc Outlier', (132.666, 143.52, 97.923)), ('C', '809', 45, 'side-chain clash', (119.64, 163.833, 110.527)), ('C', '864', 45, 'side-chain clash', (119.64, 163.833, 110.527)), ('C', '1005', 46, 'smoc Outlier', (133.899, 139.93200000000002, 130.727)), ('C', '1006', 46, 'smoc Outlier', (130.472, 139.65, 129.122)), ('C', '480', 47, 'cablam Outlier\nsmoc Outlier', (172.8, 118.8, 184.7)), ('C', '481', 47, 'cablam Outlier', (171.2, 115.3, 185.1)), ('C', '946', 48, 'backbone clash\nsmoc Outlier', (120.466, 142.132, 119.221)), ('C', '947', 48, 'backbone clash', (120.466, 142.132, 119.221))]
data['rama'] = [('A', ' 198 ', 'ASP', 0.01775016156030372, (154.25, 159.949, 164.769)), ('A', ' 199 ', 'GLY', 0.037638273502211, (157.54, 160.312, 166.71999999999997)), ('A', ' 518 ', 'LEU', 0.019722915178218378, (114.725, 151.824, 159.172)), ('B', ' 198 ', 'ASP', 0.01766981300521739, (147.296, 107.77199999999998, 164.81)), ('B', ' 199 ', 'GLY', 0.03730891951473421, (145.953, 104.74499999999998, 166.759)), ('B', ' 518 ', 'LEU', 0.0192012661916732, (160.14100000000005, 146.025, 159.221)), ('C', ' 198 ', 'ASP', 0.017257139296132686, (105.66300000000003, 139.71999999999997, 164.78999999999996)), ('C', ' 199 ', 'GLY', 0.037424799487389054, (103.702, 142.388, 166.74)), ('C', ' 518 ', 'LEU', 0.019730802332773897, (132.46700000000007, 109.558, 159.193))]
data['cablam'] = [('A', '34', 'ARG', 'check CA trace,carbonyls, peptide', ' \n-S---', (162.2, 173.0, 145.0)), ('A', '108', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nEESS-', (154.6, 175.6, 170.8)), ('A', '112', 'SER', 'check CA trace,carbonyls, peptide', 'bend\n-BSSS', (159.6, 176.5, 179.6)), ('A', '122', 'ASN', 'check CA trace,carbonyls, peptide', ' \nEE-SS', (178.2, 178.1, 165.8)), ('A', '198', 'ASP', 'check CA trace,carbonyls, peptide', 'turn\nEETTE', (154.2, 159.9, 164.8)), ('A', '199', 'GLY', 'check CA trace,carbonyls, peptide', 'turn\nETTEE', (157.5, 160.3, 166.7)), ('A', '216', 'LEU', 'check CA trace,carbonyls, peptide', 'bend\nSSS-S', (165.6, 180.3, 144.7)), ('A', '447', 'GLY', 'check CA trace,carbonyls, peptide', ' \nTT-B-', (117.9, 133.5, 199.8)), ('A', '464', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\n-SS--', (111.3, 135.6, 171.7)), ('A', '480', 'CYS', 'check CA trace,carbonyls, peptide', ' \nS--SS', (102.5, 112.3, 184.7)), ('A', '481', 'ASN', 'check CA trace,carbonyls, peptide', 'bend\n--SS-', (100.3, 115.4, 185.1)), ('A', '486', 'PHE', 'check CA trace,carbonyls, peptide', 'turn\n-STTE', (110.1, 109.0, 189.0)), ('A', '666', 'ILE', 'check CA trace,carbonyls, peptide', 'strand\nEEEET', (136.0, 164.1, 121.4)), ('A', '667', 'GLY', 'check CA trace,carbonyls, peptide', 'strand\nEEETT', (132.7, 162.7, 120.5)), ('A', '793', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\n--STT', (162.8, 140.2, 86.1)), ('A', '983', 'PRO', ' alpha helix', 'helix\n-HHHH', (146.0, 129.2, 163.8)), ('A', '1039', 'CYS', 'check CA trace,carbonyls, peptide', 'turn\nBTTBS', (144.1, 143.4, 99.3)), ('A', '1080', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nESSSE', (121.2, 148.3, 58.8)), ('A', '1105', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\nTTS--', (141.9, 152.0, 79.8)), ('A', '1122', 'CYS', 'check CA trace,carbonyls, peptide', 'turn\nEETTS', (117.1, 149.4, 66.7)), ('A', '88', 'ASP', 'check CA trace', 'bend\n--S-E', (152.6, 169.5, 159.3)), ('A', '159', 'VAL', 'check CA trace', 'bend\nS-S-S', (171.7, 182.1, 173.5)), ('A', '183', 'GLN', 'check CA trace', ' \n---SS', (177.1, 191.4, 151.2)), ('A', '218', 'GLN', 'check CA trace', 'bend\nS-SS-', (165.5, 177.3, 139.0)), ('A', '293', 'LEU', 'check CA trace', 'bend\nTTS-H', (149.6, 171.0, 139.8)), ('A', '520', 'ALA', 'check CA trace', 'bend\nSSS--', (109.7, 151.5, 157.3)), ('A', '549', 'THR', 'check CA trace', 'strand\nEEEEE', (123.6, 163.2, 149.1)), ('A', '852', 'ASN', 'check CA trace', 'bend\n--SSE', (157.3, 135.0, 140.2)), ('B', '34', 'ARG', 'check CA trace,carbonyls, peptide', ' \n-S---', (154.6, 94.3, 145.1)), ('B', '108', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nEESS-', (160.7, 99.6, 170.9)), ('B', '112', 'SER', 'check CA trace,carbonyls, peptide', 'bend\n-BSSS', (158.9, 94.8, 179.6)), ('B', '122', 'ASN', 'check CA trace,carbonyls, peptide', ' \nEE-SS', (150.9, 78.0, 165.8)), ('B', '198', 'ASP', 'check CA trace,carbonyls, peptide', 'turn\nEETTE', (147.3, 107.8, 164.8)), ('B', '199', 'GLY', 'check CA trace,carbonyls, peptide', 'turn\nETTEE', (146.0, 104.7, 166.8)), ('B', '216', 'LEU', 'check CA trace,carbonyls, peptide', 'bend\nSSS-S', (159.3, 87.7, 144.8)), ('B', '447', 'GLY', 'check CA trace,carbonyls, peptide', ' \nTT-B-', (142.6, 152.5, 199.8)), ('B', '464', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\n-SS--', (147.8, 157.2, 171.8)), ('B', '480', 'CYS', 'check CA trace,carbonyls, peptide', ' \nS--SS', (132.0, 176.5, 184.7)), ('B', '481', 'ASN', 'check CA trace,carbonyls, peptide', 'bend\n--SS-', (135.8, 176.8, 185.0)), ('B', '486', 'PHE', 'check CA trace,carbonyls, peptide', 'turn\n-STTE', (125.3, 171.6, 188.9)), ('B', '666', 'ILE', 'check CA trace,carbonyls, peptide', 'strand\nEEEET', (160.1, 121.4, 121.5)), ('B', '667', 'GLY', 'check CA trace,carbonyls, peptide', 'strand\nEEETT', (160.6, 125.0, 120.5)), ('B', '793', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\n--STT', (126.1, 110.3, 86.1)), ('B', '983', 'PRO', ' alpha helix', 'helix\n-HHHH', (124.9, 130.3, 163.7)), ('B', '1039', 'CYS', 'check CA trace,carbonyls, peptide', 'turn\nBTTBS', (138.2, 124.8, 99.3)), ('B', '1080', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nESSSE', (154.1, 142.2, 58.8)), ('B', '1105', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\nTTS--', (146.8, 122.4, 79.8)), ('B', '1122', 'CYS', 'check CA trace,carbonyls, peptide', 'turn\nEETTS', (157.1, 145.2, 66.7)), ('B', '88', 'ASP', 'check CA trace', 'bend\n--S-E', (156.4, 104.4, 159.4)), ('B', '159', 'VAL', 'check CA trace', 'bend\nS-S-S', (157.6, 81.6, 173.6)), ('B', '183', 'GLN', 'check CA trace', ' \n---SS', (163.1, 72.2, 151.3)), ('B', '218', 'GLN', 'check CA trace', 'bend\nS-SS-', (156.7, 89.3, 139.1)), ('B', '293', 'LEU', 'check CA trace', 'bend\nTTS-H', (159.2, 106.3, 139.8)), ('B', '520', 'ALA', 'check CA trace', 'bend\nSSS--', (162.4, 150.5, 157.4)), ('B', '549', 'THR', 'check CA trace', 'strand\nEEEEE', (165.5, 132.6, 149.2)), ('B', '852', 'ASN', 'check CA trace', 'bend\n--SSE', (124.3, 117.6, 140.2)), ('C', '34', 'ARG', 'check CA trace,carbonyls, peptide', ' \n-S---', (90.4, 140.1, 145.1)), ('C', '108', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nEESS-', (91.9, 132.1, 170.8)), ('C', '112', 'SER', 'check CA trace,carbonyls, peptide', 'bend\n-BSSS', (88.6, 136.1, 179.6)), ('C', '122', 'ASN', 'check CA trace,carbonyls, peptide', ' \nEE-SS', (78.0, 151.4, 165.8)), ('C', '198', 'ASP', 'check CA trace,carbonyls, peptide', 'turn\nEETTE', (105.7, 139.7, 164.8)), ('C', '199', 'GLY', 'check CA trace,carbonyls, peptide', 'turn\nETTEE', (103.7, 142.4, 166.7)), ('C', '216', 'LEU', 'check CA trace,carbonyls, peptide', 'bend\nSSS-S', (82.3, 139.3, 144.7)), ('C', '447', 'GLY', 'check CA trace,carbonyls, peptide', ' \nTT-B-', (146.8, 121.5, 199.8)), ('C', '464', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\n-SS--', (148.3, 114.7, 171.8)), ('C', '480', 'CYS', 'check CA trace,carbonyls, peptide', ' \nS--SS', (172.8, 118.8, 184.7)), ('C', '481', 'ASN', 'check CA trace,carbonyls, peptide', 'bend\n--SS-', (171.2, 115.3, 185.1)), ('C', '486', 'PHE', 'check CA trace,carbonyls, peptide', 'turn\n-STTE', (171.9, 127.0, 189.0)), ('C', '666', 'ILE', 'check CA trace,carbonyls, peptide', 'strand\nEEEET', (111.2, 121.9, 121.5)), ('C', '667', 'GLY', 'check CA trace,carbonyls, peptide', 'strand\nEEETT', (114.1, 119.7, 120.5)), ('C', '793', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\n--STT', (118.5, 157.0, 86.1)), ('C', '983', 'PRO', ' alpha helix', 'helix\n-HHHH', (136.4, 148.0, 163.8)), ('C', '1039', 'CYS', 'check CA trace,carbonyls, peptide', 'turn\nBTTBS', (125.1, 139.2, 99.3)), ('C', '1080', 'ASP', 'check CA trace,carbonyls, peptide', 'bend\nESSSE', (132.2, 116.9, 58.8)), ('C', '1105', 'PHE', 'check CA trace,carbonyls, peptide', 'bend\nTTS--', (118.8, 133.0, 79.8)), ('C', '1122', 'CYS', 'check CA trace,carbonyls, peptide', 'turn\nEETTS', (133.4, 112.8, 66.7)), ('C', '88', 'ASP', 'check CA trace', 'bend\n--S-E', (98.2, 133.5, 159.3)), ('C', '159', 'VAL', 'check CA trace', 'bend\nS-S-S', (77.8, 143.7, 173.5)), ('C', '183', 'GLN', 'check CA trace', ' \n---SS', (67.0, 143.7, 151.2)), ('C', '218', 'GLN', 'check CA trace', 'bend\nS-SS-', (85.0, 140.8, 139.1)), ('C', '293', 'LEU', 'check CA trace', 'bend\nTTS-H', (98.5, 130.2, 139.8)), ('C', '520', 'ALA', 'check CA trace', 'bend\nSSS--', (135.2, 105.4, 157.4)), ('C', '549', 'THR', 'check CA trace', 'strand\nEEEEE', (118.2, 111.6, 149.1)), ('C', '852', 'ASN', 'check CA trace', 'bend\n--SSE', (125.7, 154.8, 140.2))]
handle_read_draw_probe_dots_unformatted("/home/ccpem/agnel/gisaid/countries_seq/structure_data/emdb/EMD-11333/6zp1/Model_validation_1/validation_cootdata/molprobity_probe6zp1_0.txt", 0, 0)
show_probe_dots(True, True)
gui = coot_molprobity_todo_list_gui(data=data)
