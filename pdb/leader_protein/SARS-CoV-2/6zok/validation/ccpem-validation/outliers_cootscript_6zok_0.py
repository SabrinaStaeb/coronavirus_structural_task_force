
from __future__ import division
import cPickle
try :
  import gobject
except ImportError :
  gobject = None
import sys

dict_residue_prop_objects = {}
class coot_extension_gui (object) :
  def __init__ (self, title) :
    import gtk
    self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
    scrolled_win = gtk.ScrolledWindow()
    self.outside_vbox = gtk.VBox(False, 2)
    self.inside_vbox = gtk.VBox(False, 0)
    self.window.set_title(title)
    self.inside_vbox.set_border_width(0)
    self.window.add(self.outside_vbox)
    self.outside_vbox.pack_start(scrolled_win, True, True, 0)
    scrolled_win.add_with_viewport(self.inside_vbox)
    scrolled_win.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)

  def finish_window (self) :
    import gtk
    self.outside_vbox.set_border_width(2)
    ok_button = gtk.Button("  Close  ")
    self.outside_vbox.pack_end(ok_button, False, False, 0)
    ok_button.connect("clicked", lambda b: self.destroy_window())
    self.window.connect("delete_event", lambda a, b: self.destroy_window())
    self.window.show_all()

  def destroy_window (self, *args) :
    self.window.destroy()
    self.window = None

  def confirm_data (self, data) :
    for data_key in self.data_keys :
      outlier_list = data.get(data_key)
      if outlier_list is not None and len(outlier_list) > 0 :
        return True
    return False

  def create_property_lists (self, data) :
    import gtk
    for data_key in self.data_keys :
      outlier_list = data[data_key]
      if outlier_list is None or len(outlier_list) == 0 :
        continue
      else :
        frame = gtk.Frame(self.data_titles[data_key])
        vbox = gtk.VBox(False, 2)
        frame.set_border_width(6)
        frame.add(vbox)
        self.add_top_widgets(data_key, vbox)
        self.inside_vbox.pack_start(frame, False, False, 5)
        list_obj = residue_properties_list(
          columns=self.data_names[data_key],
          column_types=self.data_types[data_key],
          rows=outlier_list,
          box=vbox)
        ##save property list frame object
        dict_residue_prop_objects[data_key] = list_obj
# Molprobity result viewer
class coot_molprobity_todo_list_gui (coot_extension_gui) :
  data_keys = [ "clusters","rama", "rota", "cbeta", "probe", "smoc", "cablam",
               "jpred"]
  data_titles = { "clusters"  : "Outlier residue clusters",
                  "rama"  : "Ramachandran outliers",
                  "rota"  : "Rotamer outliers",
                  "cbeta" : "C-beta outliers",
                  "probe" : "Severe clashes",
                  "smoc"  : "Local density fit (SMOC)",
                  "cablam": "Ca geometry (CaBLAM)",
                  "jpred":"SS prediction"}
  data_names = { "clusters"  : ["Chain","Residue","Cluster","Outlier types"],
                 "rama"  : ["Chain", "Residue", "Name", "Score"],
                 "rota"  : ["Chain", "Residue", "Name", "Score"],
                 "cbeta" : ["Chain", "Residue", "Name", "Conf.", "Deviation"],
                 "probe" : ["Atom 1", "Atom 2", "Overlap"],
                 "smoc" : ["Chain", "Residue", "Name", "Score"],
                 "cablam" : ["Chain", "Residue","Name","recommendation","DSSP"],
                 "jpred" : ["Chain", "Residue","Name","predicted SS","current SS"]}
  if (gobject is not None) :
    data_types = {  "clusters" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_INT, gobject.TYPE_STRING,
                             gobject.TYPE_PYOBJECT],
                    "rama" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "rota" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                             gobject.TYPE_STRING, gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cbeta" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "probe" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_FLOAT, gobject.TYPE_PYOBJECT],
                   "smoc" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_FLOAT,
                             gobject.TYPE_PYOBJECT],
                   "cablam" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_STRING,
                             gobject.TYPE_STRING,gobject.TYPE_PYOBJECT],
                   "jpred" : [gobject.TYPE_STRING, gobject.TYPE_STRING,
                              gobject.TYPE_STRING,gobject.TYPE_STRING,
                             gobject.TYPE_STRING,gobject.TYPE_PYOBJECT]}
  else :
    data_types = dict([ (s, []) for s in ["clusters","rama","rota","cbeta","probe","smoc",
                                          "cablam","jpred"] ])

  def __init__ (self, data_file=None, data=None) :
    assert ([data, data_file].count(None) == 1)
    if (data is None) :
      data = load_pkl(data_file)
    if not self.confirm_data(data) :
      return
    coot_extension_gui.__init__(self, "MolProbity to-do list")
    self.dots_btn = None
    self.dots2_btn = None
    self._overlaps_only = True
    self.window.set_default_size(420, 600)
    self.create_property_lists(data)
    self.finish_window()

  def add_top_widgets (self, data_key, box) :
    import gtk
    if data_key == "probe" :
      hbox = gtk.HBox(False, 2)
      self.dots_btn = gtk.CheckButton("Show Probe dots")
      hbox.pack_start(self.dots_btn, False, False, 5)
      self.dots_btn.connect("toggled", self.toggle_probe_dots)
      self.dots2_btn = gtk.CheckButton("Overlaps only")
      hbox.pack_start(self.dots2_btn, False, False, 5)
      self.dots2_btn.connect("toggled", self.toggle_all_probe_dots)
      self.dots2_btn.set_active(True)
      self.toggle_probe_dots()
      box.pack_start(hbox, False, False, 0)

  def toggle_probe_dots (self, *args) :
    if self.dots_btn is not None :
      show_dots = self.dots_btn.get_active()
      overlaps_only = self.dots2_btn.get_active()
      if show_dots :
        self.dots2_btn.set_sensitive(True)
      else :
        self.dots2_btn.set_sensitive(False)
      show_probe_dots(show_dots, overlaps_only)

  def toggle_all_probe_dots (self, *args) :
    if self.dots2_btn is not None :
      self._overlaps_only = self.dots2_btn.get_active()
      self.toggle_probe_dots()

class rsc_todo_list_gui (coot_extension_gui) :
  data_keys = ["by_res", "by_atom"]
  data_titles = ["Real-space correlation by residue",
                 "Real-space correlation by atom"]
  data_names = {}
  data_types = {}

class residue_properties_list (object) :
  def __init__ (self, columns, column_types, rows, box,
      default_size=(380,200)) :
    assert len(columns) == (len(column_types) - 1)
    if (len(rows) > 0) and (len(rows[0]) != len(column_types)) :
      raise RuntimeError("Wrong number of rows:\n%s" % str(rows[0]))
    import gtk
    ##adding a column type for checkbox (bool) before atom coordinate
    if gobject is not None:
        column_types = column_types[:-1]+[bool]+[column_types[-1]]
    
    self.liststore = gtk.ListStore(*column_types)
    self.listmodel = gtk.TreeModelSort(self.liststore)
    self.listctrl = gtk.TreeView(self.listmodel)
    self.listctrl.column = [None]*len(columns)
    self.listctrl.cell = [None]*len(columns)
    for i, column_label in enumerate(columns) :
      cell = gtk.CellRendererText()
      column = gtk.TreeViewColumn(column_label)
      self.listctrl.append_column(column)
      column.set_sort_column_id(i)
      column.pack_start(cell, True)
      column.set_attributes(cell, text=i)
    ##add a cell for checkbox
    cell1 = gtk.CellRendererToggle()
    cell1.connect ("toggled", self.on_selected_toggled)
    column = gtk.TreeViewColumn('Dealt with',cell1,active=i+1)
    self.listctrl.append_column(column)
    #column.set_sort_column_id(i+1)
    #column.pack_start(cell1, True)
    
    self.listctrl.get_selection().set_mode(gtk.SELECTION_SINGLE)
    for row in rows :
      row = row[:-1] + (False,)+(row[-1],)
      self.listmodel.get_model().append(row)
    self.listctrl.connect("cursor-changed", self.OnChange)
    sw = gtk.ScrolledWindow()
    w, h = default_size
    if len(rows) > 10 :
      sw.set_size_request(w, h)
    else :
      sw.set_size_request(w, 30 + (20 * len(rows)))
    sw.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
    box.pack_start(sw, False, False, 5)
    inside_vbox = gtk.VBox(False, 0)
    sw.add(self.listctrl)

  def OnChange (self, treeview) :
    import coot # import dependency
    selection = self.listctrl.get_selection()
    (model, tree_iter) = selection.get_selected()
    if tree_iter is not None :
      row = model[tree_iter]
      xyz = row[-1]
      if isinstance(xyz, tuple) and len(xyz) == 3 :
        set_rotation_centre(*xyz)
        set_zoom(30)
        graphics_draw()
  ##check box toggle
  def on_selected_toggled(self,renderer,path):
    if path is not None:
      model = self.listmodel.get_model()
      it = model.get_iter(path)
      #set toggle
      model[it][-2] = not model[it][-2]
      #set checkboxes for same residues in other lists
      try:
        chain = model[it][0]
        residue = model[it][1]
        for data_key in dict_residue_prop_objects:
          prop_obj = dict_residue_prop_objects[data_key]
          for row in prop_obj.listmodel.get_model():
            if data_key == 'probe':
              atom1_split = row[0].split()
              atom2_split = row[1].split()
              if atom1_split[0] == chain and atom1_split[1] == residue:
                row[-2] = model[it][-2]
              elif atom2_split[0] == chain and atom2_split[1] == residue:
                row[-2] = model[it][-2]
            elif row[0] == chain and row[1] == residue:
              row[-2] = model[it][-2]
      except IndexError: pass

  def check_chain_residue(self,chain,residue):
      pass
  
def show_probe_dots (show_dots, overlaps_only) :
  import coot # import dependency
  n_objects = number_of_generic_objects()
  sys.stdout.flush()
  if show_dots :
    for object_number in range(n_objects) :
      obj_name = generic_object_name(object_number)
      if overlaps_only and not obj_name in ["small overlap", "bad overlap"] :
        sys.stdout.flush()
        set_display_generic_object(object_number, 0)
      else :
        set_display_generic_object(object_number, 1)
  else :
    sys.stdout.flush()
    for object_number in range(n_objects) :
      set_display_generic_object(object_number, 0)

def load_pkl (file_name) :
  pkl = open(file_name, "rb")
  data = cPickle.load(pkl)
  pkl.close()
  return data
data = {}
data['rama'] = []
data['cbeta'] = []
data['smoc'] = []
data['jpred'] = []
data['rota'] = [('A', '  76 ', 'VAL', 0.2810324028046594, (335.45799999999986, 321.173, 346.055)), ('B', '  23 ', 'ASP', 0.1025807908809236, (360.112, 235.88900000000007, 297.543)), ('B', ' 107 ', 'ARG', 0.09627651134715497, (359.7200000000001, 273.352, 303.398)), ('C', ' 157 ', 'LEU', 0.13068766299673173, (304.514, 319.3260000000001, 334.537)), ('C', ' 227 ', 'ARG', 0.0014282150880013137, (304.0349999999999, 321.41, 307.364)), ('C', ' 251 ', 'LEU', 0.04153399463828075, (317.789, 339.52200000000005, 318.756)), ('C', ' 270 ', 'THR', 0.1967715172719783, (322.72199999999987, 334.917, 350.809)), ('E', ' 162 ', 'ILE', 0.21987126885000743, (285.4899999999999, 383.18599999999986, 259.744)), ('E', ' 225 ', 'ILE', 0.03978364188652792, (295.98999999999995, 371.4829999999999, 269.762)), ('G', '  36 ', 'VAL', 0.2785271581065652, (247.703, 334.675, 205.819)), ('G', '  50 ', 'VAL', 0.01768369877835521, (245.067, 338.061, 209.055)), ('G', '  69 ', 'THR', 0.29355323745112566, (260.4989999999999, 325.103, 217.49900000000002)), ('G', ' 118 ', 'GLU', 0.08739640619683692, (233.85299999999995, 342.242, 200.813)), ('G', ' 219 ', 'GLU', 0.11759299352514437, (306.5309999999999, 393.307, 251.747)), ('H', '  28 ', 'LEU', 0.18879067768340468, (371.8399999999999, 376.10699999999997, 287.082)), ('H', ' 105 ', 'THR', 0.24170313461567206, (330.3079999999999, 358.506, 279.033)), ('I', '  76 ', 'THR', 0.10265869902824278, (299.508, 356.776, 212.78100000000003)), ('I', ' 107 ', 'THR', 0.08450620610108762, (304.12599999999986, 359.42300000000006, 206.409)), ('I', ' 121 ', 'LEU', 0.2591180503494377, (313.516, 362.893, 203.737)), ('I', ' 130 ', 'THR', 0.16463799434341966, (305.54799999999994, 365.693, 192.302)), ('J', ' 106 ', 'LEU', 0.00896148939639007, (274.9209999999999, 346.19900000000007, 315.113)), ('L', '  85 ', 'THR', 0.07014212480186253, (317.5889999999999, 340.11300000000006, 248.19300000000004)), ('L', ' 146 ', 'THR', 0.009880765830741394, (327.6069999999999, 348.549, 259.096)), ('O', ' 100 ', 'THR', 0.2489774827064497, (346.417, 265.291, 299.347)), ('O', ' 138 ', 'ASP', 0.18301163942043633, (348.589, 278.41300000000007, 290.925)), ('W', '  25 ', 'VAL', 0.24937731466516685, (335.953, 336.902, 308.864)), ('X', '  81 ', 'ILE', 0.09785506956948563, (275.03, 298.98, 283.361)), ('X', ' 105 ', 'PHE', 0.22529948757977802, (277.354, 306.557, 293.257)), ('X', ' 115 ', 'ILE', 0.17883456036050444, (279.175, 296.415, 296.514)), ('Y', '  50 ', 'THR', 0.07679159046128729, (243.526, 379.339, 282.706)), ('Y', ' 109 ', 'GLU', 0.008104480143417202, (247.14400000000006, 339.792, 256.968)), ('a', '  30 ', 'VAL', 0.006614253040573643, (334.434, 284.404, 297.885)), ('a', '  67 ', 'LEU', 0.12016623886784944, (353.344, 273.086, 309.908)), ('a', '  84 ', 'VAL', 0.08821638900775308, (333.54, 283.53, 314.108)), ('b', '  17 ', 'ARG', 0.0, (354.279, 327.62300000000005, 307.888)), ('b', '  40 ', 'CYS', 0.07827122710988607, (387.396, 329.5710000000001, 288.142)), ('j', ' 163 ', 'THR', 0.10492941674058169, (285.6369999999999, 298.375, 322.494))]
data['clusters'] = [('A', '103', 1, 'side-chain clash', (330.51, 314.712, 340.916)), ('A', '123', 1, 'side-chain clash', (337.245, 323.272, 344.835)), ('A', '132', 1, 'side-chain clash', (325.799, 313.576, 337.452)), ('A', '133', 1, 'side-chain clash', (330.51, 314.712, 340.916)), ('A', '136', 1, 'side-chain clash', (325.799, 313.576, 337.452)), ('A', '76', 1, 'side-chain clash\nRotamer', (335.45799999999986, 321.173, 346.055)), ('A', '77', 1, 'side-chain clash', (332.511, 317.141, 345.357)), ('A', '78', 1, 'side-chain clash', (339.668, 316.783, 345.369)), ('A', '87', 1, 'side-chain clash', (339.668, 316.783, 345.369)), ('A', '99', 1, 'side-chain clash', (332.511, 317.141, 345.357)), ('A', '184', 2, 'side-chain clash', (347.329, 334.946, 353.15)), ('A', '188', 2, 'cablam Outlier', (343.0, 336.4, 357.2)), ('A', '189', 2, 'side-chain clash', (347.329, 334.946, 353.15)), ('A', '191', 2, 'side-chain clash', (349.706, 336.927, 350.789)), ('A', '30', 3, 'side-chain clash', (349.641, 323.809, 322.079)), ('A', '35', 3, 'side-chain clash', (349.641, 323.809, 322.079)), ('A', '38', 3, 'side-chain clash', (353.166, 321.312, 326.836)), ('A', '47', 3, 'side-chain clash', (353.166, 321.312, 326.836)), ('A', '154', 4, 'side-chain clash', (340.46, 325.035, 325.44)), ('A', '33', 4, 'side-chain clash', (340.46, 325.035, 325.44)), ('A', '34', 4, 'side-chain clash', (342.547, 324.533, 328.303)), ('A', '206', 5, 'cablam Outlier\nbackbone clash\nside-chain clash', (350.4, 306.4, 349.6)), ('A', '208', 5, 'backbone clash\nside-chain clash\nDihedral angle:CB:CG:CD:OE1', (353.189, 302.17400000000004, 351.33299999999997)), ('A', '209', 5, 'backbone clash', (353.033, 304.644, 351.632)), ('A', '149', 6, 'backbone clash\nside-chain clash', (352.917, 258.28, 321.905)), ('A', '150', 6, 'backbone clash\nside-chain clash', (352.917, 258.28, 321.905)), ('A', '144', 7, 'backbone clash', (332.793, 324.6, 334.16)), ('A', '156', 7, 'backbone clash', (332.793, 324.6, 334.16)), ('A', '59', 8, 'side-chain clash', (368.159, 264.972, 316.199)), ('A', '62', 8, 'side-chain clash', (368.159, 264.972, 316.199)), ('A', '121', 9, 'side-chain clash', (331.171, 330.464, 343.503)), ('A', '68', 9, 'side-chain clash', (331.171, 330.464, 343.503)), ('A', '170', 10, 'side-chain clash', (350.024, 321.092, 341.596)), ('A', '174', 10, 'side-chain clash', (350.024, 321.092, 341.596)), ('A', '22', 11, 'backbone clash', (334.471, 276.384, 295.032)), ('A', '27', 11, 'backbone clash', (334.471, 276.384, 295.032)), ('A', '3', 12, 'side-chain clash', (327.781, 299.232, 303.033)), ('A', '8', 12, 'side-chain clash', (328.527, 295.384, 301.323)), ('A', '88', 13, 'side-chain clash', (327.6, 293.941, 317.375)), ('A', '92', 13, 'side-chain clash', (327.6, 293.941, 317.375)), ('B', '49', 1, 'backbone clash', (363.204, 323.766, 294.114)), ('B', '67', 1, 'backbone clash', (366.319, 319.262, 293.134)), ('B', '69', 1, 'side-chain clash\nbackbone clash', (363.204, 323.766, 294.114)), ('B', '70', 1, 'backbone clash', (366.319, 319.262, 293.134)), ('B', '223', 2, 'side-chain clash', (380.804, 259.503, 285.986)), ('B', '228', 2, 'side-chain clash', (380.804, 259.503, 285.986)), ('B', '63', 2, 'cablam Outlier\nside-chain clash', (372.5, 254.4, 287.7)), ('B', '90', 2, 'side-chain clash', (377.903, 254.21, 286.392)), ('B', '28', 3, 'side-chain clash', (367.789, 243.67, 297.511)), ('B', '48', 3, 'side-chain clash', (367.789, 243.67, 297.511)), ('B', '52', 3, 'side-chain clash', (370.966, 246.474, 302.45)), ('B', '54', 3, 'side-chain clash', (370.966, 246.474, 302.45)), ('B', '31', 4, 'side-chain clash', (377.499, 247.639, 294.622)), ('B', '92', 4, 'cablam Outlier', (382.6, 250.3, 291.0)), ('B', '93', 4, 'cablam Outlier', (381.9, 246.9, 292.5)), ('B', '94', 4, 'side-chain clash', (377.499, 247.639, 294.622)), ('B', '115', 5, 'Dihedral angle:CA:C', (356.09499999999997, 286.99799999999993, 306.815)), ('B', '116', 5, 'Dihedral angle:N:CA', (353.254, 289.40299999999996, 306.255)), ('B', '68', 6, 'side-chain clash', (367.28, 265.659, 295.9)), ('B', '85', 6, 'side-chain clash', (367.28, 265.659, 295.9)), ('B', '175', 7, 'side-chain clash', (382.912, 282.936, 293.472)), ('B', '187', 7, 'side-chain clash', (382.912, 282.936, 293.472)), ('B', '101', 8, 'side-chain clash', (369.372, 256.375, 296.269)), ('B', '87', 8, 'side-chain clash', (369.372, 256.375, 296.269)), ('B', '182', 9, 'side-chain clash', (383.796, 269.27, 293.068)), ('B', '38', 9, 'side-chain clash', (383.796, 269.27, 293.068)), ('B', '146', 10, 'side-chain clash', (363.051, 300.557, 311.539)), ('B', '149', 10, 'side-chain clash', (363.051, 300.557, 311.539)), ('B', '204', 11, 'backbone clash', (367.927, 302.306, 299.343)), ('B', '205', 11, 'cablam Outlier', (367.6, 298.6, 301.2)), ('B', '107', 12, 'Rotamer', (359.7200000000001, 273.352, 303.398)), ('B', '108', 12, 'side-chain clash', (360.483, 273.357, 306.344)), ('B', '123', 13, 'side-chain clash', (366.101, 289.139, 290.941)), ('B', '165', 13, 'side-chain clash', (366.101, 289.139, 290.941)), ('C', '182', 1, 'cablam CA Geom Outlier', (308.5, 338.7, 313.9)), ('C', '183', 1, 'backbone clash', (306.718, 334.83, 312.056)), ('C', '195', 1, 'backbone clash', (306.718, 334.83, 312.056)), ('C', '165', 2, 'side-chain clash', (302.343, 333.076, 324.582)), ('C', '217', 2, 'side-chain clash', (302.343, 333.076, 324.582)), ('C', '78', 3, 'side-chain clash', (309.638, 332.828, 338.988)), ('C', '81', 3, 'side-chain clash', (309.638, 332.828, 338.988)), ('C', '209', 4, 'side-chain clash', (322.09, 340.638, 327.964)), ('C', '210', 4, 'side-chain clash', (322.09, 340.638, 327.964)), ('C', '116', 5, 'backbone clash', (318.872, 335.508, 332.824)), ('C', '119', 5, 'backbone clash', (318.872, 335.508, 332.824)), ('C', '166', 6, 'Dihedral angle:CD:NE:CZ:NH1', (307.04900000000004, 338.501, 323.763)), ('C', '167', 6, 'Dihedral angle:CD:NE:CZ:NH1', (304.382, 340.45799999999997, 321.889)), ('E', '11', 1, 'side-chain clash\nbackbone clash\nDihedral angle:CD:NE:CZ:NH1', (273.79299999999995, 352.866, 273.44)), ('E', '21', 1, 'backbone clash', (271.666, 354.679, 277.911)), ('E', '24', 1, 'cablam CA Geom Outlier', (266.7, 354.1, 278.6)), ('E', '28', 1, 'side-chain clash', (273.699, 354.324, 272.451)), ('E', '45', 2, 'side-chain clash', (265.828, 365.048, 270.504)), ('E', '49', 2, 'side-chain clash', (266.955, 359.154, 272.331)), ('E', '61', 2, 'side-chain clash', (265.828, 365.048, 270.504)), ('E', '162', 3, 'side-chain clash\nRotamer', (285.4899999999999, 383.18599999999986, 259.744)), ('E', '169', 3, 'side-chain clash', (288.458, 381.896, 256.988)), ('E', '171', 3, 'side-chain clash', (290.532, 387.542, 261.169)), ('E', '212', 4, 'backbone clash', (299.909, 375.114, 285.124)), ('E', '216', 4, 'backbone clash', (299.909, 375.114, 285.124)), ('E', '151', 5, 'side-chain clash', (269.955, 335.647, 322.252)), ('E', '154', 5, 'side-chain clash', (269.955, 335.647, 322.252)), ('E', '55', 6, 'side-chain clash\nbackbone clash', (260.56, 371.422, 275.421)), ('E', '60', 6, 'side-chain clash\nbackbone clash', (260.56, 371.422, 275.421)), ('E', '246', 7, 'side-chain clash', (291.056, 371.348, 291.616)), ('E', '250', 7, 'side-chain clash', (291.056, 371.348, 291.616)), ('E', '100', 8, 'backbone clash', (281.74, 382.341, 266.25)), ('E', '121', 8, 'backbone clash', (281.74, 382.341, 266.25)), ('E', '140', 9, 'side-chain clash', (288.81, 372.228, 251.215)), ('E', '146', 9, 'side-chain clash', (288.81, 372.228, 251.215)), ('E', '141', 10, 'side-chain clash', (286.528, 374.287, 258.286)), ('E', '143', 10, 'side-chain clash', (286.528, 374.287, 258.286)), ('E', '51', 11, 'side-chain clash', (276.855, 312.477, 333.357)), ('E', '53', 11, 'side-chain clash', (276.855, 312.477, 333.357)), ('G', '64', 1, 'side-chain clash', (258.52, 332.13, 223.897)), ('G', '83', 1, 'cablam Outlier', (256.5, 336.4, 228.8)), ('G', '97', 1, 'side-chain clash', (258.52, 332.13, 223.897)), ('G', '11', 2, 'backbone clash', (239.13, 347.445, 216.33)), ('G', '7', 2, 'backbone clash\nside-chain clash', (238.926, 348.61, 211.65)), ('G', '9', 2, 'side-chain clash', (238.926, 348.61, 211.65)), ('G', '120', 3, 'side-chain clash', (230.153, 343.282, 206.794)), ('G', '125', 3, 'side-chain clash', (232.447, 344.902, 209.635)), ('G', '126', 3, 'side-chain clash', (230.479, 345.37, 212.683)), ('G', '195', 4, 'side-chain clash', (276.443, 377.686, 232.439)), ('G', '198', 4, 'side-chain clash', (275.996, 378.313, 236.613)), ('G', '36', 5, 'Rotamer', (247.703, 334.675, 205.819)), ('G', '50', 5, 'Rotamer', (245.067, 338.061, 209.055)), ('G', '135', 6, 'side-chain clash', (245.909, 366.879, 221.245)), ('G', '141', 6, 'side-chain clash', (245.909, 366.879, 221.245)), ('G', '159', 7, 'side-chain clash', (235.653, 367.713, 228.136)), ('G', '171', 7, 'side-chain clash', (235.653, 367.713, 228.136)), ('G', '85', 8, 'side-chain clash', (257.391, 339.4, 236.972)), ('G', '87', 8, 'side-chain clash', (257.391, 339.4, 236.972)), ('G', '21', 9, 'side-chain clash', (242.9, 321.846, 207.642)), ('G', '25', 9, 'side-chain clash', (242.9, 321.846, 207.642)), ('G', '78', 10, 'side-chain clash', (267.572, 338.45, 233.343)), ('G', '92', 10, 'side-chain clash', (267.572, 338.45, 233.343)), ('G', '106', 11, 'side-chain clash', (248.481, 325.767, 222.337)), ('G', '57', 11, 'side-chain clash', (248.481, 325.767, 222.337)), ('H', '133', 1, 'side-chain clash', (356.795, 362.663, 297.094)), ('H', '134', 1, 'side-chain clash', (357.124, 359.07, 301.792)), ('H', '173', 1, 'side-chain clash', (357.124, 359.07, 301.792)), ('H', '93', 1, 'side-chain clash', (356.795, 362.663, 297.094)), ('H', '11', 2, 'side-chain clash', (359.212, 376.353, 282.804)), ('H', '24', 2, 'side-chain clash', (363.751, 376.684, 285.991)), ('H', '9', 2, 'side-chain clash', (363.751, 376.684, 285.991)), ('H', '147', 3, 'side-chain clash', (337.08, 357.538, 307.57)), ('H', '151', 3, 'side-chain clash', (337.08, 357.538, 307.57)), ('H', '135', 4, 'side-chain clash', (364.359, 358.961, 294.367)), ('H', '76', 4, 'side-chain clash', (364.359, 358.961, 294.367)), ('H', '101', 5, 'side-chain clash', (342.529, 358.138, 278.443)), ('H', '116', 5, 'side-chain clash', (342.529, 358.138, 278.443)), ('H', '109', 6, 'side-chain clash', (331.575, 363.546, 270.945)), ('H', '110', 6, 'cablam Outlier', (334.7, 363.0, 270.0)), ('H', '179', 7, 'side-chain clash', (350.071, 371.494, 298.441)), ('H', '51', 7, 'side-chain clash', (350.071, 371.494, 298.441)), ('H', '69', 8, 'side-chain clash', (342.426, 347.085, 309.99)), ('H', '96', 8, 'side-chain clash', (342.426, 347.085, 309.99)), ('H', '78', 9, 'side-chain clash', (377.238, 364.354, 297.197)), ('H', '81', 9, 'side-chain clash', (377.238, 364.354, 297.197)), ('H', '46', 10, 'side-chain clash', (359.19, 368.215, 282.96)), ('H', '65', 10, 'side-chain clash', (359.19, 368.215, 282.96)), ('H', '119', 11, 'side-chain clash', (349.422, 355.639, 279.534)), ('H', '120', 11, 'side-chain clash', (349.422, 355.639, 279.534)), ('H', '163', 12, 'side-chain clash', (363.279, 356.19, 308.779)), ('H', '167', 12, 'side-chain clash\nDihedral angle:CB:CG:CD:OE1', (361.673, 358.04400000000004, 308.60400000000004)), ('H', '10', 13, 'side-chain clash', (307.394, 286.984, 283.675)), ('H', '6', 13, 'side-chain clash', (307.394, 286.984, 283.675)), ('H', '57', 14, 'side-chain clash', (360.644, 369.749, 306.5)), ('H', '91', 14, 'side-chain clash', (360.644, 369.749, 306.5)), ('I', '130', 1, 'side-chain clash\nRotamer', (305.54799999999994, 365.693, 192.302)), ('I', '131', 1, 'side-chain clash', (302.922, 366.031, 191.51)), ('I', '133', 1, 'side-chain clash', (304.47, 367.418, 196.368)), ('I', '105', 2, 'backbone clash', (304.501, 355.553, 207.709)), ('I', '106', 2, 'backbone clash', (304.501, 355.553, 207.709)), ('I', '107', 2, 'Rotamer', (304.12599999999986, 359.42300000000006, 206.409)), ('I', '149', 3, 'side-chain clash', (316.828, 375.658, 206.987)), ('I', '153', 3, 'side-chain clash', (316.828, 375.658, 206.987)), ('I', '101', 4, 'side-chain clash', (310.971, 348.928, 220.011)), ('I', '190', 4, 'side-chain clash', (310.971, 348.928, 220.011)), ('I', '102', 5, 'side-chain clash', (302.797, 344.927, 217.375)), ('I', '81', 5, 'side-chain clash', (302.797, 344.927, 217.375)), ('I', '183', 6, 'side-chain clash', (291.14, 349.603, 223.744)), ('I', '57', 6, 'side-chain clash', (291.14, 349.603, 223.744)), ('I', '3', 7, 'backbone clash', (288.793, 337.158, 239.545)), ('I', '30', 7, 'backbone clash', (288.793, 337.158, 239.545)), ('I', '141', 8, 'side-chain clash', (312.134, 382.017, 201.657)), ('I', '146', 8, 'side-chain clash', (312.134, 382.017, 201.657)), ('I', '89', 9, 'side-chain clash', (300.528, 330.756, 218.831)), ('I', '92', 9, 'side-chain clash', (300.528, 330.756, 218.831)), ('I', '11', 10, 'backbone clash', (303.548, 323.297, 251.669)), ('I', '15', 10, 'backbone clash', (303.548, 323.297, 251.669)), ('I', '10', 11, 'side-chain clash', (298.781, 330.87, 251.025)), ('I', '18', 11, 'side-chain clash', (298.781, 330.87, 251.025)), ('J', '136', 1, 'backbone clash\nside-chain clash', (255.202, 359.4, 311.529)), ('J', '138', 1, 'Dihedral angle:CA:C', (261.98999999999995, 362.45799999999997, 310.27299999999997)), ('J', '139', 1, 'side-chain clash\nDihedral angle:N:CA', (259.323, 362.4, 307.56)), ('J', '159', 1, 'backbone clash', (254.898, 360.44, 313.903)), ('J', '160', 1, 'side-chain clash', (255.202, 359.4, 311.529)), ('J', '92', 2, 'cablam Outlier', (289.7, 359.7, 312.7)), ('J', '93', 2, 'side-chain clash', (293.427, 356.967, 314.288)), ('J', '96', 2, 'side-chain clash', (293.427, 356.967, 314.288)), ('J', '48', 3, 'side-chain clash', (281.953, 341.576, 300.193)), ('J', '52', 3, 'side-chain clash', (281.953, 341.576, 300.193)), ('J', '28', 4, 'Dihedral angle:CB:CG:CD:OE1', (276.746, 333.97599999999994, 316.75)), ('J', '40', 4, 'side-chain clash', (274.786, 329.104, 313.492)), ('J', '163', 5, 'side-chain clash', (283.407, 297.317, 322.127)), ('J', '164', 5, 'side-chain clash', (283.407, 297.317, 322.127)), ('J', '106', 6, 'Rotamer', (274.9209999999999, 346.19900000000007, 315.113)), ('J', '107', 6, 'Dihedral angle:CB:CG:CD:OE1', (274.20599999999996, 349.132, 317.455)), ('L', '111', 1, 'side-chain clash', (313.226, 343.632, 254.825)), ('L', '130', 1, 'Dihedral angle:CB:CG:CD:OE1', (309.559, 349.508, 255.58)), ('L', '140', 1, 'side-chain clash', (313.226, 343.632, 254.825)), ('L', '103', 2, 'Dihedral angle:CB:CG:CD:OE1', (313.33, 332.895, 276.58599999999996)), ('L', '109', 2, 'side-chain clash', (308.511, 329.76, 275.908)), ('L', '73', 2, 'side-chain clash', (308.511, 329.76, 275.908)), ('L', '75', 3, 'side-chain clash', (317.908, 342.29, 260.078)), ('L', '88', 3, 'side-chain clash', (317.908, 342.29, 260.078)), ('L', '23', 4, 'side-chain clash', (328.055, 369.145, 220.084)), ('L', '26', 4, 'side-chain clash', (328.055, 369.145, 220.084)), ('L', '49', 5, 'Dihedral angle:CB:CG:CD:OE1', (327.97799999999995, 354.188, 244.499)), ('L', '52', 5, 'Dihedral angle:CB:CG:CD:OE1', (328.106, 357.48099999999994, 240.436)), ('L', '125', 6, 'side-chain clash', (325.292, 347.163, 260.854)), ('L', '146', 6, 'side-chain clash\nRotamer', (327.6069999999999, 348.549, 259.096)), ('L', '104', 7, 'side-chain clash', (318.503, 336.489, 269.526)), ('L', '91', 7, 'side-chain clash', (318.503, 336.489, 269.526)), ('L', '30', 8, 'side-chain clash', (329.947, 361.071, 229.615)), ('L', '32', 8, 'side-chain clash', (329.947, 361.071, 229.615)), ('N', '102', 1, 'side-chain clash', (346.041, 303.485, 270.908)), ('N', '110', 1, 'side-chain clash', (344.057, 306.563, 276.002)), ('N', '111', 1, 'side-chain clash', (346.041, 303.485, 270.908)), ('N', '114', 1, 'side-chain clash', (344.057, 306.563, 276.002)), ('N', '4', 2, 'side-chain clash', (338.925, 318.259, 279.287)), ('N', '5', 2, 'side-chain clash', (338.925, 318.259, 279.287)), ('N', '55', 3, 'side-chain clash', (365.223, 328.26, 285.899)), ('N', '56', 3, 'side-chain clash', (365.223, 328.26, 285.899)), ('N', '119', 4, 'side-chain clash\nDihedral angle:CB:CG:CD:OE1', (341.72999999999996, 315.99199999999996, 270.041)), ('N', '99', 4, 'side-chain clash', (342.725, 312.064, 265.399)), ('N', '100', 5, 'side-chain clash', (351.308, 304.214, 264.646)), ('N', '103', 5, 'side-chain clash', (351.308, 304.214, 264.646)), ('O', '114', 1, 'side-chain clash', (345.506, 257.651, 315.352)), ('O', '115', 1, 'side-chain clash', (348.877, 255.739, 310.536)), ('O', '71', 1, 'side-chain clash', (345.506, 257.651, 315.352)), ('O', '74', 1, 'side-chain clash', (348.877, 255.739, 310.536)), ('O', '34', 2, 'side-chain clash', (349.609, 257.533, 301.491)), ('O', '39', 2, 'backbone clash', (344.342, 255.188, 303.759)), ('O', '40', 2, 'backbone clash', (344.342, 255.188, 303.759)), ('O', '41', 2, 'side-chain clash', (349.609, 257.533, 301.491)), ('O', '100', 3, 'cablam Outlier\nRotamer', (346.4, 265.3, 299.3)), ('O', '104', 3, 'cablam CA Geom Outlier', (342.3, 270.3, 297.8)), ('O', '98', 3, 'backbone clash', (349.295, 264.872, 298.746)), ('O', '99', 3, 'backbone clash', (349.295, 264.872, 298.746)), ('O', '53', 4, 'side-chain clash', (361.999, 245.771, 302.671)), ('O', '88', 4, 'side-chain clash', (361.999, 245.771, 302.671)), ('O', '137', 5, 'Dihedral angle:CA:C', (352.062, 278.307, 292.48299999999995)), ('O', '138', 5, 'Rotamer\nDihedral angle:N:CA', (348.589, 278.41299999999995, 290.92499999999995)), ('O', '113', 6, 'side-chain clash', (351.779, 262.027, 318.6)), ('O', '117', 6, 'side-chain clash', (352.917, 258.28, 321.905)), ('O', '122', 7, 'backbone clash', (360.237, 246.969, 316.346)), ('O', '86', 7, 'backbone clash', (360.237, 246.969, 316.346)), ('V', '51', 1, 'side-chain clash\nbackbone clash', (339.025, 345.927, 335.146)), ('V', '76', 1, 'backbone clash', (339.025, 345.927, 335.146)), ('V', '78', 1, 'side-chain clash', (337.427, 342.67, 336.959)), ('V', '15', 2, 'side-chain clash', (318.872, 335.508, 332.824)), ('V', '16', 2, 'side-chain clash\nbackbone clash', (322.09, 340.638, 327.964)), ('W', '52', 1, 'side-chain clash', (341.205, 348.213, 301.297)), ('W', '54', 1, 'Dihedral angle:CA:C', (345.621, 344.85200000000003, 298.872)), ('W', '55', 1, 'Dihedral angle:N:CA', (347.547, 342.17, 297.103)), ('W', '57', 1, 'cablam CA Geom Outlier\nDihedral angle:CD:NE:CZ:NH1', (345.3, 340.4, 292.5)), ('W', '30', 2, 'backbone clash', (336.574, 343.697, 296.743)), ('W', '31', 2, 'backbone clash', (336.574, 343.697, 296.743)), ('W', '34', 2, 'side-chain clash', (332.783, 338.986, 296.161)), ('W', '6', 2, 'side-chain clash', (332.783, 338.986, 296.161)), ('W', '28', 3, 'side-chain clash', (341.222, 337.387, 299.529)), ('W', '60', 3, 'side-chain clash', (341.222, 337.387, 299.529)), ('W', '113', 4, 'side-chain clash', (312.67, 348.819, 298.446)), ('W', '86', 4, 'side-chain clash', (312.67, 348.819, 298.446)), ('W', '124', 5, 'side-chain clash', (317.284, 344.214, 285.23)), ('W', '80', 5, 'side-chain clash', (317.284, 344.214, 285.23)), ('W', '47', 6, 'cablam Outlier\nside-chain clash', (329.0, 344.4, 311.1)), ('W', '48', 6, 'side-chain clash', (329.793, 346.54, 310.338)), ('W', '104', 7, 'side-chain clash', (317.343, 344.526, 294.503)), ('W', '125', 7, 'side-chain clash', (317.343, 344.526, 294.503)), ('W', '93', 8, 'Bond angle:C', (312.07099999999997, 338.20799999999997, 302.52)), ('W', '94', 8, 'Bond angle:N:CA', (311.955, 340.323, 305.618)), ('X', '86', 1, 'cablam Outlier\nDihedral angle:CA:C', (269.1, 302.1, 297.6)), ('X', '87', 1, 'cablam Outlier\nDihedral angle:N:CA', (266.5, 301.6, 300.3)), ('X', '88', 1, 'cablam Outlier', (264.7, 299.0, 302.4)), ('X', '51', 2, 'side-chain clash', (267.07, 298.303, 283.953)), ('X', '72', 2, 'side-chain clash', (267.07, 298.303, 283.953)), ('X', '68', 3, 'side-chain clash', (266.924, 294.321, 294.715)), ('X', '91', 3, 'side-chain clash', (266.924, 294.321, 294.715)), ('Y', '108', 1, 'side-chain clash', (250.667, 341.06, 255.96)), ('Y', '109', 1, 'Rotamer\nDihedral angle:CB:CG:CD:OE1', (247.14399999999998, 339.792, 256.96799999999996)), ('Y', '111', 1, 'side-chain clash', (254.313, 343.297, 256.932)), ('Y', '112', 1, 'side-chain clash', (250.667, 341.06, 255.96)), ('Y', '113', 1, 'backbone clash', (241.284, 340.422, 254.102)), ('Y', '126', 1, 'backbone clash', (241.284, 340.422, 254.102)), ('Y', '13', 2, 'side-chain clash', (259.309, 373.548, 280.619)), ('Y', '15', 2, 'side-chain clash', (260.56, 371.422, 275.421)), ('Y', '22', 2, 'side-chain clash', (259.309, 373.548, 280.619)), ('Y', '66', 3, 'side-chain clash', (250.611, 356.915, 299.64)), ('Y', '67', 3, 'cablam Outlier', (252.1, 361.4, 302.0)), ('Y', '45', 4, 'backbone clash', (242.157, 377.091, 284.337)), ('Y', '50', 4, 'backbone clash\nRotamer', (243.526, 379.339, 282.706)), ('Y', '114', 5, 'side-chain clash', (248.771, 343.854, 245.685)), ('Y', '122', 5, 'side-chain clash', (248.771, 343.854, 245.685)), ('Y', '88', 6, 'side-chain clash', (245.074, 361.291, 267.107)), ('Y', '97', 6, 'side-chain clash', (245.074, 361.291, 267.107)), ('Y', '79', 7, 'side-chain clash', (241.467, 371.679, 270.747)), ('Y', '83', 7, 'side-chain clash', (241.467, 371.679, 270.747)), ('Y', '55', 8, 'side-chain clash', (247.776, 373.49, 282.178)), ('Y', '75', 8, 'side-chain clash', (247.776, 373.49, 282.178)), ('Y', '102', 9, 'side-chain clash', (244.939, 348.444, 263.013)), ('Y', '107', 9, 'side-chain clash', (244.939, 348.444, 263.013)), ('Y', '9', 10, 'backbone clash', (257.323, 375.228, 293.4)), ('Y', '64', 10, 'backbone clash', (257.427, 356.152, 302.713)), ('a', '30', 1, 'Rotamer', (334.434, 284.404, 297.885)), ('a', '67', 1, 'Rotamer', (353.344, 273.086, 309.908)), ('a', '84', 1, 'Rotamer', (333.54, 283.53, 314.108)), ('b', '17', 1, 'Rotamer\nDihedral angle:CD:NE:CZ:NH1', (354.279, 327.623, 307.888)), ('b', '40', 1, 'Rotamer', (387.396, 329.5710000000001, 288.142)), ('b', '69', 1, 'cablam Outlier', (362.6, 320.2, 294.3)), ('e', '49', 1, 'cablam Outlier', (279.4, 320.9, 339.4)), ('h', '6', 1, 'Dihedral angle:CD:NE:CZ:NH1', (308.599, 285.79099999999994, 286.817)), ('j', '148', 1, 'Dihedral angle:CB:CG:CD:OE1', (273.245, 309.661, 342.882)), ('j', '163', 1, 'Rotamer', (285.6369999999999, 298.375, 322.494))]
data['probe'] = [(" 21091    C HO2'", ' W   2  VAL  N  ', -0.822, (333.142, 324.912, 288.394)), (" 2 190    G  O2'", ' 2 209    A  N6 ', -0.756, (300.371, 385.613, 205.851)), (' 2 958    G  N2 ', ' 2 965    U  O4 ', -0.736, (332.969, 255.269, 293.743)), (' 21153    C  OP2', ' W  71  LYS  NZ ', -0.729, (320.091, 330.531, 305.065)), (" 2 164    A  H3'", ' 2 165    G  H21', -0.715, (250.585, 339.721, 225.155)), (' C 259  THR HG21', ' V  16  LYS  H  ', -0.698, (322.781, 340.802, 327.722)), (' G  64  LYS  HB2', ' G  97  VAL HG11', -0.679, (258.52, 332.13, 223.897)), (' H  93  VAL HG11', ' H 133  LEU HD12', -0.678, (356.795, 362.663, 297.094)), (' H 147  LYS  HD2', ' H 151  SER  HB2', -0.675, (337.08, 357.538, 307.57)), (' J 136  ARG  NH1', ' J 159  PHE  O  ', -0.666, (254.898, 360.44, 313.903)), (' G  85  ARG  O  ', ' G  87  ARG  NH1', -0.665, (257.391, 339.4, 236.972)), (' B 107  ARG  NH2', ' O 133  THR  O  ', -0.663, (354.323, 270.435, 298.905)), (' B  67  THR  OG1', ' B  70  LYS  O  ', -0.65, (366.319, 319.262, 293.134)), (" 21717    C  H3'", ' 21718    G  H8 ', -0.648, (294.745, 289.963, 266.414)), (' O  98  ARG  NH1', ' O  99  ALA  O  ', -0.64, (349.295, 264.872, 298.746)), (" 2 640    A  H2'", ' 2 641    A  C8 ', -0.634, (271.332, 324.751, 310.539)), (' W  80  ASP  OD1', ' W 124  LYS  NZ ', -0.632, (317.284, 344.214, 285.23)), (' E 246  LEU  HB3', ' E 250  GLU  HG3', -0.63, (291.056, 371.348, 291.616)), (" 2 981    A  H2'", ' 2 982    G  C8 ', -0.63, (349.124, 272.95, 277.026)), (" 2  96    C  H1'", " 2 474    G  H5'", -0.623, (268.688, 333.724, 263.449)), (' A 184  ARG  HD2', ' A 191  ARG  HG2', -0.622, (349.706, 336.927, 350.789)), (' C 116  THR  OG1', ' C 119  GLY  O  ', -0.621, (301.436, 291.462, 328.215)), (' I  89  GLU  OE2', ' I  92  ARG  NH2', -0.618, (300.528, 330.756, 218.831)), (" 2 797    C  O3'", ' H 109  ARG  NH1', -0.614, (327.776, 363.01, 269.278)), (' 2 568    C  N4 ', ' 2 582    U  O2 ', -0.613, (241.373, 352.541, 298.072)), (' L 125  ILE  HB ', ' L 146  THR HG23', -0.612, (325.292, 347.163, 260.854)), (' C  83  LEU  O  ', ' V  15  ARG  NH1', -0.611, (318.872, 335.508, 332.824)), (' 2 126    G  OP1', ' G 198  ARG  NH1', -0.61, (275.996, 378.313, 236.613)), (' A 184  ARG  HG2', ' A 189  ILE HG13', -0.607, (347.329, 334.946, 353.15)), (' H  46  THR HG23', ' H  65  PRO  HD3', -0.605, (359.19, 368.215, 282.96)), (" 2 895    G  H2'", ' 2 896    U  C6 ', -0.605, (336.648, 383.588, 227.482)), (' A   3  LYS  NZ ', ' A   8  ASN  OD1', -0.604, (327.781, 299.232, 303.033)), (' E 140  VAL HG22', ' E 146  THR HG22', -0.603, (288.81, 372.228, 251.215)), (' 2 835    C  N4 ', ' Y   9  THR  O  ', -0.603, (257.323, 375.228, 293.4)), (' 2 679    A  N6 ', ' 21026    C  O2 ', -0.601, (324.778, 320.602, 276.603)), (' 2 496    C  OP1', ' E  49  ARG  NH2', -0.598, (267.997, 359.491, 272.166)), (' 2 563    G  H1 ', ' 2 592    C  H5 ', -0.596, (246.238, 337.372, 308.663)), (' O  53  ILE HG23', ' O  88  LEU HD12', -0.596, (361.999, 245.771, 302.671)), (" 21010    G  H2'", ' 21011    A  H8 ', -0.594, (349.543, 312.213, 285.315)), (" 2 373    G  H4'", ' L  85  THR HG21', -0.59, (314.363, 337.599, 246.279)), (" 21762    C  H2'", ' 21763    G  H8 ', -0.585, (255.118, 380.547, 187.379)), (" 2 581    U  H4'", ' Y  66  GLY  HA2', -0.583, (250.611, 356.915, 299.64)), (' H  69  LEU  O  ', ' H  73  GLN  HG2', -0.582, (363.754, 358.625, 288.065)), (' N  55  ARG  NH1', ' N  56  ASP  OD1', -0.582, (365.223, 328.26, 285.899)), (" 2 527    C  H2'", ' 2 528    A  H8 ', -0.581, (252.516, 341.817, 327.979)), (' A  38  ILE HD11', ' A  47  TYR  HB3', -0.58, (353.166, 321.312, 326.836)), (' 21147    C  OP1', ' A   6  ARG  NH1', -0.578, (329.691, 306.49, 308.518)), (" 2 528    A  H2'", ' 2 529    A  H8 ', -0.577, (250.526, 340.535, 333.106)), (" 21856    C  H2'", ' 21857    G  C8 ', -0.574, (329.398, 283.705, 286.699)), (" 2 898    U  H2'", " 2 899    U H5''", -0.574, (341.482, 382.891, 240.535)), (' H 144  ILE  HB ', ' W  52  ILE  HB ', -0.573, (341.205, 348.213, 301.297)), (" 2 145    G  H2'", ' 2 146    G  C8 ', -0.573, (259.03, 360.702, 219.42)), (' Y  55  ILE HG13', ' Y  75  ILE HG12', -0.57, (247.776, 373.49, 282.178)), (' 2 641    A  OP1', ' J  40  LYS  NZ ', -0.569, (274.786, 329.104, 313.492)), (' 2 797    C  O2 ', ' H 109  ARG  NH2', -0.567, (325.803, 364.398, 271.71)), (" 21098    C  H2'", ' 21099    G  C8 ', -0.567, (345.188, 312.372, 314.976)), (' G 135  PRO  HG2', ' G 141  ILE HD13', -0.567, (245.909, 366.879, 221.245)), (" 2 792    C  O2'", ' 2 793    G  H8 ', -0.566, (319.074, 378.308, 270.443)), (' H 119  SER  OG ', ' H 120  ARG  NH1', -0.564, (349.422, 355.639, 279.534)), (' E 100  ARG  NH2', ' E 121  TYR  O  ', -0.56, (281.74, 382.341, 266.25)), (' X  68  LYS  HB3', ' X  91  LEU HD22', -0.559, (266.924, 294.321, 294.715)), (' B  38  MET  HE2', ' B 182  LYS  HG2', -0.557, (383.796, 269.27, 293.068)), (" 2 220    U  H2'", ' 2 221    A  H8 ', -0.556, (303.89, 360.291, 226.33)), (' I 101  ILE HD12', ' I 190  LEU HD11', -0.556, (310.971, 348.928, 220.011)), (" 21780    G  H2'", ' 21781    A  N3 ', -0.555, (256.317, 347.663, 197.659)), (' 2 803    C  N3 ', ' 2 860    G  N1 ', -0.554, (317.921, 353.208, 282.009)), (" 21713    C  H2'", ' 21714    U  C6 ', -0.554, (285.507, 291.211, 281.491)), (' I  57  ALA  HB2', ' I 183  GLY  HA2', -0.554, (291.14, 349.603, 223.744)), (' 2 387    C  OP2', ' I  10  LYS  NZ ', -0.551, (301.608, 332.192, 242.761)), (" 2 857    U  H2'", ' 2 858    A  C8 ', -0.549, (311.101, 360.183, 275.482)), (" 2 107    A  H2'", ' 2 108    G  C8 ', -0.547, (295.289, 344.993, 269.512)), (' 2 126    G  OP2', ' G 195  LYS  NZ ', -0.547, (276.443, 377.686, 232.439)), (' A  34  MET  HE3', ' A 154  LEU HD11', -0.546, (342.547, 324.533, 328.303)), (' 2  54    A  OP1', ' Y 111  LYS  NZ ', -0.545, (254.313, 343.297, 256.932)), (' W  30  CYS  SG ', ' W  31  SER  N  ', -0.538, (336.574, 343.697, 296.743)), (" 2 319    C  H2'", ' 2 320    G  C8 ', -0.534, (255.63, 390.096, 240.634)), (" 2 527    C  H4'", ' J 121  LYS  HD2', -0.534, (255.359, 345.045, 325.541)), (" 2 377    G  H5'", ' I  98  LYS  HB3', -0.533, (302.856, 346.411, 228.974)), (' B 146  ARG  HB2', ' B 149  GLN  HB2', -0.531, (363.051, 300.557, 311.539)), (' H  51  ILE HG21', ' H 179  LYS  HG2', -0.529, (350.071, 371.494, 298.441)), (" 21010    G  H2'", ' 21011    A  C8 ', -0.529, (349.704, 311.861, 285.47)), (' C 183  LYS  HA ', ' C 195  LEU  O  ', -0.529, (306.718, 334.83, 312.056)), (' J 136  ARG  HD3', ' J 160  SER  HA ', -0.528, (255.202, 359.4, 311.529)), (" 2 980    A  H2'", ' 2 981    A  C8 ', -0.527, (353.026, 269.118, 276.435)), (" 2  35    C  H5'", " 2 579    C H5''", -0.527, (253.816, 343.342, 295.358)), (' Y 113  ARG  NH2', ' Y 126  GLY  O  ', -0.527, (241.284, 340.422, 254.102)), (" 2 558    G  H2'", ' 2 559    G  C8 ', -0.527, (242.522, 340.38, 325.841)), (" 21763    G  H2'", ' 21764    G  C8 ', -0.526, (251.724, 380.004, 183.402)), (" 21828    C  H2'", " 21829    G  O4'", -0.525, (302.282, 268.859, 296.759)), (" 2 847    A  O2'", ' E 106  LYS  NZ ', -0.524, (285.612, 365.037, 287.788)), (' A  77  ILE HG12', ' A  99  ILE  HB ', -0.523, (332.511, 317.141, 345.357)), (' A 132  GLN  NE2', ' A 136  GLU  OE2', -0.52, (325.799, 313.576, 337.452)), (" 21856    C  H2'", ' 21857    G  H8 ', -0.519, (330.362, 283.611, 286.69)), (" 2 325    C  O2'", " 2 326    C  O4'", -0.519, (253.493, 399.661, 223.898)), (" 2 367    U  H4'", ' 2 371    A  C8 ', -0.519, (307.254, 324.891, 243.798)), (' H  22  GLN  HG3', ' H  24  SER  H  ', -0.519, (305.597, 285.188, 259.701)), (" 2 118    C  H1'", ' 2 445    A  C5 ', -0.519, (275.505, 354.006, 247.759)), (' A  22  ARG  NH1', ' A  27  ALA  O  ', -0.519, (334.471, 276.384, 295.032)), (' L  91  ASP  HB3', ' L 104  LYS  HE2', -0.516, (318.503, 336.489, 269.526)), (' 2  69    C  OP2', ' G 164  LYS  NZ ', -0.514, (231.426, 357.947, 240.608)), (" 2 528    A  H2'", ' 2 529    A  C8 ', -0.513, (250.526, 340.399, 332.618)), (" 21860    A H5''", ' A   8  ASN  HB3', -0.513, (328.527, 295.384, 301.323)), (" 2 115    U  H2'", ' 2 116    U  C6 ', -0.511, (290.822, 353.317, 246.023)), (" 2 223    C  H2'", ' 2 224    A  C8 ', -0.511, (311.138, 371.461, 231.684)), (" 2 220    U  H2'", ' 2 221    A  C8 ', -0.511, (303.591, 360.954, 226.172)), (" 2 674    C  H2'", ' 2 675    U  C6 ', -0.51, (331.766, 307.694, 281.313)), (' A 144  THR  OG1', ' A 156  TYR  O  ', -0.51, (332.793, 324.6, 334.16)), (' N  99  ARG  NH2', ' N 119  GLU  OE1', -0.509, (342.725, 312.064, 265.399)), (" 21714    U  H2'", ' 21715    A  H8 ', -0.509, (288.417, 294.204, 278.797)), (' 2 928    G  H1 ', ' 21013    U  H3 ', -0.508, (356.473, 318.103, 289.435)), (' 2 919    A  OP2', ' N  64  ARG  NH2', -0.508, (352.305, 340.557, 285.458)), (' B 108  ASP  N  ', ' B 108  ASP  OD1', -0.507, (360.483, 273.357, 306.344)), (' B  68  GLU  HG2', ' B  85  LYS  HG2', -0.507, (367.28, 265.659, 295.9)), (' 21846    G  O6 ', ' H   8  LYS  NZ ', -0.507, (316.845, 279.294, 283.256)), (" 21808    U  H2'", ' 21809    A  H8 ', -0.506, (290.997, 304.861, 257.571)), (' W  86  LEU HD21', ' W 113  HIS  HB2', -0.505, (312.67, 348.819, 298.446)), (' B  52  THR HG22', ' B  54  GLY  H  ', -0.505, (371.572, 239.185, 283.846)), (' 2 384    U  O4 ', ' I   5  ARG  NH2', -0.504, (296.94, 341.612, 241.736)), (' 21139    C  H5 ', ' 21149    A  H62', -0.503, (328.317, 320.16, 309.674)), (' A  59  PHE  HB2', ' A  62  TYR  HB2', -0.502, (368.159, 264.972, 316.199)), (" 2 190    G H5''", ' 2 191    A  OP1', -0.502, (305.746, 382.767, 204.712)), (' C 165  VAL HG21', ' C 217  ALA  HB1', -0.501, (302.343, 333.076, 324.582)), (' G  57  ASP  HA ', ' G 106  LEU  HA ', -0.501, (248.481, 325.767, 222.337)), (' H   9  VAL HG12', ' H  11  PRO  HD3', -0.5, (359.212, 376.353, 282.804)), (" 2 957    A  H2'", ' 2 958    G  H8 ', -0.499, (339.94, 254.378, 296.014)), (" 21714    U  H2'", ' 21715    A  C8 ', -0.499, (288.605, 293.908, 279.142)), (' I 141  ARG  HB2', ' I 146  GLN  HG2', -0.498, (312.134, 382.017, 201.657)), (' I  11  ARG  NH1', ' I  15  GLY  O  ', -0.497, (303.548, 323.297, 251.669)), (" 2  29    G  H2'", ' 2  30    C  C6 ', -0.496, (261.999, 316.926, 295.733)), (' G 120  ASP  HB2', ' G 125  THR  HB ', -0.496, (232.447, 344.902, 209.635)), (" 2 996    A  H2'", ' 2 997    A  C8 ', -0.496, (336.264, 304.927, 283.931)), (' B  30  TRP  CD2', ' O  19  PRO  HG3', -0.494, (370.966, 246.474, 302.45)), (" 2  16    G  H2'", ' 2  17    C  C6 ', -0.493, (298.988, 309.78, 299.919)), (' A 206  ASP  O  ', ' A 209  GLU  N  ', -0.493, (353.033, 304.644, 351.632)), (" 21808    U  H2'", ' 21809    A  C8 ', -0.492, (290.81, 304.981, 257.343)), (' L  73  LEU HD12', ' L 109  MET  HE1', -0.49, (311.365, 344.165, 260.468)), (' E 212  ASP  OD1', ' E 216  ASN  N  ', -0.489, (299.909, 375.114, 285.124)), (' 2 126    G  N2 ', ' 2 180    G  N3 ', -0.488, (274.723, 382.371, 227.647)), (' Y 102  THR HG23', ' Y 107  ARG HH11', -0.487, (244.939, 348.444, 263.013)), (' A 206  ASP  O  ', ' A 208  GLU  N  ', -0.487, (351.575, 304.214, 350.971)), (" 2 201    C  H3'", ' 2 202    G  H8 ', -0.486, (322.263, 393.116, 201.535)), (' H  69  LEU HD22', ' H  96  ALA  HB2', -0.485, (357.249, 360.404, 287.194)), (' H 145  ARG  NH2', ' W  51  GLU  OE1', -0.485, (342.426, 347.085, 309.99)), (' L 103  GLU  OE2', ' X  14  ARG  NH2', -0.485, (308.511, 329.76, 275.908)), (" 21717    C  H3'", ' 21718    G  C8 ', -0.484, (294.108, 289.392, 266.817)), (' H 163  GLN  NE2', ' H 167  GLU  OE1', -0.484, (361.955, 353.419, 311.725)), (" 2 527    C  H2'", ' 2 528    A  C8 ', -0.483, (252.242, 341.491, 328.269)), (" 21845    A  H2'", ' 21846    G  C8 ', -0.483, (319.711, 278.959, 279.439)), (' B  30  TRP  CE2', ' B  48  LEU HD13', -0.483, (369.152, 245.704, 300.406)), (" 2 942    G  H2'", ' 2 943    U  C6 ', -0.483, (355.896, 276.308, 288.974)), (" 21713    C  H2'", ' 21714    U  H6 ', -0.483, (285.108, 291.502, 281.809)), (' W   6  VAL HG12', ' W  34  ILE HD11', -0.479, (332.783, 338.986, 296.161)), (" 21201    U  H2'", ' 21202    U  C6 ', -0.479, (309.725, 297.268, 321.32)), (' W 104  LEU HD23', ' W 125  ILE  HA ', -0.478, (317.343, 344.526, 294.503)), (' 2 560    A  OP2', ' J 177  ASN  ND2', -0.478, (239.561, 344.855, 322.029)), (' N  83  ASP  N  ', ' N  83  ASP  OD1', -0.477, (354.328, 329.601, 262.891)), (" 2 656    G  H5'", ' 2 662    G  N2 ', -0.476, (302.501, 323.472, 296.031)), (" 21736    G  H2'", ' 21737    G  C8 ', -0.476, (276.369, 328.767, 233.521)), (" 21139    C  H2'", " 21140    G  O4'", -0.475, (325.553, 322.418, 313.598)), (" 2 874    G  H2'", ' 2 875    A  H8 ', -0.474, (345.415, 358.209, 264.581)), (' A  49  ALA  HB2', ' O 113  GLN HE21', -0.474, (351.779, 262.027, 318.6)), (" 2 164    A  H3'", ' 2 165    G  N2 ', -0.472, (250.358, 339.545, 225.902)), (" 2 795    A  H2'", ' 2 796    G  C8 ', -0.472, (323.631, 367.58, 264.606)), (' O  34  PHE  HB3', ' O  41  PHE  HB2', -0.472, (349.609, 257.533, 301.491)), (' 21182    A  OP1', ' H  18  ARG  NH1', -0.47, (313.193, 285.742, 269.235)), (' 2 803    C  O2 ', ' 2 860    G  N2 ', -0.469, (317.859, 351.989, 285.056)), (" 2 798    G  H3'", " 2 799    U  H3'", -0.469, (327.379, 356.026, 271.333)), (' W  28  ARG  HB3', ' W  60  LYS  HG2', -0.469, (341.222, 337.387, 299.529)), (' I  10  LYS  O  ', ' I  18  ARG  NH1', -0.468, (298.781, 330.87, 251.025)), (' 2 496    C  P  ', ' E  49  ARG HH22', -0.467, (266.955, 359.154, 272.331)), (' 21863    A  OP2', ' A   4  LYS  NZ ', -0.467, (323.115, 289.866, 310.59)), (' 2 656    G  N2 ', " 2 663    C H5''", -0.467, (309.803, 323.642, 299.851)), (" 2 189    U  H2'", " 2 190    G  O4'", -0.466, (302.672, 381.95, 207.59)), (" 2 928    G  H2'", ' 2 929    G  C8 ', -0.466, (362.419, 315.909, 287.013)), (" 2 322    C  H2'", ' 2 323    C  C6 ', -0.466, (261.062, 400.439, 231.163)), (' Y  88  LYS  HD2', ' Y  97  TYR  CD1', -0.466, (245.074, 361.291, 267.107)), (' H  57  ARG  HE ', ' H  91  HIS  CD2', -0.465, (360.644, 369.749, 306.5)), (" 2 882    U  H2'", ' 2 883    U  C6 ', -0.464, (344.637, 367.321, 239.081)), (' N 110  ASP  O  ', ' N 114  ARG  HG2', -0.464, (344.057, 306.563, 276.002)), (" 21797    U  H2'", ' 21798    C  C6 ', -0.463, (286.734, 328.336, 234.369)), (' I 130  THR HG22', ' I 131  PRO  HD2', -0.463, (302.922, 366.031, 191.51)), (" 2  77    A  H1'", ' G 176  ILE HG13', -0.463, (246.251, 371.995, 228.604)), (" 2 429    C  O2'", ' 2 811    A  N1 ', -0.463, (281.252, 347.468, 272.733)), (' G  21  GLU  O  ', ' G  25  ARG  HG2', -0.462, (242.9, 321.846, 207.642)), (' H  78  ARG HH21', ' H  81  ARG HH22', -0.46, (377.238, 364.354, 297.197)), (' B  83  GLN HE22', ' N  19  ARG HH12', -0.46, (364.878, 344.05, 297.27)), (' A  78  SER  HB2', ' A  87  VAL HG21', -0.459, (339.668, 316.783, 345.369)), (" 21036    A  H4'", ' 21855    G  N2 ', -0.459, (326.506, 281.62, 281.701)), (' I 133  GLU  N  ', ' I 133  GLU  OE1', -0.459, (304.47, 367.418, 196.368)), (' H  76  GLN  HG2', ' H 135  PHE  CD2', -0.458, (364.359, 358.961, 294.367)), (' 2  67    C  H41', ' G 164  LYS  H  ', -0.458, (228.058, 362.076, 235.575)), (" 21717    C  H2'", ' 21717    C  O2 ', -0.458, (294.973, 287.334, 267.982)), (" 21060    A  O2'", ' 21062    A  N7 ', -0.457, (315.836, 264.4, 294.574)), (" 2 406    U  O2'", ' 2 408    A  OP1', -0.456, (288.988, 320.98, 272.526)), (' H   9  VAL HG23', ' H  24  SER  HB3', -0.456, (363.751, 376.684, 285.991)), (' E  11  ARG  HA ', ' E  28  ALA  HB2', -0.454, (273.699, 354.324, 272.451)), (' 2 398    A  OP1', " 2 399    C  O2'", -0.454, (314.807, 328.162, 266.473)), (" 2 674    C  H2'", ' 2 675    U  H6 ', -0.448, (331.364, 308.414, 281.498)), (" 21121    G  O2'", ' B 204  ILE  O  ', -0.447, (367.927, 302.306, 299.343)), (' 2  65    C  C2 ', ' G 133  LEU HD22', -0.446, (241.985, 361.602, 228.743)), (' C  78  LEU HD12', ' C  81  ILE HD12', -0.446, (309.638, 332.828, 338.988)), (' N 102  LEU HD13', ' N 111  ALA  HB3', -0.446, (346.041, 303.485, 270.908)), (" 21736    G  H2'", ' 21737    G  H8 ', -0.446, (276.003, 328.355, 233.53)), (' A 151  ASP  N  ', ' A 151  ASP  OD1', -0.445, (347.052, 316.598, 328.169)), (' 21836    G  OP1', " 21839    U  H4'", -0.445, (319.763, 279.179, 303.767)), (" 2 168    C  H4'", ' G 132  ARG  HD3', -0.445, (242.957, 355.722, 221.055)), (" 21845    A  H2'", ' 21846    G  H8 ', -0.444, (319.351, 278.564, 279.386)), (' H 101  LEU HD12', ' H 116  ARG  HG3', -0.444, (342.529, 358.138, 278.443)), (" 2 911    C  O2'", " 2 912    C  H5'", -0.443, (352.16, 365.989, 270.922)), (' A 103  PHE  CG ', ' A 133  PRO  HG3', -0.443, (330.51, 314.712, 340.916)), (" 2  25    A HO2'", ' 2  26    U  H6 ', -0.442, (274.704, 324.556, 287.114)), (" 21105    G  O3'", ' B  69  GLY  HA3', -0.441, (362.144, 319.747, 295.953)), (" 21164    G  O2'", " 21165    G  H5'", -0.44, (307.107, 308.684, 291.43)), (" 21047    C  H2'", " 21048    G  O4'", -0.44, (333.232, 272.427, 285.46)), (" 2  81    U  H2'", " 2  82    G  O4'", -0.44, (242.778, 362.255, 247.397)), (" 2 941    C  H2'", ' 2 942    G  C8 ', -0.44, (358.573, 279.212, 285.885)), (" 21025    U  H2'", " 21026    C  O4'", -0.44, (326.214, 318.992, 281.048)), (" 21113    A  H2'", ' 21114    U  C6 ', -0.439, (377.737, 302.011, 303.126)), (" 2 948    C  H2'", ' 2 949    G  H8 ', -0.439, (354.044, 256.793, 278.753)), (" 2  51    U  H2'", ' 2  52    G  C8 ', -0.439, (251.348, 330.262, 259.563)), (' O  74  ALA  HB1', ' O 115  ALA  HB2', -0.438, (348.877, 255.739, 310.536)), (" 2  96    C  H2'", ' 2  97    U  C6 ', -0.438, (272.547, 333.346, 265.896)), (' 2 594    A  H61', " 2 643    A H5''", -0.437, (262.345, 331.042, 306.104)), (' J 140  GLN  NE2', ' Y  64  PHE  O  ', -0.436, (257.427, 356.152, 302.713)), (' E  11  ARG  HD3', ' E  21  ASP  O  ', -0.436, (271.666, 354.679, 277.911)), (' J 163  THR HG22', ' J 164  LYS  H  ', -0.435, (283.407, 297.317, 322.127)), (' B 123  ALA  HB2', ' B 165  ARG  HG3', -0.435, (366.101, 289.139, 290.941)), (" 2 804    U  H2'", ' 2 805    U  C6 ', -0.433, (312.387, 353.809, 286.066)), (' I   3  ILE  O  ', ' I  30  GLY  N  ', -0.433, (288.793, 337.158, 239.545)), (' Y  79  LEU  HG ', ' Y  83  LYS  HE3', -0.433, (241.467, 371.679, 270.747)), (" 2  28    U  H2'", ' 2  29    G  H8 ', -0.433, (265.334, 316.58, 291.534)), (' A  30  LEU HD21', ' A  35  GLU  HG3', -0.433, (349.641, 323.809, 322.079)), (' G 143  LYS  HB2', ' G 143  LYS  HE3', -0.432, (253.151, 367.011, 215.698)), (" 21046    U  H1'", ' O 140  THR  HB ', -0.432, (342.087, 272.776, 285.853)), (" 21712    A  H2'", ' 21713    C  C6 ', -0.431, (283.53, 287.402, 284.29)), (" 21189    A  H2'", ' 21190    A  C8 ', -0.43, (293.407, 300.731, 280.33)), (" 2 155    G  H4'", ' G  15  LEU HD22', -0.43, (238.417, 333.676, 224.331)), (' B  31  TYR  CD2', ' B  94  LYS  HA ', -0.43, (377.499, 247.639, 294.622)), (' J  48  PHE  CZ ', ' J  52  LYS  HE3', -0.43, (281.953, 341.576, 300.193)), (' Y  13  MET  HG3', ' Y  22  GLN  HG3', -0.43, (259.309, 373.548, 280.619)), (' Y 108  LYS  O  ', ' Y 112  ASN  ND2', -0.429, (250.667, 341.06, 255.96)), (' 2 396    U  OP2', ' L  79  LYS  NZ ', -0.429, (316.861, 330.194, 254.544)), (" 21007    C  H2'", ' 21008    A  C8 ', -0.429, (355.336, 303.928, 273.637)), (' L  30  LYS  HG3', ' L  32  LYS  HB2', -0.429, (329.947, 361.071, 229.615)), (' 2 170    A  OP2', ' G 140  ARG  NH1', -0.429, (252.444, 360.879, 223.813)), (" 21203    G  H2'", ' 21204    A  C8 ', -0.428, (307.339, 287.821, 322.001)), (' G 120  ASP  N  ', ' G 120  ASP  OD1', -0.428, (230.153, 343.282, 206.794)), (' B  28  LYS  HB3', ' B  48  LEU HD11', -0.428, (367.789, 243.67, 297.511)), (' A  88  SER  O  ', ' A  92  ARG  HG3', -0.428, (327.6, 293.941, 317.375)), (' A  76  VAL HG12', ' A 123  VAL  HB ', -0.428, (337.245, 323.272, 344.835)), (' E 151  ASP  HB3', ' E 154  ILE HG13', -0.427, (296.669, 384.373, 255.302)), (' A 149  ASN  OD1', ' A 150  THR  N  ', -0.427, (348.292, 318.8, 330.884)), (" 2 102    A  H4'", ' 2 104    A  C8 ', -0.427, (295.645, 330.037, 262.999)), (" 2 160    U  O2'", ' 2 162    C  OP2', -0.427, (251.226, 333.341, 240.089)), (' G   7  PHE  O  ', ' G  11  GLY  N  ', -0.427, (239.13, 347.445, 216.33)), (' J 131  ARG  HA ', ' J 131  ARG  HD2', -0.426, (258.422, 346.033, 309.043)), (' A  52  ASP  OD2', ' O 117  ARG  NE ', -0.426, (352.917, 258.28, 321.905)), (' V  51  LYS  HD2', ' V  78  ILE HD11', -0.426, (337.427, 342.67, 336.959)), (' 2 333    G  OP2', ' G 190  ARG  NH1', -0.425, (266.926, 385.259, 241.101)), (' L 111  VAL HG12', ' L 140  PHE  HB2', -0.425, (313.226, 343.632, 254.825)), (' W  47  ILE HG13', ' W  48  GLY  H  ', -0.425, (329.793, 346.54, 310.338)), (" 2 917    U  H2'", ' 2 918    U  C6 ', -0.425, (346.477, 343.994, 283.819)), (" 2 563    G  O2'", ' 2 564    A  H8 ', -0.425, (248.373, 340.749, 304.818)), (' Y 114  MET  O  ', ' Y 122  LYS  NZ ', -0.424, (248.771, 343.854, 245.685)), (" 2 882    U  H2'", ' 2 883    U  H6 ', -0.424, (345.085, 367.353, 239.023)), (' I 149  TYR  O  ', ' I 153  LYS  HG3', -0.424, (316.828, 375.658, 206.987)), (' O  39  ASP  OD1', ' O  40  THR  N  ', -0.423, (344.342, 255.188, 303.759)), (" 2 352    U  H2'", ' 2 353    C  C6 ', -0.423, (304.664, 344.592, 261.947)), (" 21101    U  H2'", ' 21102    G  C8 ', -0.423, (350.048, 306.342, 303.582)), (" 2 871    U  O2'", ' 2 873    G  OP1', -0.423, (351.833, 348.262, 259.317)), (' I  81  VAL HG22', ' I 102  VAL HG12', -0.422, (302.797, 344.927, 217.375)), (' E  38  TYR  CG ', ' J  33  GLY  HA3', -0.422, (269.955, 335.647, 322.252)), (" 2 441    C  H2'", ' 2 442    C  C6 ', -0.422, (275.054, 338.048, 239.054)), (' A  33  GLN  HB3', ' A 154  LEU HD12', -0.421, (340.46, 325.035, 325.44)), (" 2 946    U  H2'", ' 2 947    G  H8 ', -0.42, (347.194, 263.192, 282.452)), (" 2 533    A  H2'", ' 2 534    G  H8 ', -0.42, (263.652, 329.997, 340.836)), (' 2 540    U  N3 ', ' 2 542    U  OP1', -0.42, (269.391, 335.696, 358.391)), (' A  68  ILE HD11', ' A 121  LEU  HB2', -0.42, (331.171, 330.464, 343.503)), (' B  63  LYS  HE3', ' B  90  ASP  HA ', -0.42, (377.903, 254.21, 286.392)), (" 21763    G  H2'", ' 21764    G  H8 ', -0.419, (251.354, 380.37, 183.381)), (' 21128    C  OP1', ' B  17  ARG  NH2', -0.419, (349.98, 323.58, 309.962)), (' L  23  VAL HG23', ' L  26  GLY  H  ', -0.418, (328.055, 369.145, 220.084)), (' 21764    G  H1 ', ' 21768    A  H62', -0.418, (244.915, 378.981, 185.939)), (" 21118    C  H3'", ' 21119    A  C8 ', -0.418, (377.28, 314.075, 302.013)), (' N   4  MET  HG2', ' N   5  HIS  CD2', -0.418, (338.925, 318.259, 279.287)), (" 21788    A  H2'", " 21789    G  O4'", -0.418, (268.233, 345.169, 218.754)), (" 2 810    A  H5'", ' 2 811    A  OP2', -0.417, (291.223, 355.217, 273.351)), (" 2 838    G  O2'", " 2 839    C  H4'", -0.417, (257.447, 384.074, 287.022)), (' O  86  LYS  NZ ', ' O 122  SER  O  ', -0.416, (360.237, 246.969, 316.346)), (' G  78  SER  HB3', ' G  92  ARG  HG2', -0.416, (267.572, 338.45, 233.343)), (' B 223  PHE  HE1', ' B 228  LEU HD12', -0.416, (380.804, 259.503, 285.986)), (" 2  12    U  H2'", ' 2  13    C  C6 ', -0.416, (305.336, 306.435, 315.865)), (' 21714    U  C2 ', ' 21715    A  C8 ', -0.415, (289.046, 292.253, 279.651)), (' J 139  LYS  HA ', ' J 139  LYS  HD3', -0.415, (258.286, 363.152, 308.782)), (" 2  15    U  H2'", " 2  16    G  O4'", -0.415, (303.952, 308.968, 301.126)), (' 2 567    C  O2 ', ' 2 583    A  N6 ', -0.415, (239.196, 346.235, 298.494)), (' 21170    A  N6 ', ' 21189    A  N7 ', -0.415, (298.971, 300.735, 281.15)), (' 2 946    U  C2 ', ' 2 947    G  C8 ', -0.414, (348.476, 264.363, 282.36)), (' E 141  THR  OG1', ' E 143  ASP  OD1', -0.414, (286.528, 374.287, 258.286)), (" 2 219    U  H1'", ' I 184  ARG  HD2', -0.414, (295.181, 357.339, 225.717)), (" 2 958    G  H2'", ' 2 959    G  C8 ', -0.414, (336.516, 257.621, 296.542)), (" 2 793    G  H2'", ' 2 794    A  H8 ', -0.413, (318.713, 375.956, 266.585)), (" 21767    C  H4'", ' 21768    A  N3 ', -0.413, (240.089, 378.308, 189.656)), (" 2 406    U  H2'", " 2 408    A H5''", -0.413, (288.551, 321.998, 270.749)), (' O  71  PRO  HB3', ' O 114  SER  OG ', -0.412, (345.506, 257.651, 315.352)), (' B  87  ILE HG22', ' B 101  HIS  HB2', -0.412, (372.976, 264.58, 290.549)), (" 2 957    A  H2'", ' 2 958    G  C8 ', -0.412, (339.828, 254.247, 295.775)), (' B  67  PHE  CE2', ' O  48  SER  HB3', -0.411, (369.372, 256.375, 296.269)), (' E  51  LYS  HE2', ' E  53  LYS  NZ ', -0.411, (276.855, 312.477, 333.357)), (" 2 801    U  H2'", ' 2 802    A  H8 ', -0.411, (319.453, 347.97, 276.653)), (" 2 165    G  H4'", ' G  53  SER  HB3', -0.411, (249.238, 338.684, 219.102)), (' E  55  ALA  HB1', ' E  60  GLU  HB2', -0.411, (261.15, 366.676, 272.563)), (' C 209  VAL  HB ', ' C 210  PRO  HD3', -0.41, (296.81, 322.654, 316.425)), (' B  49  HIS  ND1', ' B  69  GLY  O  ', -0.41, (363.204, 323.766, 294.114)), (' G   7  PHE  CE2', ' G   9  ALA  HB3', -0.41, (238.926, 348.61, 211.65)), (' X  51  VAL  HA ', ' X  72  VAL HG12', -0.41, (267.07, 298.303, 283.953)), (' H 134  VAL HG12', ' H 173  PHE  CD2', -0.409, (357.124, 359.07, 301.792)), (" 21031    A  H4'", ' N 112  LYS  HE2', -0.409, (336.826, 304.98, 269.409)), (' E  54  TYR  O  ', ' Y  15  ASN  ND2', -0.409, (260.56, 371.422, 275.421)), (' L  75  GLY  HA3', ' L  88  ILE HD12', -0.409, (317.908, 342.29, 260.078)), (' Y  45  ALA  HB1', ' Y  50  THR  O  ', -0.408, (242.157, 377.091, 284.337)), (" 2   5    U  H2'", ' 2   6    G  H8 ', -0.408, (291.075, 313.48, 310.475)), (' 2 618    C  H41', ' X  67  ARG  NH2', -0.408, (276.173, 296.828, 303.656)), (' H   6  ARG  O  ', ' H  10  MET  HG2', -0.408, (307.394, 286.984, 283.675)), (" 2 749    U  H2'", ' 2 750    C  C6 ', -0.408, (328.737, 378.201, 262.615)), (" 2 443    U  H2'", " 2 444    G  O4'", -0.407, (272.566, 347.454, 241.184)), (" 21019    C  H2'", " 21020    A  O4'", -0.407, (347.076, 334.107, 277.22)), (" 2 795    A  H2'", ' 2 796    G  H8 ', -0.407, (323.115, 367.532, 264.604)), (' I 105  ASP  OD1', ' I 106  SER  N  ', -0.406, (304.501, 355.553, 207.709)), (' C 259  THR HG21', ' V  16  LYS  N  ', -0.406, (322.09, 340.638, 327.964)), (' 21719    A  H8 ', ' 21814    G  H21', -0.406, (289.15, 285.672, 261.518)), (' 2 317    C  OP2', ' G 183  ARG  NH1', -0.405, (253.756, 377.228, 240.648)), (" 2 434    G  H2'", ' 2 435    A  C8 ', -0.405, (275.229, 331.664, 256.345)), (" 2 952    G  H2'", ' 2 953    C  C6 ', -0.405, (358.156, 246.736, 293.233)), (' V  51  LYS  NZ ', ' V  76  ASP  O  ', -0.405, (339.025, 345.927, 335.146)), (" 21762    C  H2'", ' 21763    G  C8 ', -0.405, (254.671, 379.908, 187.489)), (' G 126  ASP  N  ', ' G 126  ASP  OD1', -0.405, (230.479, 345.37, 212.683)), (' E 162  ILE HD11', ' E 169  ILE HG12', -0.404, (288.458, 381.896, 256.988)), (' N 100  LYS  O  ', ' N 103  GLU  HG2', -0.404, (351.308, 304.214, 264.646)), (" 2 798    G  H3'", " 2 799    U  C3'", -0.404, (327.729, 356.125, 271.193)), (" 2 433    A  H2'", ' 2 434    G  C8 ', -0.404, (279.431, 333.189, 258.225)), (" 2 606    G  O2'", ' E  58  ASN  OD1', -0.404, (270.592, 309.033, 325.825)), (' J 174  LYS  HB3', ' J 174  LYS  HE3', -0.404, (239.562, 351.041, 319.903)), (' E 171  ASP  N  ', ' E 171  ASP  OD1', -0.404, (290.532, 387.542, 261.169)), (" 21199    A  H2'", ' 21200    A  C8 ', -0.404, (313.105, 301.536, 312.781)), (' E  45  ILE HG13', ' E  61  VAL HG21', -0.403, (265.828, 365.048, 270.504)), (" 2   5    U  H2'", ' 2   6    G  C8 ', -0.403, (291.143, 313.235, 310.057)), (' H 163  GLN  O  ', ' H 167  GLU  HB2', -0.403, (363.279, 356.19, 308.779)), (' B 175  GLU  OE1', ' B 187  LYS  NZ ', -0.402, (382.912, 282.936, 293.472)), (" 21356    G  H2'", ' 21357    A  C8 ', -0.401, (307.926, 306.462, 322.075)), (" 2 634    A  H2'", ' 2 635    G  C8 ', -0.401, (259.561, 305.549, 316.041)), (" 2 931    C  H2'", ' 2 932    G  C8 ', -0.401, (354.548, 305.061, 290.304)), (' 21013    U  C2 ', ' 21014    G  C8 ', -0.401, (355.754, 319.303, 291.588)), (' J  93  LYS  HB2', ' J  96  TYR  CD2', -0.401, (293.427, 356.967, 314.288)), (" 2 563    G  O2'", " 2 564    A H5''", -0.401, (249.276, 341.267, 303.783)), (' H 109  ARG  HA ', ' H 109  ARG  HD3', -0.4, (331.575, 363.546, 270.945)), (' G 159  ARG  HB3', ' G 171  THR HG22', -0.4, (235.653, 367.713, 228.136)), (' A 170  SER  O  ', ' A 174  MET  HG2', -0.4, (350.024, 321.092, 341.596))]
data['omega'] = [('W', '  29 ', 'PRO', None, (337.65499999999986, 336.427, 296.801)), ('W', '  77 ', 'PRO', None, (318.64499999999987, 334.741, 290.414)), ('X', '  62 ', 'PRO', None, (284.405, 291.802, 305.177))]
data['cablam'] = [('A', '44', 'ASP', 'check CA trace,carbonyls, peptide', 'helix-3\n-GGG-', (360.9, 313.0, 324.4)), ('A', '188', 'THR', 'check CA trace,carbonyls, peptide', 'bend\nHTSS-', (343.0, 336.4, 357.2)), ('A', '206', 'ASP', 'check CA trace,carbonyls, peptide', ' \n---HH', (350.4, 306.4, 349.6)), ('B', '63', 'LYS', 'check CA trace,carbonyls, peptide', 'turn\nHHTT-', (372.5, 254.4, 287.7)), ('B', '92', 'GLN', 'check CA trace,carbonyls, peptide', ' \nEE-SS', (382.6, 250.3, 291.0)), ('B', '93', 'GLY', 'check CA trace,carbonyls, peptide', 'bend\nE-SS-', (381.9, 246.9, 292.5)), ('B', '205', 'TYR', 'check CA trace,carbonyls, peptide', 'bend\nTTS-E', (367.6, 298.6, 301.2)), ('B', '190', 'PRO', 'check CA trace', 'turn\nHTTTH', (378.3, 277.8, 303.5)), ('C', '202', 'THR', 'check CA trace,carbonyls, peptide', ' \nTT--E', (292.8, 339.9, 312.3)), ('C', '134', 'ASN', 'check CA trace', 'bend\n-SSSE', (298.5, 337.6, 329.5)), ('C', '182', 'CYS', 'check CA trace', 'bend\n-SS-E', (308.5, 338.7, 313.9)), ('E', '242', 'LYS', 'check CA trace,carbonyls, peptide', ' \nSS-S-', (288.8, 379.1, 282.5)), ('E', '24', 'THR', 'check CA trace', 'bend\nSSS-S', (266.7, 354.1, 278.6)), ('G', '83', 'CYS', 'check CA trace,carbonyls, peptide', 'turn\n-TT--', (256.5, 336.4, 228.8)), ('H', '55', 'GLY', 'check CA trace,carbonyls, peptide', 'turn\nETTTE', (352.2, 372.8, 311.7)), ('H', '110', 'THR', 'check CA trace,carbonyls, peptide', 'helix-3\n--GGG', (334.7, 363.0, 270.0)), ('I', '38', 'ILE', 'check CA trace', 'strand\n-EESS', (295.3, 344.4, 214.8)), ('J', '92', 'MET', 'check CA trace,carbonyls, peptide', ' \nGG-ST', (289.7, 359.7, 312.7)), ('L', '29', 'GLY', 'check CA trace,carbonyls, peptide', 'helix\nHHH--', (332.9, 365.0, 224.4)), ('L', '42', 'LEU', 'check CA trace', 'turn\n-STT-', (315.2, 360.5, 258.0)), ('N', '80', 'LEU', 'check CA trace,carbonyls, peptide', ' \nHT---', (360.7, 336.0, 265.0)), ('N', '138', 'ASN', 'check CA trace,carbonyls, peptide', 'turn\n-TT--', (339.2, 328.2, 257.7)), ('O', '100', 'THR', 'check CA trace,carbonyls, peptide', ' \nE---T', (346.4, 265.3, 299.3)), ('O', '104', 'ARG', 'check CA trace', 'bend\nTTS--', (342.3, 270.3, 297.8)), ('W', '47', 'ILE', 'check CA trace,carbonyls, peptide', 'bend\nTSS--', (329.0, 344.4, 311.1)), ('W', '57', 'ARG', 'check CA trace', 'bend\n-SSS-', (345.3, 340.4, 292.5)), ('W', '99', 'PHE', 'check CA trace', 'bend\nSSS-E', (313.6, 345.9, 310.9)), ('W', '110', 'ILE', 'check CA trace', 'strand\nS-EEE', (323.7, 350.6, 295.7)), ('X', '86', 'PRO', 'check CA trace,carbonyls, peptide', ' \nE--ST', (269.1, 302.1, 297.6)), ('X', '87', 'ASN', 'check CA trace,carbonyls, peptide', 'bend\n--STT', (266.5, 301.6, 300.3)), ('X', '88', 'ASP', 'check CA trace,carbonyls, peptide', 'turn\n-STTG', (264.7, 299.0, 302.4)), ('X', '108', 'LYS', 'check CA trace,carbonyls, peptide', 'bend\nSSSSS', (283.4, 309.6, 290.3)), ('Y', '67', 'GLY', 'check CA trace,carbonyls, peptide', 'bend\nTSSEE', (252.1, 361.4, 302.0)), ('b', '69', 'GLY', 'check CA trace,carbonyls, peptide', 'bend\n-SSS-', (362.6, 320.2, 294.3)), ('e', '49', 'PHE', 'check CA trace,carbonyls, peptide', ' \n---S-', (279.4, 320.9, 339.4))]
handle_read_draw_probe_dots_unformatted("/home/ccpem/agnel/gisaid/countries_seq/structure_data/emdb/EMD-11321/6zok/Model_validation_7/validation_cootdata/molprobity_probe6zok_0.txt", 0, 0)
show_probe_dots(True, True)
gui = coot_molprobity_todo_list_gui(data=data)
